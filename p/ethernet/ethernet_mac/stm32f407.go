// DO NOT EDIT THIS FILE. GENERATED BY svdxgen.

// +build stm32f407

// Package ethernet_mac provides access to the registers of the Ethernet_MAC peripheral.
//
// Instances:
//  Ethernet_MAC  Ethernet_MAC_BASE  -  ETH,ETH_WKUP  Ethernet: media access control (MAC)
// Registers:
//  0x000 32  MACCR      Ethernet MAC configuration register
//  0x004 32  MACFFR     Ethernet MAC frame filter register
//  0x008 32  MACHTHR    Ethernet MAC hash table high register
//  0x00C 32  MACHTLR    Ethernet MAC hash table low register
//  0x010 32  MACMIIAR   Ethernet MAC MII address register
//  0x014 32  MACMIIDR   Ethernet MAC MII data register
//  0x018 32  MACFCR     Ethernet MAC flow control register
//  0x01C 32  MACVLANTR  Ethernet MAC VLAN tag register
//  0x02C 32  MACPMTCSR  Ethernet MAC PMT control and status register
//  0x034 32  MACDBGR    Ethernet MAC debug register
//  0x038 32  MACSR      Ethernet MAC interrupt status register
//  0x03C 32  MACIMR     Ethernet MAC interrupt mask register
//  0x040 32  MACA0HR    Ethernet MAC address 0 high register
//  0x044 32  MACA0LR    Ethernet MAC address 0 low register
//  0x048 32  MACA1HR    Ethernet MAC address 1 high register
//  0x04C 32  MACA1LR    Ethernet MAC address1 low register
//  0x050 32  MACA2HR    Ethernet MAC address 2 high register
//  0x054 32  MACA2LR    Ethernet MAC address 2 low register
//  0x058 32  MACA3HR    Ethernet MAC address 3 high register
//  0x05C 32  MACA3LR    Ethernet MAC address 3 low register
// Import:
//  github.com/embeddedgo/stm32/p/mmap
package ethernet_mac

const (
	RE   MACCR = 0x01 << 2  //+ RE
	TE   MACCR = 0x01 << 3  //+ TE
	DC   MACCR = 0x01 << 4  //+ DC
	BL   MACCR = 0x03 << 5  //+ BL
	APCS MACCR = 0x01 << 7  //+ APCS
	RD   MACCR = 0x01 << 9  //+ RD
	IPCO MACCR = 0x01 << 10 //+ IPCO
	DM   MACCR = 0x01 << 11 //+ DM
	LM   MACCR = 0x01 << 12 //+ LM
	ROD  MACCR = 0x01 << 13 //+ ROD
	FES  MACCR = 0x01 << 14 //+ FES
	CSD  MACCR = 0x01 << 16 //+ CSD
	IFG  MACCR = 0x07 << 17 //+ IFG
	JD   MACCR = 0x01 << 22 //+ JD
	WD   MACCR = 0x01 << 23 //+ WD
	CSTF MACCR = 0x01 << 25 //+ CSTF
)

const (
	REn   = 2
	TEn   = 3
	DCn   = 4
	BLn   = 5
	APCSn = 7
	RDn   = 9
	IPCOn = 10
	DMn   = 11
	LMn   = 12
	RODn  = 13
	FESn  = 14
	CSDn  = 16
	IFGn  = 17
	JDn   = 22
	WDn   = 23
	CSTFn = 25
)

const (
	PM   MACFFR = 0x01 << 0  //+ PM
	HU   MACFFR = 0x01 << 1  //+ HU
	HM   MACFFR = 0x01 << 2  //+ HM
	DAIF MACFFR = 0x01 << 3  //+ DAIF
	RAM  MACFFR = 0x01 << 4  //+ RAM
	BFD  MACFFR = 0x01 << 5  //+ BFD
	PCF  MACFFR = 0x01 << 6  //+ PCF
	SAIF MACFFR = 0x01 << 7  //+ SAIF
	SAF  MACFFR = 0x01 << 8  //+ SAF
	HPF  MACFFR = 0x01 << 9  //+ HPF
	RA   MACFFR = 0x01 << 31 //+ RA
)

const (
	PMn   = 0
	HUn   = 1
	HMn   = 2
	DAIFn = 3
	RAMn  = 4
	BFDn  = 5
	PCFn  = 6
	SAIFn = 7
	SAFn  = 8
	HPFn  = 9
	RAn   = 31
)

const (
	HTH MACHTHR = 0xFFFFFFFF << 0 //+ HTH
)

const (
	HTHn = 0
)

const (
	HTL MACHTLR = 0xFFFFFFFF << 0 //+ HTL
)

const (
	HTLn = 0
)

const (
	MB MACMIIAR = 0x01 << 0  //+ MB
	MW MACMIIAR = 0x01 << 1  //+ MW
	CR MACMIIAR = 0x07 << 2  //+ CR
	MR MACMIIAR = 0x1F << 6  //+ MR
	PA MACMIIAR = 0x1F << 11 //+ PA
)

const (
	MBn = 0
	MWn = 1
	CRn = 2
	MRn = 6
	PAn = 11
)

const (
	TD MACMIIDR = 0xFFFF << 0 //+ TD
)

const (
	TDn = 0
)

const (
	FCB  MACFCR = 0x01 << 0    //+ FCB
	TFCE MACFCR = 0x01 << 1    //+ TFCE
	RFCE MACFCR = 0x01 << 2    //+ RFCE
	UPFD MACFCR = 0x01 << 3    //+ UPFD
	PLT  MACFCR = 0x03 << 4    //+ PLT
	ZQPD MACFCR = 0x01 << 7    //+ ZQPD
	PT   MACFCR = 0xFFFF << 16 //+ PT
)

const (
	FCBn  = 0
	TFCEn = 1
	RFCEn = 2
	UPFDn = 3
	PLTn  = 4
	ZQPDn = 7
	PTn   = 16
)

const (
	VLANTI MACVLANTR = 0xFFFF << 0 //+ VLANTI
	VLANTC MACVLANTR = 0x01 << 16  //+ VLANTC
)

const (
	VLANTIn = 0
	VLANTCn = 16
)

const (
	PD     MACPMTCSR = 0x01 << 0  //+ PD
	MPE    MACPMTCSR = 0x01 << 1  //+ MPE
	WFE    MACPMTCSR = 0x01 << 2  //+ WFE
	MPR    MACPMTCSR = 0x01 << 5  //+ MPR
	WFR    MACPMTCSR = 0x01 << 6  //+ WFR
	GU     MACPMTCSR = 0x01 << 9  //+ GU
	WFFRPR MACPMTCSR = 0x01 << 31 //+ WFFRPR
)

const (
	PDn     = 0
	MPEn    = 1
	WFEn    = 2
	MPRn    = 5
	WFRn    = 6
	GUn     = 9
	WFFRPRn = 31
)

const (
	CR    MACDBGR = 0x01 << 0 //+ CR
	CSR   MACDBGR = 0x01 << 1 //+ CSR
	ROR   MACDBGR = 0x01 << 2 //+ ROR
	MCF   MACDBGR = 0x01 << 3 //+ MCF
	MCP   MACDBGR = 0x01 << 4 //+ MCP
	MCFHP MACDBGR = 0x01 << 5 //+ MCFHP
)

const (
	CRn    = 0
	CSRn   = 1
	RORn   = 2
	MCFn   = 3
	MCPn   = 4
	MCFHPn = 5
)

const (
	PMTS  MACSR = 0x01 << 3 //+ PMTS
	MMCS  MACSR = 0x01 << 4 //+ MMCS
	MMCRS MACSR = 0x01 << 5 //+ MMCRS
	MMCTS MACSR = 0x01 << 6 //+ MMCTS
	TSTS  MACSR = 0x01 << 9 //+ TSTS
)

const (
	PMTSn  = 3
	MMCSn  = 4
	MMCRSn = 5
	MMCTSn = 6
	TSTSn  = 9
)

const (
	PMTIM MACIMR = 0x01 << 3 //+ PMTIM
	TSTIM MACIMR = 0x01 << 9 //+ TSTIM
)

const (
	PMTIMn = 3
	TSTIMn = 9
)

const (
	MACA0H MACA0HR = 0xFFFF << 0 //+ MAC address0 high
	MO     MACA0HR = 0x01 << 31  //+ Always 1
)

const (
	MACA0Hn = 0
	MOn     = 31
)

const (
	MACA0L MACA0LR = 0xFFFFFFFF << 0 //+ 0
)

const (
	MACA0Ln = 0
)

const (
	MACA1H MACA1HR = 0xFFFF << 0 //+ MACA1H
	MBC    MACA1HR = 0x3F << 24  //+ MBC
	SA     MACA1HR = 0x01 << 30  //+ SA
	AE     MACA1HR = 0x01 << 31  //+ AE
)

const (
	MACA1Hn = 0
	MBCn    = 24
	SAn     = 30
	AEn     = 31
)

const (
	MACA1LR MACA1LR = 0xFFFFFFFF << 0 //+ MACA1LR
)

const (
	MACA1LRn = 0
)

const (
	MAC2AH MACA2HR = 0xFFFF << 0 //+ MAC2AH
	MBC    MACA2HR = 0x3F << 24  //+ MBC
	SA     MACA2HR = 0x01 << 30  //+ SA
	AE     MACA2HR = 0x01 << 31  //+ AE
)

const (
	MAC2AHn = 0
	MBCn    = 24
	SAn     = 30
	AEn     = 31
)

const (
	MACA2L MACA2LR = 0x7FFFFFFF << 0 //+ MACA2L
)

const (
	MACA2Ln = 0
)

const (
	MACA3H MACA3HR = 0xFFFF << 0 //+ MACA3H
	MBC    MACA3HR = 0x3F << 24  //+ MBC
	SA     MACA3HR = 0x01 << 30  //+ SA
	AE     MACA3HR = 0x01 << 31  //+ AE
)

const (
	MACA3Hn = 0
	MBCn    = 24
	SAn     = 30
	AEn     = 31
)

const (
	MBCA3L MACA3LR = 0xFFFFFFFF << 0 //+ MBCA3L
)

const (
	MBCA3Ln = 0
)

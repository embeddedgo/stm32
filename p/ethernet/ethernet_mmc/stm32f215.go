// Code generated by svdxgen; DO NOT EDIT.

//go:build stm32f215

// Package ethernet_mmc provides access to the registers of the Ethernet_MMC peripheral.
//
// Instances:
//
//	Ethernet_MMC  Ethernet_MMC_BASE  -  -  Ethernet: MAC management counters
//
// Registers:
//
//	0x000 32  MMCCR        Ethernet MMC control register
//	0x004 32  MMCRIR       Ethernet MMC receive interrupt register
//	0x008 32  MMCTIR       Ethernet MMC transmit interrupt register
//	0x00C 32  MMCRIMR      Ethernet MMC receive interrupt mask register
//	0x010 32  MMCTIMR      Ethernet MMC transmit interrupt mask register
//	0x04C 32  MMCTGFSCCR   Ethernet MMC transmitted good frames after a single collision counter
//	0x050 32  MMCTGFMSCCR  Ethernet MMC transmitted good frames after more than a single collision
//	0x068 32  MMCTGFCR     Ethernet MMC transmitted good frames counter register
//	0x094 32  MMCRFCECR    Ethernet MMC received frames with CRC error counter register
//	0x098 32  MMCRFAECR    Ethernet MMC received frames with alignment error counter register
//	0x0C4 32  MMCRGUFCR    MMC received good unicast frames counter register
//
// Import:
//
//	github.com/embeddedgo/stm32/p/mmap
package ethernet_mmc

const (
	CR    MMCCR = 0x01 << 0 //+ Counter reset
	CSR   MMCCR = 0x01 << 1 //+ Counter stop rollover
	ROR   MMCCR = 0x01 << 2 //+ Reset on read
	MCF   MMCCR = 0x01 << 3 //+ MMC counter freeze
	MCP   MMCCR = 0x01 << 4 //+ MMC counter preset
	MCFHP MMCCR = 0x01 << 5 //+ MMC counter Full-Half preset
)

const (
	CRn    = 0
	CSRn   = 1
	RORn   = 2
	MCFn   = 3
	MCPn   = 4
	MCFHPn = 5
)

const (
	RFCES MMCRIR = 0x01 << 5  //+ Received frames CRC error status
	RFAES MMCRIR = 0x01 << 6  //+ Received frames alignment error status
	RGUFS MMCRIR = 0x01 << 17 //+ Received Good Unicast Frames Status
)

const (
	RFCESn = 5
	RFAESn = 6
	RGUFSn = 17
)

const (
	TGFSCS  MMCTIR = 0x01 << 14 //+ Transmitted good frames single collision status
	TGFMSCS MMCTIR = 0x01 << 15 //+ Transmitted good frames more single collision status
	TGFS    MMCTIR = 0x01 << 21 //+ Transmitted good frames status
)

const (
	TGFSCSn  = 14
	TGFMSCSn = 15
	TGFSn    = 21
)

const (
	RFCEM MMCRIMR = 0x01 << 5  //+ Received frame CRC error mask
	RFAEM MMCRIMR = 0x01 << 6  //+ Received frames alignment error mask
	RGUFM MMCRIMR = 0x01 << 17 //+ Received good unicast frames mask
)

const (
	RFCEMn = 5
	RFAEMn = 6
	RGUFMn = 17
)

const (
	TGFSCM  MMCTIMR = 0x01 << 14 //+ Transmitted good frames single collision mask
	TGFMSCM MMCTIMR = 0x01 << 15 //+ Transmitted good frames more single collision mask
	TGFM    MMCTIMR = 0x01 << 21 //+ Transmitted good frames mask
)

const (
	TGFSCMn  = 14
	TGFMSCMn = 15
	TGFMn    = 21
)

const (
	TGFSCC MMCTGFSCCR = 0xFFFFFFFF << 0 //+ Transmitted good frames single collision counter
)

const (
	TGFSCCn = 0
)

const (
	TGFMSCC MMCTGFMSCCR = 0xFFFFFFFF << 0 //+ Transmitted good frames more single collision counter
)

const (
	TGFMSCCn = 0
)

const (
	TGFC MMCTGFCR = 0xFFFFFFFF << 0 //+ Transmitted good frames counter
)

const (
	TGFCn = 0
)

const (
	RFCFC MMCRFCECR = 0xFFFFFFFF << 0 //+ Received frames CRC error counter
)

const (
	RFCFCn = 0
)

const (
	RFAEC MMCRFAECR = 0xFFFFFFFF << 0 //+ Received frames alignment error counter
)

const (
	RFAECn = 0
)

const (
	RGUFC MMCRGUFCR = 0xFFFFFFFF << 0 //+ Received good unicast frames counter
)

const (
	RGUFCn = 0
)

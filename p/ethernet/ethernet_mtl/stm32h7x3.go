// DO NOT EDIT THIS FILE. GENERATED BY svdxgen.

//go:build stm32h7x3

// Package ethernet_mtl provides access to the registers of the Ethernet_MTL peripheral.
//
// Instances:
//  Ethernet_MTL  Ethernet_MTL_BASE  -  -  Ethernet: MTL mode register (MTL)
// Registers:
//  0x000 32  MTLOMR       Operating mode Register
//  0x020 32  MTLISR       Interrupt status Register
//  0x100 32  MTLTxQOMR    Tx queue operating mode Register
//  0x104 32  MTLTxQUR     Tx queue underflow register
//  0x108 32  MTLTxQDR     Tx queue debug Register
//  0x12C 32  MTLQICSR     Queue interrupt control status Register
//  0x130 32  MTLRxQOMR    Rx queue operating mode register
//  0x134 32  MTLRxQMPOCR  Rx queue missed packet and overflow counter register
//  0x138 32  MTLRxQDR     Rx queue debug register
// Import:
//  github.com/embeddedgo/stm32/p/mmap
package ethernet_mtl

const (
	DTXSTS  MTLOMR = 0x01 << 1 //+ DTXSTS
	CNTPRST MTLOMR = 0x01 << 8 //+ CNTPRST
	CNTCLR  MTLOMR = 0x01 << 9 //+ CNTCLR
)

const (
	DTXSTSn  = 1
	CNTPRSTn = 8
	CNTCLRn  = 9
)

const (
	Q0IS MTLISR = 0x01 << 0 //+ Queue interrupt status
)

const (
	Q0ISn = 0
)

const (
	FTQ   MTLTxQOMR = 0x01 << 0  //+ Flush Transmit Queue
	TSF   MTLTxQOMR = 0x01 << 1  //+ Transmit Store and Forward
	TXQEN MTLTxQOMR = 0x03 << 2  //+ Transmit Queue Enable
	TTC   MTLTxQOMR = 0x07 << 4  //+ Transmit Threshold Control
	TQS   MTLTxQOMR = 0x07 << 16 //+ Transmit Queue Size
)

const (
	FTQn   = 0
	TSFn   = 1
	TXQENn = 2
	TTCn   = 4
	TQSn   = 16
)

const (
	UFFRMCNT MTLTxQUR = 0x7FF << 0 //+ Underflow Packet Counter
	UFCNTOVF MTLTxQUR = 0x01 << 11 //+ UFCNTOVF
)

const (
	UFFRMCNTn = 0
	UFCNTOVFn = 11
)

const (
	TXQPAUSED MTLTxQDR = 0x01 << 0  //+ TXQPAUSED
	TRCSTS    MTLTxQDR = 0x03 << 1  //+ TRCSTS
	TWCSTS    MTLTxQDR = 0x01 << 3  //+ TWCSTS
	TXQSTS    MTLTxQDR = 0x01 << 4  //+ TXQSTS
	TXSTSFSTS MTLTxQDR = 0x01 << 5  //+ TXSTSFSTS
	PTXQ      MTLTxQDR = 0x07 << 16 //+ PTXQ
	STXSTSF   MTLTxQDR = 0x07 << 20 //+ STXSTSF
)

const (
	TXQPAUSEDn = 0
	TRCSTSn    = 1
	TWCSTSn    = 3
	TXQSTSn    = 4
	TXSTSFSTSn = 5
	PTXQn      = 16
	STXSTSFn   = 20
)

const (
	TXUNFIS MTLQICSR = 0x01 << 0  //+ TXUNFIS
	TXUIE   MTLQICSR = 0x01 << 8  //+ TXUIE
	RXOVFIS MTLQICSR = 0x01 << 16 //+ RXOVFIS
	RXOIE   MTLQICSR = 0x01 << 24 //+ RXOIE
)

const (
	TXUNFISn = 0
	TXUIEn   = 8
	RXOVFISn = 16
	RXOIEn   = 24
)

const (
	RTC        MTLRxQOMR = 0x03 << 0  //+ RTC
	FUP        MTLRxQOMR = 0x01 << 3  //+ FUP
	FEP        MTLRxQOMR = 0x01 << 4  //+ FEP
	RSF        MTLRxQOMR = 0x01 << 5  //+ RSF
	DIS_TCP_EF MTLRxQOMR = 0x01 << 6  //+ DIS_TCP_EF
	EHFC       MTLRxQOMR = 0x01 << 7  //+ EHFC
	RFA        MTLRxQOMR = 0x07 << 8  //+ RFA
	RFD        MTLRxQOMR = 0x07 << 14 //+ RFD
	RQS        MTLRxQOMR = 0x07 << 20 //+ RQS
)

const (
	RTCn        = 0
	FUPn        = 3
	FEPn        = 4
	RSFn        = 5
	DIS_TCP_EFn = 6
	EHFCn       = 7
	RFAn        = 8
	RFDn        = 14
	RQSn        = 20
)

const (
	OVFPKTCNT MTLRxQMPOCR = 0x7FF << 0  //+ OVFPKTCNT
	OVFCNTOVF MTLRxQMPOCR = 0x01 << 11  //+ OVFCNTOVF
	MISPKTCNT MTLRxQMPOCR = 0x7FF << 16 //+ MISPKTCNT
	MISCNTOVF MTLRxQMPOCR = 0x01 << 27  //+ MISCNTOVF
)

const (
	OVFPKTCNTn = 0
	OVFCNTOVFn = 11
	MISPKTCNTn = 16
	MISCNTOVFn = 27
)

const (
	RWCSTS MTLRxQDR = 0x01 << 0    //+ RWCSTS
	RRCSTS MTLRxQDR = 0x03 << 1    //+ RRCSTS
	RXQSTS MTLRxQDR = 0x03 << 4    //+ RXQSTS
	PRXQ   MTLRxQDR = 0x3FFF << 16 //+ PRXQ
)

const (
	RWCSTSn = 0
	RRCSTSn = 1
	RXQSTSn = 4
	PRXQn   = 16
)

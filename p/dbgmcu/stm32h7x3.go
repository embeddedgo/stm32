// Code generated by svdxgen; DO NOT EDIT.

//go:build stm32h7x3

// Package dbgmcu provides access to the registers of the DBGMCU peripheral.
//
// Instances:
//
//	DBGMCU  DBGMCU_BASE  -  -  Microcontroller Debug Unit
//
// Registers:
//
//	0x000 32  IDC       DBGMCU Identity Code Register
//	0x004 32  CR        DBGMCU Configuration Register
//	0x034 32  APB3FZ1   DBGMCU APB3 peripheral freeze register
//	0x03C 32  APB1LFZ1  DBGMCU APB1L peripheral freeze register
//	0x04C 32  APB2FZ1   DBGMCU APB2 peripheral freeze register
//	0x054 32  APB4FZ1   DBGMCU APB4 peripheral freeze register
//
// Import:
//
//	github.com/embeddedgo/stm32/p/mmap
package dbgmcu

const (
	DEV_ID IDC = 0xFFF << 0   //+ Device ID
	REV_ID IDC = 0xFFFF << 16 //+ Revision
)

const (
	DEV_IDn = 0
	REV_IDn = 16
)

const (
	DBGSLEEP_D1 CR = 0x01 << 0  //+ Allow D1 domain debug in Sleep mode
	DBGSTOP_D1  CR = 0x01 << 1  //+ Allow D1 domain debug in Stop mode
	DBGSTBY_D1  CR = 0x01 << 2  //+ Allow D1 domain debug in Standby mode
	DBGSLEEP_D2 CR = 0x01 << 3  //+ Allow D2 domain debug in Sleep mode
	DBGSTOP_D2  CR = 0x01 << 4  //+ Allow D2 domain debug in Stop mode
	DBGSTBY_D2  CR = 0x01 << 5  //+ Allow D2 domain debug in Standby mode
	DBGSTOP_D3  CR = 0x01 << 7  //+ Allow debug in D3 Stop mode
	DBGSTBY_D3  CR = 0x01 << 8  //+ Allow debug in D3 Standby mode
	TRACECLKEN  CR = 0x01 << 20 //+ Trace port clock enable
	D1DBGCKEN   CR = 0x01 << 21 //+ D1 debug clock enable
	D3DBGCKEN   CR = 0x01 << 22 //+ D3 debug clock enable
	TRGOEN      CR = 0x01 << 28 //+ External trigger output enable
)

const (
	DBGSLEEP_D1n = 0
	DBGSTOP_D1n  = 1
	DBGSTBY_D1n  = 2
	DBGSLEEP_D2n = 3
	DBGSTOP_D2n  = 4
	DBGSTBY_D2n  = 5
	DBGSTOP_D3n  = 7
	DBGSTBY_D3n  = 8
	TRACECLKENn  = 20
	D1DBGCKENn   = 21
	D3DBGCKENn   = 22
	TRGOENn      = 28
)

const (
	WWDG1 APB3FZ1 = 0x01 << 6 //+ WWDG1 stop in debug
)

const (
	WWDG1n = 6
)

const (
	DBG_TIM2   APB1LFZ1 = 0x01 << 0  //+ TIM2 stop in debug
	DBG_TIM3   APB1LFZ1 = 0x01 << 1  //+ TIM3 stop in debug
	DBG_TIM4   APB1LFZ1 = 0x01 << 2  //+ TIM4 stop in debug
	DBG_TIM5   APB1LFZ1 = 0x01 << 3  //+ TIM5 stop in debug
	DBG_TIM6   APB1LFZ1 = 0x01 << 4  //+ TIM6 stop in debug
	DBG_TIM7   APB1LFZ1 = 0x01 << 5  //+ TIM7 stop in debug
	DBG_TIM12  APB1LFZ1 = 0x01 << 6  //+ TIM12 stop in debug
	DBG_TIM13  APB1LFZ1 = 0x01 << 7  //+ TIM13 stop in debug
	DBG_TIM14  APB1LFZ1 = 0x01 << 8  //+ TIM14 stop in debug
	DBG_LPTIM1 APB1LFZ1 = 0x01 << 9  //+ LPTIM1 stop in debug
	DBG_I2C1   APB1LFZ1 = 0x01 << 21 //+ I2C1 SMBUS timeout stop in debug
	DBG_I2C2   APB1LFZ1 = 0x01 << 22 //+ I2C2 SMBUS timeout stop in debug
	DBG_I2C3   APB1LFZ1 = 0x01 << 23 //+ I2C3 SMBUS timeout stop in debug
)

const (
	DBG_TIM2n   = 0
	DBG_TIM3n   = 1
	DBG_TIM4n   = 2
	DBG_TIM5n   = 3
	DBG_TIM6n   = 4
	DBG_TIM7n   = 5
	DBG_TIM12n  = 6
	DBG_TIM13n  = 7
	DBG_TIM14n  = 8
	DBG_LPTIM1n = 9
	DBG_I2C1n   = 21
	DBG_I2C2n   = 22
	DBG_I2C3n   = 23
)

const (
	DBG_TIM1  APB2FZ1 = 0x01 << 0  //+ TIM1 stop in debug
	DBG_TIM8  APB2FZ1 = 0x01 << 1  //+ TIM8 stop in debug
	DBG_TIM15 APB2FZ1 = 0x01 << 16 //+ TIM15 stop in debug
	DBG_TIM16 APB2FZ1 = 0x01 << 17 //+ TIM16 stop in debug
	DBG_TIM17 APB2FZ1 = 0x01 << 18 //+ TIM17 stop in debug
	DBG_HRTIM APB2FZ1 = 0x01 << 29 //+ HRTIM stop in debug
)

const (
	DBG_TIM1n  = 0
	DBG_TIM8n  = 1
	DBG_TIM15n = 16
	DBG_TIM16n = 17
	DBG_TIM17n = 18
	DBG_HRTIMn = 29
)

const (
	DBG_I2C4    APB4FZ1 = 0x01 << 7  //+ I2C4 SMBUS timeout stop in debug
	DBG_LPTIM2  APB4FZ1 = 0x01 << 9  //+ LPTIM2 stop in debug
	DBG_LPTIM3  APB4FZ1 = 0x01 << 10 //+ LPTIM2 stop in debug
	DBG_LPTIM4  APB4FZ1 = 0x01 << 11 //+ LPTIM4 stop in debug
	DBG_LPTIM5  APB4FZ1 = 0x01 << 12 //+ LPTIM5 stop in debug
	DBG_RTC     APB4FZ1 = 0x01 << 16 //+ RTC stop in debug
	DBG_WDGLSD1 APB4FZ1 = 0x01 << 18 //+ Independent watchdog for D1 stop in debug
)

const (
	DBG_I2C4n    = 7
	DBG_LPTIM2n  = 9
	DBG_LPTIM3n  = 10
	DBG_LPTIM4n  = 11
	DBG_LPTIM5n  = 12
	DBG_RTCn     = 16
	DBG_WDGLSD1n = 18
)

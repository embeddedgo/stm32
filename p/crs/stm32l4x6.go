// DO NOT EDIT THIS FILE. GENERATED BY svdxgen.

//go:build stm32l4x6

// Package crs provides access to the registers of the CRS peripheral.
//
// Instances:
//  CRS  CRS_BASE  APB1  CRS  Clock recovery system
// Registers:
//  0x000 32  CR    control register
//  0x004 32  CFGR  configuration register
//  0x008 32  ISR   interrupt and status register
//  0x00C 32  ICR   interrupt flag clear register
// Import:
//  github.com/embeddedgo/stm32/p/bus
//  github.com/embeddedgo/stm32/p/mmap
package crs

const (
	SYNCOKIE   CR = 0x01 << 0 //+ SYNC event OK interrupt enable
	SYNCWARNIE CR = 0x01 << 1 //+ SYNC warning interrupt enable
	ERRIE      CR = 0x01 << 2 //+ Synchronization or trimming error interrupt enable
	ESYNCIE    CR = 0x01 << 3 //+ Expected SYNC interrupt enable
	CEN        CR = 0x01 << 5 //+ Frequency error counter enable
	AUTOTRIMEN CR = 0x01 << 6 //+ Automatic trimming enable
	SWSYNC     CR = 0x01 << 7 //+ Generate software SYNC event
	TRIM       CR = 0x3F << 8 //+ HSI48 oscillator smooth trimming
)

const (
	SYNCOKIEn   = 0
	SYNCWARNIEn = 1
	ERRIEn      = 2
	ESYNCIEn    = 3
	CENn        = 5
	AUTOTRIMENn = 6
	SWSYNCn     = 7
	TRIMn       = 8
)

const (
	RELOAD  CFGR = 0xFFFF << 0 //+ Counter reload value
	FELIM   CFGR = 0xFF << 16  //+ Frequency error limit
	SYNCDIV CFGR = 0x07 << 24  //+ SYNC divider
	SYNCSRC CFGR = 0x03 << 28  //+ SYNC signal source selection
	SYNCPOL CFGR = 0x01 << 31  //+ SYNC polarity selection
)

const (
	RELOADn  = 0
	FELIMn   = 16
	SYNCDIVn = 24
	SYNCSRCn = 28
	SYNCPOLn = 31
)

const (
	SYNCOKF   ISR = 0x01 << 0    //+ SYNC event OK flag
	SYNCWARNF ISR = 0x01 << 1    //+ SYNC warning flag
	ERRF      ISR = 0x01 << 2    //+ Error flag
	ESYNCF    ISR = 0x01 << 3    //+ Expected SYNC flag
	SYNCERR   ISR = 0x01 << 8    //+ SYNC error
	SYNCMISS  ISR = 0x01 << 9    //+ SYNC missed
	TRIMOVF   ISR = 0x01 << 10   //+ Trimming overflow or underflow
	FEDIR     ISR = 0x01 << 15   //+ Frequency error direction
	FECAP     ISR = 0xFFFF << 16 //+ Frequency error capture
)

const (
	SYNCOKFn   = 0
	SYNCWARNFn = 1
	ERRFn      = 2
	ESYNCFn    = 3
	SYNCERRn   = 8
	SYNCMISSn  = 9
	TRIMOVFn   = 10
	FEDIRn     = 15
	FECAPn     = 16
)

const (
	SYNCOKC   ICR = 0x01 << 0 //+ SYNC event OK clear flag
	SYNCWARNC ICR = 0x01 << 1 //+ SYNC warning clear flag
	ERRC      ICR = 0x01 << 2 //+ Error clear flag
	ESYNCC    ICR = 0x01 << 3 //+ Expected SYNC clear flag
)

const (
	SYNCOKCn   = 0
	SYNCWARNCn = 1
	ERRCn      = 2
	ESYNCCn    = 3
)

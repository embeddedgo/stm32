// DO NOT EDIT THIS FILE. GENERATED BY xgen.

//go:build stm32g471xx

package syscfg

import (
	"embedded/mmio"
	"unsafe"

	"github.com/embeddedgo/stm32/p/bus"
	"github.com/embeddedgo/stm32/p/mmap"
)

type Periph struct {
	MEMRMP mmio.R32[MEMRMP]
	CFGR1  mmio.R32[CFGR1]
	EXTICR [4]mmio.R32[uint32]
	SCSR   mmio.R32[SCSR]
	CFGR2  mmio.R32[CFGR2]
	SWPR   mmio.R32[SWPR]
	SKR    mmio.R32[SKR]
}

func SYSCFG() *Periph { return (*Periph)(unsafe.Pointer(uintptr(mmap.SYSCFG_BASE))) }

func (p *Periph) BaseAddr() uintptr {
	return uintptr(unsafe.Pointer(p))
}

func (p *Periph) Bus() bus.Bus {
	return bus.APB2
}

type MEMRMP uint32

func MEM_MODE_(p *Periph) mmio.RM32[MEMRMP] { return mmio.RM32[MEMRMP]{&p.MEMRMP, MEM_MODE} }
func FB_mode_(p *Periph) mmio.RM32[MEMRMP]  { return mmio.RM32[MEMRMP]{&p.MEMRMP, FB_mode} }

type CFGR1 uint32

func BOOSTEN_(p *Periph) mmio.RM32[CFGR1]     { return mmio.RM32[CFGR1]{&p.CFGR1, BOOSTEN} }
func ANASWVDD_(p *Periph) mmio.RM32[CFGR1]    { return mmio.RM32[CFGR1]{&p.CFGR1, ANASWVDD} }
func I2C_PB6_FMP_(p *Periph) mmio.RM32[CFGR1] { return mmio.RM32[CFGR1]{&p.CFGR1, I2C_PB6_FMP} }
func I2C_PB7_FMP_(p *Periph) mmio.RM32[CFGR1] { return mmio.RM32[CFGR1]{&p.CFGR1, I2C_PB7_FMP} }
func I2C_PB8_FMP_(p *Periph) mmio.RM32[CFGR1] { return mmio.RM32[CFGR1]{&p.CFGR1, I2C_PB8_FMP} }
func I2C_PB9_FMP_(p *Periph) mmio.RM32[CFGR1] { return mmio.RM32[CFGR1]{&p.CFGR1, I2C_PB9_FMP} }
func I2C1_FMP_(p *Periph) mmio.RM32[CFGR1]    { return mmio.RM32[CFGR1]{&p.CFGR1, I2C1_FMP} }
func I2C2_FMP_(p *Periph) mmio.RM32[CFGR1]    { return mmio.RM32[CFGR1]{&p.CFGR1, I2C2_FMP} }
func I2C3_FMP_(p *Periph) mmio.RM32[CFGR1]    { return mmio.RM32[CFGR1]{&p.CFGR1, I2C3_FMP} }
func I2C4_FMP_(p *Periph) mmio.RM32[CFGR1]    { return mmio.RM32[CFGR1]{&p.CFGR1, I2C4_FMP} }
func FPU_IE_(p *Periph) mmio.RM32[CFGR1]      { return mmio.RM32[CFGR1]{&p.CFGR1, FPU_IE} }

type SCSR uint32

func CCMER_(p *Periph) mmio.RM32[SCSR]  { return mmio.RM32[SCSR]{&p.SCSR, CCMER} }
func CCMBSY_(p *Periph) mmio.RM32[SCSR] { return mmio.RM32[SCSR]{&p.SCSR, CCMBSY} }

type CFGR2 uint32

func CLL_(p *Periph) mmio.RM32[CFGR2]  { return mmio.RM32[CFGR2]{&p.CFGR2, CLL} }
func SPL_(p *Periph) mmio.RM32[CFGR2]  { return mmio.RM32[CFGR2]{&p.CFGR2, SPL} }
func PVDL_(p *Periph) mmio.RM32[CFGR2] { return mmio.RM32[CFGR2]{&p.CFGR2, PVDL} }
func ECCL_(p *Periph) mmio.RM32[CFGR2] { return mmio.RM32[CFGR2]{&p.CFGR2, ECCL} }
func SPF_(p *Periph) mmio.RM32[CFGR2]  { return mmio.RM32[CFGR2]{&p.CFGR2, SPF} }

type SWPR uint32

func Page0_WP_(p *Periph) mmio.RM32[SWPR]  { return mmio.RM32[SWPR]{&p.SWPR, Page0_WP} }
func Page1_WP_(p *Periph) mmio.RM32[SWPR]  { return mmio.RM32[SWPR]{&p.SWPR, Page1_WP} }
func Page2_WP_(p *Periph) mmio.RM32[SWPR]  { return mmio.RM32[SWPR]{&p.SWPR, Page2_WP} }
func Page3_WP_(p *Periph) mmio.RM32[SWPR]  { return mmio.RM32[SWPR]{&p.SWPR, Page3_WP} }
func Page4_WP_(p *Periph) mmio.RM32[SWPR]  { return mmio.RM32[SWPR]{&p.SWPR, Page4_WP} }
func Page5_WP_(p *Periph) mmio.RM32[SWPR]  { return mmio.RM32[SWPR]{&p.SWPR, Page5_WP} }
func Page6_WP_(p *Periph) mmio.RM32[SWPR]  { return mmio.RM32[SWPR]{&p.SWPR, Page6_WP} }
func Page7_WP_(p *Periph) mmio.RM32[SWPR]  { return mmio.RM32[SWPR]{&p.SWPR, Page7_WP} }
func Page8_WP_(p *Periph) mmio.RM32[SWPR]  { return mmio.RM32[SWPR]{&p.SWPR, Page8_WP} }
func Page9_WP_(p *Periph) mmio.RM32[SWPR]  { return mmio.RM32[SWPR]{&p.SWPR, Page9_WP} }
func Page10_WP_(p *Periph) mmio.RM32[SWPR] { return mmio.RM32[SWPR]{&p.SWPR, Page10_WP} }
func Page11_WP_(p *Periph) mmio.RM32[SWPR] { return mmio.RM32[SWPR]{&p.SWPR, Page11_WP} }
func Page12_WP_(p *Periph) mmio.RM32[SWPR] { return mmio.RM32[SWPR]{&p.SWPR, Page12_WP} }
func Page13_WP_(p *Periph) mmio.RM32[SWPR] { return mmio.RM32[SWPR]{&p.SWPR, Page13_WP} }
func Page14_WP_(p *Periph) mmio.RM32[SWPR] { return mmio.RM32[SWPR]{&p.SWPR, Page14_WP} }
func Page15_WP_(p *Periph) mmio.RM32[SWPR] { return mmio.RM32[SWPR]{&p.SWPR, Page15_WP} }
func Page16_WP_(p *Periph) mmio.RM32[SWPR] { return mmio.RM32[SWPR]{&p.SWPR, Page16_WP} }
func Page17_WP_(p *Periph) mmio.RM32[SWPR] { return mmio.RM32[SWPR]{&p.SWPR, Page17_WP} }
func Page18_WP_(p *Periph) mmio.RM32[SWPR] { return mmio.RM32[SWPR]{&p.SWPR, Page18_WP} }
func Page19_WP_(p *Periph) mmio.RM32[SWPR] { return mmio.RM32[SWPR]{&p.SWPR, Page19_WP} }
func Page20_WP_(p *Periph) mmio.RM32[SWPR] { return mmio.RM32[SWPR]{&p.SWPR, Page20_WP} }
func Page21_WP_(p *Periph) mmio.RM32[SWPR] { return mmio.RM32[SWPR]{&p.SWPR, Page21_WP} }
func Page22_WP_(p *Periph) mmio.RM32[SWPR] { return mmio.RM32[SWPR]{&p.SWPR, Page22_WP} }
func Page23_WP_(p *Periph) mmio.RM32[SWPR] { return mmio.RM32[SWPR]{&p.SWPR, Page23_WP} }
func Page24_WP_(p *Periph) mmio.RM32[SWPR] { return mmio.RM32[SWPR]{&p.SWPR, Page24_WP} }
func Page25_WP_(p *Periph) mmio.RM32[SWPR] { return mmio.RM32[SWPR]{&p.SWPR, Page25_WP} }
func Page26_WP_(p *Periph) mmio.RM32[SWPR] { return mmio.RM32[SWPR]{&p.SWPR, Page26_WP} }
func Page27_WP_(p *Periph) mmio.RM32[SWPR] { return mmio.RM32[SWPR]{&p.SWPR, Page27_WP} }
func Page28_WP_(p *Periph) mmio.RM32[SWPR] { return mmio.RM32[SWPR]{&p.SWPR, Page28_WP} }
func Page29_WP_(p *Periph) mmio.RM32[SWPR] { return mmio.RM32[SWPR]{&p.SWPR, Page29_WP} }
func Page30_WP_(p *Periph) mmio.RM32[SWPR] { return mmio.RM32[SWPR]{&p.SWPR, Page30_WP} }
func Page31_WP_(p *Periph) mmio.RM32[SWPR] { return mmio.RM32[SWPR]{&p.SWPR, Page31_WP} }

type SKR uint32

func KEY_(p *Periph) mmio.RM32[SKR] { return mmio.RM32[SKR]{&p.SKR, KEY} }

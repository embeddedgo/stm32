// DO NOT EDIT THIS FILE. GENERATED BY xgen.

//go:build stm32h7x3

package syscfg

import (
	"embedded/mmio"
	"unsafe"

	"github.com/embeddedgo/stm32/p/bus"
	"github.com/embeddedgo/stm32/p/mmap"
)

type Periph struct {
	_      uint32
	PMCR   mmio.R32[PMCR]
	EXTICR [4]mmio.R32[uint32]
	_      [2]uint32
	CCCSR  mmio.R32[CCCSR]
	CCVR   mmio.R32[CCVR]
	CCCR   mmio.R32[CCCR]
	PWRCR  mmio.R32[PWRCR]
	_      [61]uint32
	PKGR   mmio.R32[PKGR]
	_      [118]uint32
	UR0    mmio.R32[UR0]
	_      uint32
	UR2    mmio.R32[UR2]
	UR3    mmio.R32[UR3]
	UR4    mmio.R32[UR4]
	UR5    mmio.R32[UR5]
	UR6    mmio.R32[UR6]
	UR7    mmio.R32[UR7]
	UR8    mmio.R32[UR8]
	UR9    mmio.R32[UR9]
	UR10   mmio.R32[UR10]
	UR11   mmio.R32[UR11]
	UR12   mmio.R32[UR12]
	UR13   mmio.R32[UR13]
	UR14   mmio.R32[UR14]
	UR15   mmio.R32[UR15]
	UR16   mmio.R32[UR16]
	UR17   mmio.R32[UR17]
}

func SYSCFG() *Periph { return (*Periph)(unsafe.Pointer(uintptr(mmap.SYSCFG_BASE))) }

func (p *Periph) BaseAddr() uintptr {
	return uintptr(unsafe.Pointer(p))
}

func (p *Periph) Bus() bus.Bus {
	return bus.APB4
}

type PMCR uint32

func I2C1FMP_(p *Periph) mmio.RM32[PMCR]     { return mmio.RM32[PMCR]{&p.PMCR, I2C1FMP} }
func I2C2FMP_(p *Periph) mmio.RM32[PMCR]     { return mmio.RM32[PMCR]{&p.PMCR, I2C2FMP} }
func I2C3FMP_(p *Periph) mmio.RM32[PMCR]     { return mmio.RM32[PMCR]{&p.PMCR, I2C3FMP} }
func I2C4FMP_(p *Periph) mmio.RM32[PMCR]     { return mmio.RM32[PMCR]{&p.PMCR, I2C4FMP} }
func PB6FMP_(p *Periph) mmio.RM32[PMCR]      { return mmio.RM32[PMCR]{&p.PMCR, PB6FMP} }
func PB7FMP_(p *Periph) mmio.RM32[PMCR]      { return mmio.RM32[PMCR]{&p.PMCR, PB7FMP} }
func PB8FMP_(p *Periph) mmio.RM32[PMCR]      { return mmio.RM32[PMCR]{&p.PMCR, PB8FMP} }
func PB9FMP_(p *Periph) mmio.RM32[PMCR]      { return mmio.RM32[PMCR]{&p.PMCR, PB9FMP} }
func BOOSTE_(p *Periph) mmio.RM32[PMCR]      { return mmio.RM32[PMCR]{&p.PMCR, BOOSTE} }
func BOOSTVDDSEL_(p *Periph) mmio.RM32[PMCR] { return mmio.RM32[PMCR]{&p.PMCR, BOOSTVDDSEL} }
func EPIS_(p *Periph) mmio.RM32[PMCR]        { return mmio.RM32[PMCR]{&p.PMCR, EPIS} }
func PA0SO_(p *Periph) mmio.RM32[PMCR]       { return mmio.RM32[PMCR]{&p.PMCR, PA0SO} }
func PA1SO_(p *Periph) mmio.RM32[PMCR]       { return mmio.RM32[PMCR]{&p.PMCR, PA1SO} }
func PC2SO_(p *Periph) mmio.RM32[PMCR]       { return mmio.RM32[PMCR]{&p.PMCR, PC2SO} }
func PC3SO_(p *Periph) mmio.RM32[PMCR]       { return mmio.RM32[PMCR]{&p.PMCR, PC3SO} }

type CCCSR uint32

func EN_(p *Periph) mmio.RM32[CCCSR]    { return mmio.RM32[CCCSR]{&p.CCCSR, EN} }
func CS_(p *Periph) mmio.RM32[CCCSR]    { return mmio.RM32[CCCSR]{&p.CCCSR, CS} }
func READY_(p *Periph) mmio.RM32[CCCSR] { return mmio.RM32[CCCSR]{&p.CCCSR, READY} }
func HSLV_(p *Periph) mmio.RM32[CCCSR]  { return mmio.RM32[CCCSR]{&p.CCCSR, HSLV} }

type CCVR uint32

func NCV_(p *Periph) mmio.RM32[CCVR] { return mmio.RM32[CCVR]{&p.CCVR, NCV} }
func PCV_(p *Periph) mmio.RM32[CCVR] { return mmio.RM32[CCVR]{&p.CCVR, PCV} }

type CCCR uint32

func NCC_(p *Periph) mmio.RM32[CCCR] { return mmio.RM32[CCCR]{&p.CCCR, NCC} }
func PCC_(p *Periph) mmio.RM32[CCCR] { return mmio.RM32[CCCR]{&p.CCCR, PCC} }

type PWRCR uint32

func ODEN_(p *Periph) mmio.RM32[PWRCR] { return mmio.RM32[PWRCR]{&p.PWRCR, ODEN} }

type PKGR uint32

func PKG_(p *Periph) mmio.RM32[PKGR] { return mmio.RM32[PKGR]{&p.PKGR, PKG} }

type UR0 uint32

func BKS_(p *Periph) mmio.RM32[UR0] { return mmio.RM32[UR0]{&p.UR0, BKS} }
func RDP_(p *Periph) mmio.RM32[UR0] { return mmio.RM32[UR0]{&p.UR0, RDP} }

type UR2 uint32

func BORH_(p *Periph) mmio.RM32[UR2]      { return mmio.RM32[UR2]{&p.UR2, BORH} }
func BOOT_ADD0_(p *Periph) mmio.RM32[UR2] { return mmio.RM32[UR2]{&p.UR2, BOOT_ADD0} }

type UR3 uint32

func BOOT_ADD1_(p *Periph) mmio.RM32[UR3] { return mmio.RM32[UR3]{&p.UR3, BOOT_ADD1} }

type UR4 uint32

func MEPAD_1_(p *Periph) mmio.RM32[UR4] { return mmio.RM32[UR4]{&p.UR4, MEPAD_1} }

type UR5 uint32

func MESAD_1_(p *Periph) mmio.RM32[UR5] { return mmio.RM32[UR5]{&p.UR5, MESAD_1} }
func WRPN_1_(p *Periph) mmio.RM32[UR5]  { return mmio.RM32[UR5]{&p.UR5, WRPN_1} }

type UR6 uint32

func PA_BEG_1_(p *Periph) mmio.RM32[UR6] { return mmio.RM32[UR6]{&p.UR6, PA_BEG_1} }
func PA_END_1_(p *Periph) mmio.RM32[UR6] { return mmio.RM32[UR6]{&p.UR6, PA_END_1} }

type UR7 uint32

func SA_BEG_1_(p *Periph) mmio.RM32[UR7] { return mmio.RM32[UR7]{&p.UR7, SA_BEG_1} }
func SA_END_1_(p *Periph) mmio.RM32[UR7] { return mmio.RM32[UR7]{&p.UR7, SA_END_1} }

type UR8 uint32

func MEPAD_2_(p *Periph) mmio.RM32[UR8] { return mmio.RM32[UR8]{&p.UR8, MEPAD_2} }
func MESAD_2_(p *Periph) mmio.RM32[UR8] { return mmio.RM32[UR8]{&p.UR8, MESAD_2} }

type UR9 uint32

func WRPN_2_(p *Periph) mmio.RM32[UR9]   { return mmio.RM32[UR9]{&p.UR9, WRPN_2} }
func PA_BEG_2_(p *Periph) mmio.RM32[UR9] { return mmio.RM32[UR9]{&p.UR9, PA_BEG_2} }

type UR10 uint32

func PA_END_2_(p *Periph) mmio.RM32[UR10] { return mmio.RM32[UR10]{&p.UR10, PA_END_2} }
func SA_BEG_2_(p *Periph) mmio.RM32[UR10] { return mmio.RM32[UR10]{&p.UR10, SA_BEG_2} }

type UR11 uint32

func SA_END_2_(p *Periph) mmio.RM32[UR11] { return mmio.RM32[UR11]{&p.UR11, SA_END_2} }
func IWDG1M_(p *Periph) mmio.RM32[UR11]   { return mmio.RM32[UR11]{&p.UR11, IWDG1M} }

type UR12 uint32

func SECURE_(p *Periph) mmio.RM32[UR12] { return mmio.RM32[UR12]{&p.UR12, SECURE} }

type UR13 uint32

func SDRS_(p *Periph) mmio.RM32[UR13]    { return mmio.RM32[UR13]{&p.UR13, SDRS} }
func D1SBRST_(p *Periph) mmio.RM32[UR13] { return mmio.RM32[UR13]{&p.UR13, D1SBRST} }

type UR14 uint32

func D1STPRST_(p *Periph) mmio.RM32[UR14] { return mmio.RM32[UR14]{&p.UR14, D1STPRST} }

type UR15 uint32

func FZIWDGSTB_(p *Periph) mmio.RM32[UR15] { return mmio.RM32[UR15]{&p.UR15, FZIWDGSTB} }

type UR16 uint32

func FZIWDGSTP_(p *Periph) mmio.RM32[UR16] { return mmio.RM32[UR16]{&p.UR16, FZIWDGSTP} }
func PKP_(p *Periph) mmio.RM32[UR16]       { return mmio.RM32[UR16]{&p.UR16, PKP} }

type UR17 uint32

func IO_HSLV_(p *Periph) mmio.RM32[UR17] { return mmio.RM32[UR17]{&p.UR17, IO_HSLV} }

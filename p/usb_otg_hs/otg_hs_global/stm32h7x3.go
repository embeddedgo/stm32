// DO NOT EDIT THIS FILE. GENERATED BY svdxgen.

//go:build stm32h7x3

// Package otg_hs_global provides access to the registers of the OTG1_HS_GLOBAL peripheral.
//
// Instances:
//
//	OTG1_HS_GLOBAL  OTG1_HS_GLOBAL_BASE  -  OTG_HS_EP1_OUT,OTG_HS_EP1_IN,OTG_HS_WKUP,OTG_HS  USB 1 on the go high speed
//	OTG2_HS_GLOBAL  OTG2_HS_GLOBAL_BASE  -  OTG_FS_EP1_OUT,OTG_FS_EP1_IN,OTG_FS_WKUP         USB 1 on the go high speed
//
// Registers:
//
//	0x000 32  OTG_HS_GOTGCTL          OTG_HS control and status register
//	0x004 32  OTG_HS_GOTGINT          OTG_HS interrupt register
//	0x008 32  OTG_HS_GAHBCFG          OTG_HS AHB configuration register
//	0x00C 32  OTG_HS_GUSBCFG          OTG_HS USB configuration register
//	0x010 32  OTG_HS_GRSTCTL          OTG_HS reset register
//	0x014 32  OTG_HS_GINTSTS          OTG_HS core interrupt register
//	0x018 32  OTG_HS_GINTMSK          OTG_HS interrupt mask register
//	0x01C 32  OTG_HS_GRXSTSR_Host     OTG_HS Receive status debug read register (host mode)
//	0x01C 32  OTG_HS_GRXSTSR_Device   OTG_HS Receive status debug read register (peripheral mode mode)
//	0x020 32  OTG_HS_GRXSTSP_Host     OTG_HS status read and pop register (host mode)
//	0x020 32  OTG_HS_GRXSTSP_Device   OTG_HS status read and pop register (peripheral mode)
//	0x024 32  OTG_HS_GRXFSIZ          OTG_HS Receive FIFO size register
//	0x028 32  OTG_HS_HNPTXFSIZ_Host   OTG_HS nonperiodic transmit FIFO size register (host mode)
//	0x028 32  OTG_HS_DIEPTXF0_Device  Endpoint 0 transmit FIFO size (peripheral mode)
//	0x02C 32  OTG_HS_GNPTXSTS         OTG_HS nonperiodic transmit FIFO/queue status register
//	0x038 32  OTG_HS_GCCFG            OTG_HS general core configuration register
//	0x03C 32  OTG_HS_CID              OTG_HS core ID register
//	0x054 32  OTG_HS_GLPMCFG          OTG core LPM configuration register
//	0x100 32  OTG_HS_HPTXFSIZ         OTG_HS Host periodic transmit FIFO size register
//	0x104 32  OTG_HS_DIEPTXF1         OTG_HS device IN endpoint transmit FIFO size register
//	0x108 32  OTG_HS_DIEPTXF2         OTG_HS device IN endpoint transmit FIFO size register
//	0x10C 32  OTG_HS_DIEPTXF3         OTG_HS device IN endpoint transmit FIFO size register
//	0x110 32  OTG_HS_DIEPTXF4         OTG_HS device IN endpoint transmit FIFO size register
//	0x114 32  OTG_HS_DIEPTXF5         OTG_HS device IN endpoint transmit FIFO size register
//	0x118 32  OTG_HS_DIEPTXF6         OTG_HS device IN endpoint transmit FIFO size register
//	0x11C 32  OTG_HS_DIEPTXF7         OTG_HS device IN endpoint transmit FIFO size register
//	0x120 32  OTG_DIEPTXF8
//
// Import:
//
//	github.com/embeddedgo/stm32/p/mmap
package otg_hs_global

const (
	SRQSCS    OTG_HS_GOTGCTL = 0x01 << 0  //+ Session request success
	SRQ       OTG_HS_GOTGCTL = 0x01 << 1  //+ Session request
	VBVALOEN  OTG_HS_GOTGCTL = 0x01 << 2  //+ VBUS valid override enable
	VBVALOVAL OTG_HS_GOTGCTL = 0x01 << 3  //+ VBUS valid override value
	AVALOEN   OTG_HS_GOTGCTL = 0x01 << 4  //+ A-peripheral session valid override enable
	AVALOVAL  OTG_HS_GOTGCTL = 0x01 << 5  //+ A-peripheral session valid override value
	BVALOEN   OTG_HS_GOTGCTL = 0x01 << 6  //+ B-peripheral session valid override enable.
	BVALOVAL  OTG_HS_GOTGCTL = 0x01 << 7  //+ B-peripheral session valid override value
	HNGSCS    OTG_HS_GOTGCTL = 0x01 << 8  //+ Host negotiation success
	HNPRQ     OTG_HS_GOTGCTL = 0x01 << 9  //+ HNP request
	HSHNPEN   OTG_HS_GOTGCTL = 0x01 << 10 //+ Host set HNP enable
	DHNPEN    OTG_HS_GOTGCTL = 0x01 << 11 //+ Device HNP enabled
	EHEN      OTG_HS_GOTGCTL = 0x01 << 12 //+ Embedded host enable
	CIDSTS    OTG_HS_GOTGCTL = 0x01 << 16 //+ Connector ID status
	DBCT      OTG_HS_GOTGCTL = 0x01 << 17 //+ Long/short debounce time
	ASVLD     OTG_HS_GOTGCTL = 0x01 << 18 //+ A-session valid
	BSVLD     OTG_HS_GOTGCTL = 0x01 << 19 //+ B-session valid
	OTGVER    OTG_HS_GOTGCTL = 0x01 << 20 //+ OTG version
	CURMOD    OTG_HS_GOTGCTL = 0x01 << 21 //+ Current mode of operation
)

const (
	SRQSCSn    = 0
	SRQn       = 1
	VBVALOENn  = 2
	VBVALOVALn = 3
	AVALOENn   = 4
	AVALOVALn  = 5
	BVALOENn   = 6
	BVALOVALn  = 7
	HNGSCSn    = 8
	HNPRQn     = 9
	HSHNPENn   = 10
	DHNPENn    = 11
	EHENn      = 12
	CIDSTSn    = 16
	DBCTn      = 17
	ASVLDn     = 18
	BSVLDn     = 19
	OTGVERn    = 20
	CURMODn    = 21
)

const (
	SEDET   OTG_HS_GOTGINT = 0x01 << 2  //+ Session end detected
	SRSSCHG OTG_HS_GOTGINT = 0x01 << 8  //+ Session request success status change
	HNSSCHG OTG_HS_GOTGINT = 0x01 << 9  //+ Host negotiation success status change
	HNGDET  OTG_HS_GOTGINT = 0x01 << 17 //+ Host negotiation detected
	ADTOCHG OTG_HS_GOTGINT = 0x01 << 18 //+ A-device timeout change
	DBCDNE  OTG_HS_GOTGINT = 0x01 << 19 //+ Debounce done
	IDCHNG  OTG_HS_GOTGINT = 0x01 << 20 //+ ID input pin changed
)

const (
	SEDETn   = 2
	SRSSCHGn = 8
	HNSSCHGn = 9
	HNGDETn  = 17
	ADTOCHGn = 18
	DBCDNEn  = 19
	IDCHNGn  = 20
)

const (
	GINT     OTG_HS_GAHBCFG = 0x01 << 0 //+ Global interrupt mask
	HBSTLEN  OTG_HS_GAHBCFG = 0x0F << 1 //+ Burst length/type
	DMAEN    OTG_HS_GAHBCFG = 0x01 << 5 //+ DMA enable
	TXFELVL  OTG_HS_GAHBCFG = 0x01 << 7 //+ TxFIFO empty level
	PTXFELVL OTG_HS_GAHBCFG = 0x01 << 8 //+ Periodic TxFIFO empty level
)

const (
	GINTn     = 0
	HBSTLENn  = 1
	DMAENn    = 5
	TXFELVLn  = 7
	PTXFELVLn = 8
)

const (
	TOCAL      OTG_HS_GUSBCFG = 0x07 << 0  //+ FS timeout calibration
	PHYSEL     OTG_HS_GUSBCFG = 0x01 << 6  //+ USB 2.0 high-speed ULPI PHY or USB 1.1 full-speed serial transceiver select
	SRPCAP     OTG_HS_GUSBCFG = 0x01 << 8  //+ SRP-capable
	HNPCAP     OTG_HS_GUSBCFG = 0x01 << 9  //+ HNP-capable
	TRDT       OTG_HS_GUSBCFG = 0x0F << 10 //+ USB turnaround time
	PHYLPCS    OTG_HS_GUSBCFG = 0x01 << 15 //+ PHY Low-power clock select
	ULPIFSLS   OTG_HS_GUSBCFG = 0x01 << 17 //+ ULPI FS/LS select
	ULPIAR     OTG_HS_GUSBCFG = 0x01 << 18 //+ ULPI Auto-resume
	ULPICSM    OTG_HS_GUSBCFG = 0x01 << 19 //+ ULPI Clock SuspendM
	ULPIEVBUSD OTG_HS_GUSBCFG = 0x01 << 20 //+ ULPI External VBUS Drive
	ULPIEVBUSI OTG_HS_GUSBCFG = 0x01 << 21 //+ ULPI external VBUS indicator
	TSDPS      OTG_HS_GUSBCFG = 0x01 << 22 //+ TermSel DLine pulsing selection
	PCCI       OTG_HS_GUSBCFG = 0x01 << 23 //+ Indicator complement
	PTCI       OTG_HS_GUSBCFG = 0x01 << 24 //+ Indicator pass through
	ULPIIPD    OTG_HS_GUSBCFG = 0x01 << 25 //+ ULPI interface protect disable
	FHMOD      OTG_HS_GUSBCFG = 0x01 << 29 //+ Forced host mode
	FDMOD      OTG_HS_GUSBCFG = 0x01 << 30 //+ Forced peripheral mode
)

const (
	TOCALn      = 0
	PHYSELn     = 6
	SRPCAPn     = 8
	HNPCAPn     = 9
	TRDTn       = 10
	PHYLPCSn    = 15
	ULPIFSLSn   = 17
	ULPIARn     = 18
	ULPICSMn    = 19
	ULPIEVBUSDn = 20
	ULPIEVBUSIn = 21
	TSDPSn      = 22
	PCCIn       = 23
	PTCIn       = 24
	ULPIIPDn    = 25
	FHMODn      = 29
	FDMODn      = 30
)

const (
	CSRST   OTG_HS_GRSTCTL = 0x01 << 0  //+ Core soft reset
	HSRST   OTG_HS_GRSTCTL = 0x01 << 1  //+ HCLK soft reset
	FCRST   OTG_HS_GRSTCTL = 0x01 << 2  //+ Host frame counter reset
	RXFFLSH OTG_HS_GRSTCTL = 0x01 << 4  //+ RxFIFO flush
	TXFFLSH OTG_HS_GRSTCTL = 0x01 << 5  //+ TxFIFO flush
	TXFNUM  OTG_HS_GRSTCTL = 0x1F << 6  //+ TxFIFO number
	DMAREQ  OTG_HS_GRSTCTL = 0x01 << 30 //+ DMA request signal enabled for USB OTG HS
	AHBIDL  OTG_HS_GRSTCTL = 0x01 << 31 //+ AHB master idle
)

const (
	CSRSTn   = 0
	HSRSTn   = 1
	FCRSTn   = 2
	RXFFLSHn = 4
	TXFFLSHn = 5
	TXFNUMn  = 6
	DMAREQn  = 30
	AHBIDLn  = 31
)

const (
	CMOD              OTG_HS_GINTSTS = 0x01 << 0  //+ Current mode of operation
	MMIS              OTG_HS_GINTSTS = 0x01 << 1  //+ Mode mismatch interrupt
	OTGINT            OTG_HS_GINTSTS = 0x01 << 2  //+ OTG interrupt
	SOF               OTG_HS_GINTSTS = 0x01 << 3  //+ Start of frame
	RXFLVL            OTG_HS_GINTSTS = 0x01 << 4  //+ RxFIFO nonempty
	NPTXFE            OTG_HS_GINTSTS = 0x01 << 5  //+ Nonperiodic TxFIFO empty
	GINAKEFF          OTG_HS_GINTSTS = 0x01 << 6  //+ Global IN nonperiodic NAK effective
	BOUTNAKEFF        OTG_HS_GINTSTS = 0x01 << 7  //+ Global OUT NAK effective
	ESUSP             OTG_HS_GINTSTS = 0x01 << 10 //+ Early suspend
	USBSUSP           OTG_HS_GINTSTS = 0x01 << 11 //+ USB suspend
	USBRST            OTG_HS_GINTSTS = 0x01 << 12 //+ USB reset
	ENUMDNE           OTG_HS_GINTSTS = 0x01 << 13 //+ Enumeration done
	ISOODRP           OTG_HS_GINTSTS = 0x01 << 14 //+ Isochronous OUT packet dropped interrupt
	EOPF              OTG_HS_GINTSTS = 0x01 << 15 //+ End of periodic frame interrupt
	IEPINT            OTG_HS_GINTSTS = 0x01 << 18 //+ IN endpoint interrupt
	OEPINT            OTG_HS_GINTSTS = 0x01 << 19 //+ OUT endpoint interrupt
	IISOIXFR          OTG_HS_GINTSTS = 0x01 << 20 //+ Incomplete isochronous IN transfer
	PXFR_INCOMPISOOUT OTG_HS_GINTSTS = 0x01 << 21 //+ Incomplete periodic transfer
	DATAFSUSP         OTG_HS_GINTSTS = 0x01 << 22 //+ Data fetch suspended
	HPRTINT           OTG_HS_GINTSTS = 0x01 << 24 //+ Host port interrupt
	HCINT             OTG_HS_GINTSTS = 0x01 << 25 //+ Host channels interrupt
	PTXFE             OTG_HS_GINTSTS = 0x01 << 26 //+ Periodic TxFIFO empty
	CIDSCHG           OTG_HS_GINTSTS = 0x01 << 28 //+ Connector ID status change
	DISCINT           OTG_HS_GINTSTS = 0x01 << 29 //+ Disconnect detected interrupt
	SRQINT            OTG_HS_GINTSTS = 0x01 << 30 //+ Session request/new session detected interrupt
	WKUINT            OTG_HS_GINTSTS = 0x01 << 31 //+ Resume/remote wakeup detected interrupt
)

const (
	CMODn              = 0
	MMISn              = 1
	OTGINTn            = 2
	SOFn               = 3
	RXFLVLn            = 4
	NPTXFEn            = 5
	GINAKEFFn          = 6
	BOUTNAKEFFn        = 7
	ESUSPn             = 10
	USBSUSPn           = 11
	USBRSTn            = 12
	ENUMDNEn           = 13
	ISOODRPn           = 14
	EOPFn              = 15
	IEPINTn            = 18
	OEPINTn            = 19
	IISOIXFRn          = 20
	PXFR_INCOMPISOOUTn = 21
	DATAFSUSPn         = 22
	HPRTINTn           = 24
	HCINTn             = 25
	PTXFEn             = 26
	CIDSCHGn           = 28
	DISCINTn           = 29
	SRQINTn            = 30
	WKUINTn            = 31
)

const (
	MMISM           OTG_HS_GINTMSK = 0x01 << 1  //+ Mode mismatch interrupt mask
	OTGINT          OTG_HS_GINTMSK = 0x01 << 2  //+ OTG interrupt mask
	SOFM            OTG_HS_GINTMSK = 0x01 << 3  //+ Start of frame mask
	RXFLVLM         OTG_HS_GINTMSK = 0x01 << 4  //+ Receive FIFO nonempty mask
	NPTXFEM         OTG_HS_GINTMSK = 0x01 << 5  //+ Nonperiodic TxFIFO empty mask
	GINAKEFFM       OTG_HS_GINTMSK = 0x01 << 6  //+ Global nonperiodic IN NAK effective mask
	GONAKEFFM       OTG_HS_GINTMSK = 0x01 << 7  //+ Global OUT NAK effective mask
	ESUSPM          OTG_HS_GINTMSK = 0x01 << 10 //+ Early suspend mask
	USBSUSPM        OTG_HS_GINTMSK = 0x01 << 11 //+ USB suspend mask
	USBRST          OTG_HS_GINTMSK = 0x01 << 12 //+ USB reset mask
	ENUMDNEM        OTG_HS_GINTMSK = 0x01 << 13 //+ Enumeration done mask
	ISOODRPM        OTG_HS_GINTMSK = 0x01 << 14 //+ Isochronous OUT packet dropped interrupt mask
	EOPFM           OTG_HS_GINTMSK = 0x01 << 15 //+ End of periodic frame interrupt mask
	IEPINT          OTG_HS_GINTMSK = 0x01 << 18 //+ IN endpoints interrupt mask
	OEPINT          OTG_HS_GINTMSK = 0x01 << 19 //+ OUT endpoints interrupt mask
	IISOIXFRM       OTG_HS_GINTMSK = 0x01 << 20 //+ Incomplete isochronous IN transfer mask
	PXFRM_IISOOXFRM OTG_HS_GINTMSK = 0x01 << 21 //+ Incomplete periodic transfer mask
	FSUSPM          OTG_HS_GINTMSK = 0x01 << 22 //+ Data fetch suspended mask
	RSTDE           OTG_HS_GINTMSK = 0x01 << 23 //+ Reset detected interrupt mask
	PRTIM           OTG_HS_GINTMSK = 0x01 << 24 //+ Host port interrupt mask
	HCIM            OTG_HS_GINTMSK = 0x01 << 25 //+ Host channels interrupt mask
	PTXFEM          OTG_HS_GINTMSK = 0x01 << 26 //+ Periodic TxFIFO empty mask
	LPMINTM         OTG_HS_GINTMSK = 0x01 << 27 //+ LPM interrupt mask
	CIDSCHGM        OTG_HS_GINTMSK = 0x01 << 28 //+ Connector ID status change mask
	DISCINT         OTG_HS_GINTMSK = 0x01 << 29 //+ Disconnect detected interrupt mask
	SRQIM           OTG_HS_GINTMSK = 0x01 << 30 //+ Session request/new session detected interrupt mask
	WUIM            OTG_HS_GINTMSK = 0x01 << 31 //+ Resume/remote wakeup detected interrupt mask
)

const (
	MMISMn           = 1
	OTGINTn          = 2
	SOFMn            = 3
	RXFLVLMn         = 4
	NPTXFEMn         = 5
	GINAKEFFMn       = 6
	GONAKEFFMn       = 7
	ESUSPMn          = 10
	USBSUSPMn        = 11
	USBRSTn          = 12
	ENUMDNEMn        = 13
	ISOODRPMn        = 14
	EOPFMn           = 15
	IEPINTn          = 18
	OEPINTn          = 19
	IISOIXFRMn       = 20
	PXFRM_IISOOXFRMn = 21
	FSUSPMn          = 22
	RSTDEn           = 23
	PRTIMn           = 24
	HCIMn            = 25
	PTXFEMn          = 26
	LPMINTMn         = 27
	CIDSCHGMn        = 28
	DISCINTn         = 29
	SRQIMn           = 30
	WUIMn            = 31
)

const (
	CHNUM  OTG_HS_GRXSTSR_Host = 0x0F << 0  //+ Channel number
	BCNT   OTG_HS_GRXSTSR_Host = 0x7FF << 4 //+ Byte count
	DPID   OTG_HS_GRXSTSR_Host = 0x03 << 15 //+ Data PID
	PKTSTS OTG_HS_GRXSTSR_Host = 0x0F << 17 //+ Packet status
)

const (
	CHNUMn  = 0
	BCNTn   = 4
	DPIDn   = 15
	PKTSTSn = 17
)

const (
	EPNUM  OTG_HS_GRXSTSR_Device = 0x0F << 0  //+ Endpoint number
	BCNT   OTG_HS_GRXSTSR_Device = 0x7FF << 4 //+ Byte count
	DPID   OTG_HS_GRXSTSR_Device = 0x03 << 15 //+ Data PID
	PKTSTS OTG_HS_GRXSTSR_Device = 0x0F << 17 //+ Packet status
	FRMNUM OTG_HS_GRXSTSR_Device = 0x0F << 21 //+ Frame number
)

const (
	EPNUMn  = 0
	BCNTn   = 4
	DPIDn   = 15
	PKTSTSn = 17
	FRMNUMn = 21
)

const (
	CHNUM  OTG_HS_GRXSTSP_Host = 0x0F << 0  //+ Channel number
	BCNT   OTG_HS_GRXSTSP_Host = 0x7FF << 4 //+ Byte count
	DPID   OTG_HS_GRXSTSP_Host = 0x03 << 15 //+ Data PID
	PKTSTS OTG_HS_GRXSTSP_Host = 0x0F << 17 //+ Packet status
)

const (
	CHNUMn  = 0
	BCNTn   = 4
	DPIDn   = 15
	PKTSTSn = 17
)

const (
	EPNUM  OTG_HS_GRXSTSP_Device = 0x0F << 0  //+ Endpoint number
	BCNT   OTG_HS_GRXSTSP_Device = 0x7FF << 4 //+ Byte count
	DPID   OTG_HS_GRXSTSP_Device = 0x03 << 15 //+ Data PID
	PKTSTS OTG_HS_GRXSTSP_Device = 0x0F << 17 //+ Packet status
	FRMNUM OTG_HS_GRXSTSP_Device = 0x0F << 21 //+ Frame number
)

const (
	EPNUMn  = 0
	BCNTn   = 4
	DPIDn   = 15
	PKTSTSn = 17
	FRMNUMn = 21
)

const (
	RXFD OTG_HS_GRXFSIZ = 0xFFFF << 0 //+ RxFIFO depth
)

const (
	RXFDn = 0
)

const (
	NPTXFSA OTG_HS_HNPTXFSIZ_Host = 0xFFFF << 0  //+ Nonperiodic transmit RAM start address
	NPTXFD  OTG_HS_HNPTXFSIZ_Host = 0xFFFF << 16 //+ Nonperiodic TxFIFO depth
)

const (
	NPTXFSAn = 0
	NPTXFDn  = 16
)

const (
	TX0FSA OTG_HS_DIEPTXF0_Device = 0xFFFF << 0  //+ Endpoint 0 transmit RAM start address
	TX0FD  OTG_HS_DIEPTXF0_Device = 0xFFFF << 16 //+ Endpoint 0 TxFIFO depth
)

const (
	TX0FSAn = 0
	TX0FDn  = 16
)

const (
	NPTXFSAV OTG_HS_GNPTXSTS = 0xFFFF << 0 //+ Nonperiodic TxFIFO space available
	NPTQXSAV OTG_HS_GNPTXSTS = 0xFF << 16  //+ Nonperiodic transmit request queue space available
	NPTXQTOP OTG_HS_GNPTXSTS = 0x7F << 24  //+ Top of the nonperiodic transmit request queue
)

const (
	NPTXFSAVn = 0
	NPTQXSAVn = 16
	NPTXQTOPn = 24
)

const (
	DCDET  OTG_HS_GCCFG = 0x01 << 0  //+ Data contact detection (DCD) status
	PDET   OTG_HS_GCCFG = 0x01 << 1  //+ Primary detection (PD) status
	SDET   OTG_HS_GCCFG = 0x01 << 2  //+ Secondary detection (SD) status
	PS2DET OTG_HS_GCCFG = 0x01 << 3  //+ DM pull-up detection status
	PWRDWN OTG_HS_GCCFG = 0x01 << 16 //+ Power down
	BCDEN  OTG_HS_GCCFG = 0x01 << 17 //+ Battery charging detector (BCD) enable
	DCDEN  OTG_HS_GCCFG = 0x01 << 18 //+ Data contact detection (DCD) mode enable
	PDEN   OTG_HS_GCCFG = 0x01 << 19 //+ Primary detection (PD) mode enable
	SDEN   OTG_HS_GCCFG = 0x01 << 20 //+ Secondary detection (SD) mode enable
	VBDEN  OTG_HS_GCCFG = 0x01 << 21 //+ USB VBUS detection enable
)

const (
	DCDETn  = 0
	PDETn   = 1
	SDETn   = 2
	PS2DETn = 3
	PWRDWNn = 16
	BCDENn  = 17
	DCDENn  = 18
	PDENn   = 19
	SDENn   = 20
	VBDENn  = 21
)

const (
	PRODUCT_ID OTG_HS_CID = 0xFFFFFFFF << 0 //+ Product ID field
)

const (
	PRODUCT_IDn = 0
)

const (
	LPMEN      OTG_HS_GLPMCFG = 0x01 << 0  //+ LPM support enable
	LPMACK     OTG_HS_GLPMCFG = 0x01 << 1  //+ LPM token acknowledge enable
	BESL       OTG_HS_GLPMCFG = 0x0F << 2  //+ Best effort service latency
	REMWAKE    OTG_HS_GLPMCFG = 0x01 << 6  //+ bRemoteWake value
	L1SSEN     OTG_HS_GLPMCFG = 0x01 << 7  //+ L1 Shallow Sleep enable
	BESLTHRS   OTG_HS_GLPMCFG = 0x0F << 8  //+ BESL threshold
	L1DSEN     OTG_HS_GLPMCFG = 0x01 << 12 //+ L1 deep sleep enable
	LPMRST     OTG_HS_GLPMCFG = 0x03 << 13 //+ LPM response
	SLPSTS     OTG_HS_GLPMCFG = 0x01 << 15 //+ Port sleep status
	L1RSMOK    OTG_HS_GLPMCFG = 0x01 << 16 //+ Sleep State Resume OK
	LPMCHIDX   OTG_HS_GLPMCFG = 0x0F << 17 //+ LPM Channel Index
	LPMRCNT    OTG_HS_GLPMCFG = 0x07 << 21 //+ LPM retry count
	SNDLPM     OTG_HS_GLPMCFG = 0x01 << 24 //+ Send LPM transaction
	LPMRCNTSTS OTG_HS_GLPMCFG = 0x07 << 25 //+ LPM retry count status
	ENBESL     OTG_HS_GLPMCFG = 0x01 << 28 //+ Enable best effort service latency
)

const (
	LPMENn      = 0
	LPMACKn     = 1
	BESLn       = 2
	REMWAKEn    = 6
	L1SSENn     = 7
	BESLTHRSn   = 8
	L1DSENn     = 12
	LPMRSTn     = 13
	SLPSTSn     = 15
	L1RSMOKn    = 16
	LPMCHIDXn   = 17
	LPMRCNTn    = 21
	SNDLPMn     = 24
	LPMRCNTSTSn = 25
	ENBESLn     = 28
)

const (
	PTXSA OTG_HS_HPTXFSIZ = 0xFFFF << 0  //+ Host periodic TxFIFO start address
	PTXFD OTG_HS_HPTXFSIZ = 0xFFFF << 16 //+ Host periodic TxFIFO depth
)

const (
	PTXSAn = 0
	PTXFDn = 16
)

const (
	INEPTXSA OTG_HS_DIEPTXF1 = 0xFFFF << 0  //+ IN endpoint FIFOx transmit RAM start address
	INEPTXFD OTG_HS_DIEPTXF1 = 0xFFFF << 16 //+ IN endpoint TxFIFO depth
)

const (
	INEPTXSAn = 0
	INEPTXFDn = 16
)

const (
	INEPTXSA OTG_HS_DIEPTXF2 = 0xFFFF << 0  //+ IN endpoint FIFOx transmit RAM start address
	INEPTXFD OTG_HS_DIEPTXF2 = 0xFFFF << 16 //+ IN endpoint TxFIFO depth
)

const (
	INEPTXSAn = 0
	INEPTXFDn = 16
)

const (
	INEPTXSA OTG_HS_DIEPTXF3 = 0xFFFF << 0  //+ IN endpoint FIFOx transmit RAM start address
	INEPTXFD OTG_HS_DIEPTXF3 = 0xFFFF << 16 //+ IN endpoint TxFIFO depth
)

const (
	INEPTXSAn = 0
	INEPTXFDn = 16
)

const (
	INEPTXSA OTG_HS_DIEPTXF4 = 0xFFFF << 0  //+ IN endpoint FIFOx transmit RAM start address
	INEPTXFD OTG_HS_DIEPTXF4 = 0xFFFF << 16 //+ IN endpoint TxFIFO depth
)

const (
	INEPTXSAn = 0
	INEPTXFDn = 16
)

const (
	INEPTXSA OTG_HS_DIEPTXF5 = 0xFFFF << 0  //+ IN endpoint FIFOx transmit RAM start address
	INEPTXFD OTG_HS_DIEPTXF5 = 0xFFFF << 16 //+ IN endpoint TxFIFO depth
)

const (
	INEPTXSAn = 0
	INEPTXFDn = 16
)

const (
	INEPTXSA OTG_HS_DIEPTXF6 = 0xFFFF << 0  //+ IN endpoint FIFOx transmit RAM start address
	INEPTXFD OTG_HS_DIEPTXF6 = 0xFFFF << 16 //+ IN endpoint TxFIFO depth
)

const (
	INEPTXSAn = 0
	INEPTXFDn = 16
)

const (
	INEPTXSA OTG_HS_DIEPTXF7 = 0xFFFF << 0  //+ IN endpoint FIFOx transmit RAM start address
	INEPTXFD OTG_HS_DIEPTXF7 = 0xFFFF << 16 //+ IN endpoint TxFIFO depth
)

const (
	INEPTXSAn = 0
	INEPTXFDn = 16
)

const (
	INEPTXSA OTG_DIEPTXF8 = 0xFFFF << 0  //+ IN endpoint FIFOx transmit RAM start address This field contains the memory start address for IN endpoint transmit FIFOx. The address must be aligned with a 32-bit memory location.
	INEPTXFD OTG_DIEPTXF8 = 0xFFFF << 16 //+ IN endpoint Tx FIFO depth This value is in terms of 32-bit words. Minimum value is 16
)

const (
	INEPTXSAn = 0
	INEPTXFDn = 16
)

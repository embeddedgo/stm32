// DO NOT EDIT THIS FILE. GENERATED BY svdxgen.

//go:build stm32l4x6

// Package lptim provides access to the registers of the LPTIM peripheral.
//
// Instances:
//
//	LPTIM1  LPTIM1_BASE  APB1  LPTIM1  Low power timer
//	LPTIM2  LPTIM2_BASE  APB1  LPTIM2  Low power timer
//
// Registers:
//
//	0x000 32  ISR   Interrupt and Status Register
//	0x004 32  ICR   Interrupt Clear Register
//	0x008 32  IER   Interrupt Enable Register
//	0x00C 32  CFGR  Configuration Register
//	0x010 32  CR    Control Register
//	0x014 32  CMP   Compare Register
//	0x018 32  ARR   Autoreload Register
//	0x01C 32  CNT   Counter Register
//
// Import:
//
//	github.com/embeddedgo/stm32/p/bus
//	github.com/embeddedgo/stm32/p/mmap
package lptim

const (
	CMPM    ISR = 0x01 << 0 //+ Compare match
	ARRM    ISR = 0x01 << 1 //+ Autoreload match
	EXTTRIG ISR = 0x01 << 2 //+ External trigger edge event
	CMPOK   ISR = 0x01 << 3 //+ Compare register update OK
	ARROK   ISR = 0x01 << 4 //+ Autoreload register update OK
	UP      ISR = 0x01 << 5 //+ Counter direction change down to up
	DOWN    ISR = 0x01 << 6 //+ Counter direction change up to down
)

const (
	CMPMn    = 0
	ARRMn    = 1
	EXTTRIGn = 2
	CMPOKn   = 3
	ARROKn   = 4
	UPn      = 5
	DOWNn    = 6
)

const (
	CMPMCF    ICR = 0x01 << 0 //+ compare match Clear Flag
	ARRMCF    ICR = 0x01 << 1 //+ Autoreload match Clear Flag
	EXTTRIGCF ICR = 0x01 << 2 //+ External trigger valid edge Clear Flag
	CMPOKCF   ICR = 0x01 << 3 //+ Compare register update OK Clear Flag
	ARROKCF   ICR = 0x01 << 4 //+ Autoreload register update OK Clear Flag
	UPCF      ICR = 0x01 << 5 //+ Direction change to UP Clear Flag
	DOWNCF    ICR = 0x01 << 6 //+ Direction change to down Clear Flag
)

const (
	CMPMCFn    = 0
	ARRMCFn    = 1
	EXTTRIGCFn = 2
	CMPOKCFn   = 3
	ARROKCFn   = 4
	UPCFn      = 5
	DOWNCFn    = 6
)

const (
	CMPMIE    IER = 0x01 << 0 //+ Compare match Interrupt Enable
	ARRMIE    IER = 0x01 << 1 //+ Autoreload match Interrupt Enable
	EXTTRIGIE IER = 0x01 << 2 //+ External trigger valid edge Interrupt Enable
	CMPOKIE   IER = 0x01 << 3 //+ Compare register update OK Interrupt Enable
	ARROKIE   IER = 0x01 << 4 //+ Autoreload register update OK Interrupt Enable
	UPIE      IER = 0x01 << 5 //+ Direction change to UP Interrupt Enable
	DOWNIE    IER = 0x01 << 6 //+ Direction change to down Interrupt Enable
)

const (
	CMPMIEn    = 0
	ARRMIEn    = 1
	EXTTRIGIEn = 2
	CMPOKIEn   = 3
	ARROKIEn   = 4
	UPIEn      = 5
	DOWNIEn    = 6
)

const (
	CKSEL     CFGR = 0x01 << 0  //+ Clock selector
	CKPOL     CFGR = 0x03 << 1  //+ Clock Polarity
	CKFLT     CFGR = 0x03 << 3  //+ Configurable digital filter for external clock
	TRGFLT    CFGR = 0x03 << 6  //+ Configurable digital filter for trigger
	PRESC     CFGR = 0x07 << 9  //+ Clock prescaler
	TRIGSEL   CFGR = 0x07 << 13 //+ Trigger selector
	TRIGEN    CFGR = 0x03 << 17 //+ Trigger enable and polarity
	TIMOUT    CFGR = 0x01 << 19 //+ Timeout enable
	WAVE      CFGR = 0x01 << 20 //+ Waveform shape
	WAVPOL    CFGR = 0x01 << 21 //+ Waveform shape polarity
	PRELOAD   CFGR = 0x01 << 22 //+ Registers update mode
	COUNTMODE CFGR = 0x01 << 23 //+ counter mode enabled
	ENC       CFGR = 0x01 << 24 //+ Encoder mode enable
)

const (
	CKSELn     = 0
	CKPOLn     = 1
	CKFLTn     = 3
	TRGFLTn    = 6
	PRESCn     = 9
	TRIGSELn   = 13
	TRIGENn    = 17
	TIMOUTn    = 19
	WAVEn      = 20
	WAVPOLn    = 21
	PRELOADn   = 22
	COUNTMODEn = 23
	ENCn       = 24
)

const (
	ENABLE  CR = 0x01 << 0 //+ LPTIM Enable
	SNGSTRT CR = 0x01 << 1 //+ LPTIM start in single mode
	CNTSTRT CR = 0x01 << 2 //+ Timer start in continuous mode
)

const (
	ENABLEn  = 0
	SNGSTRTn = 1
	CNTSTRTn = 2
)

const (
	CMP CMP = 0xFFFF << 0 //+ Compare value
)

const (
	CMPn = 0
)

const (
	ARR ARR = 0xFFFF << 0 //+ Auto reload value
)

const (
	ARRn = 0
)

const (
	CNT CNT = 0xFFFF << 0 //+ Counter value
)

const (
	CNTn = 0
)

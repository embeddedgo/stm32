// DO NOT EDIT THIS FILE. GENERATED BY xgen.

//go:build stm32l4x6

package gpio

import (
	"embedded/mmio"
	"unsafe"

	"github.com/embeddedgo/stm32/p/bus"
	"github.com/embeddedgo/stm32/p/mmap"
)

type Periph struct {
	MODER   mmio.R32[MODER]
	OTYPER  mmio.R32[OTYPER]
	OSPEEDR mmio.R32[OSPEEDR]
	PUPDR   mmio.R32[PUPDR]
	IDR     mmio.R32[IDR]
	ODR     mmio.R32[ODR]
	BSRR    mmio.R32[BSRR]
	LCKR    mmio.R32[LCKR]
	AFRL    mmio.R32[AFRL]
	AFRH    mmio.R32[AFRH]
	BRR     mmio.R32[BRR]
	ASCR    mmio.R32[ASCR]
}

func GPIOA() *Periph { return (*Periph)(unsafe.Pointer(uintptr(mmap.GPIOA_BASE))) }
func GPIOB() *Periph { return (*Periph)(unsafe.Pointer(uintptr(mmap.GPIOB_BASE))) }
func GPIOC() *Periph { return (*Periph)(unsafe.Pointer(uintptr(mmap.GPIOC_BASE))) }
func GPIOD() *Periph { return (*Periph)(unsafe.Pointer(uintptr(mmap.GPIOD_BASE))) }
func GPIOE() *Periph { return (*Periph)(unsafe.Pointer(uintptr(mmap.GPIOE_BASE))) }
func GPIOF() *Periph { return (*Periph)(unsafe.Pointer(uintptr(mmap.GPIOF_BASE))) }
func GPIOG() *Periph { return (*Periph)(unsafe.Pointer(uintptr(mmap.GPIOG_BASE))) }
func GPIOH() *Periph { return (*Periph)(unsafe.Pointer(uintptr(mmap.GPIOH_BASE))) }
func GPIOI() *Periph { return (*Periph)(unsafe.Pointer(uintptr(mmap.GPIOI_BASE))) }

func (p *Periph) BaseAddr() uintptr {
	return uintptr(unsafe.Pointer(p))
}

func (p *Periph) Bus() bus.Bus {
	return bus.AHB2
}

type MODER uint32

func MODER0_(p *Periph) mmio.RM32[MODER]  { return mmio.RM32[MODER]{&p.MODER, MODER0} }
func MODER1_(p *Periph) mmio.RM32[MODER]  { return mmio.RM32[MODER]{&p.MODER, MODER1} }
func MODER2_(p *Periph) mmio.RM32[MODER]  { return mmio.RM32[MODER]{&p.MODER, MODER2} }
func MODER3_(p *Periph) mmio.RM32[MODER]  { return mmio.RM32[MODER]{&p.MODER, MODER3} }
func MODER4_(p *Periph) mmio.RM32[MODER]  { return mmio.RM32[MODER]{&p.MODER, MODER4} }
func MODER5_(p *Periph) mmio.RM32[MODER]  { return mmio.RM32[MODER]{&p.MODER, MODER5} }
func MODER6_(p *Periph) mmio.RM32[MODER]  { return mmio.RM32[MODER]{&p.MODER, MODER6} }
func MODER7_(p *Periph) mmio.RM32[MODER]  { return mmio.RM32[MODER]{&p.MODER, MODER7} }
func MODER8_(p *Periph) mmio.RM32[MODER]  { return mmio.RM32[MODER]{&p.MODER, MODER8} }
func MODER9_(p *Periph) mmio.RM32[MODER]  { return mmio.RM32[MODER]{&p.MODER, MODER9} }
func MODER10_(p *Periph) mmio.RM32[MODER] { return mmio.RM32[MODER]{&p.MODER, MODER10} }
func MODER11_(p *Periph) mmio.RM32[MODER] { return mmio.RM32[MODER]{&p.MODER, MODER11} }
func MODER12_(p *Periph) mmio.RM32[MODER] { return mmio.RM32[MODER]{&p.MODER, MODER12} }
func MODER13_(p *Periph) mmio.RM32[MODER] { return mmio.RM32[MODER]{&p.MODER, MODER13} }
func MODER14_(p *Periph) mmio.RM32[MODER] { return mmio.RM32[MODER]{&p.MODER, MODER14} }
func MODER15_(p *Periph) mmio.RM32[MODER] { return mmio.RM32[MODER]{&p.MODER, MODER15} }

type OTYPER uint32

func OT0_(p *Periph) mmio.RM32[OTYPER]  { return mmio.RM32[OTYPER]{&p.OTYPER, OT0} }
func OT1_(p *Periph) mmio.RM32[OTYPER]  { return mmio.RM32[OTYPER]{&p.OTYPER, OT1} }
func OT2_(p *Periph) mmio.RM32[OTYPER]  { return mmio.RM32[OTYPER]{&p.OTYPER, OT2} }
func OT3_(p *Periph) mmio.RM32[OTYPER]  { return mmio.RM32[OTYPER]{&p.OTYPER, OT3} }
func OT4_(p *Periph) mmio.RM32[OTYPER]  { return mmio.RM32[OTYPER]{&p.OTYPER, OT4} }
func OT5_(p *Periph) mmio.RM32[OTYPER]  { return mmio.RM32[OTYPER]{&p.OTYPER, OT5} }
func OT6_(p *Periph) mmio.RM32[OTYPER]  { return mmio.RM32[OTYPER]{&p.OTYPER, OT6} }
func OT7_(p *Periph) mmio.RM32[OTYPER]  { return mmio.RM32[OTYPER]{&p.OTYPER, OT7} }
func OT8_(p *Periph) mmio.RM32[OTYPER]  { return mmio.RM32[OTYPER]{&p.OTYPER, OT8} }
func OT9_(p *Periph) mmio.RM32[OTYPER]  { return mmio.RM32[OTYPER]{&p.OTYPER, OT9} }
func OT10_(p *Periph) mmio.RM32[OTYPER] { return mmio.RM32[OTYPER]{&p.OTYPER, OT10} }
func OT11_(p *Periph) mmio.RM32[OTYPER] { return mmio.RM32[OTYPER]{&p.OTYPER, OT11} }
func OT12_(p *Periph) mmio.RM32[OTYPER] { return mmio.RM32[OTYPER]{&p.OTYPER, OT12} }
func OT13_(p *Periph) mmio.RM32[OTYPER] { return mmio.RM32[OTYPER]{&p.OTYPER, OT13} }
func OT14_(p *Periph) mmio.RM32[OTYPER] { return mmio.RM32[OTYPER]{&p.OTYPER, OT14} }
func OT15_(p *Periph) mmio.RM32[OTYPER] { return mmio.RM32[OTYPER]{&p.OTYPER, OT15} }

type OSPEEDR uint32

func OSPEEDR0_(p *Periph) mmio.RM32[OSPEEDR]  { return mmio.RM32[OSPEEDR]{&p.OSPEEDR, OSPEEDR0} }
func OSPEEDR1_(p *Periph) mmio.RM32[OSPEEDR]  { return mmio.RM32[OSPEEDR]{&p.OSPEEDR, OSPEEDR1} }
func OSPEEDR2_(p *Periph) mmio.RM32[OSPEEDR]  { return mmio.RM32[OSPEEDR]{&p.OSPEEDR, OSPEEDR2} }
func OSPEEDR3_(p *Periph) mmio.RM32[OSPEEDR]  { return mmio.RM32[OSPEEDR]{&p.OSPEEDR, OSPEEDR3} }
func OSPEEDR4_(p *Periph) mmio.RM32[OSPEEDR]  { return mmio.RM32[OSPEEDR]{&p.OSPEEDR, OSPEEDR4} }
func OSPEEDR5_(p *Periph) mmio.RM32[OSPEEDR]  { return mmio.RM32[OSPEEDR]{&p.OSPEEDR, OSPEEDR5} }
func OSPEEDR6_(p *Periph) mmio.RM32[OSPEEDR]  { return mmio.RM32[OSPEEDR]{&p.OSPEEDR, OSPEEDR6} }
func OSPEEDR7_(p *Periph) mmio.RM32[OSPEEDR]  { return mmio.RM32[OSPEEDR]{&p.OSPEEDR, OSPEEDR7} }
func OSPEEDR8_(p *Periph) mmio.RM32[OSPEEDR]  { return mmio.RM32[OSPEEDR]{&p.OSPEEDR, OSPEEDR8} }
func OSPEEDR9_(p *Periph) mmio.RM32[OSPEEDR]  { return mmio.RM32[OSPEEDR]{&p.OSPEEDR, OSPEEDR9} }
func OSPEEDR10_(p *Periph) mmio.RM32[OSPEEDR] { return mmio.RM32[OSPEEDR]{&p.OSPEEDR, OSPEEDR10} }
func OSPEEDR11_(p *Periph) mmio.RM32[OSPEEDR] { return mmio.RM32[OSPEEDR]{&p.OSPEEDR, OSPEEDR11} }
func OSPEEDR12_(p *Periph) mmio.RM32[OSPEEDR] { return mmio.RM32[OSPEEDR]{&p.OSPEEDR, OSPEEDR12} }
func OSPEEDR13_(p *Periph) mmio.RM32[OSPEEDR] { return mmio.RM32[OSPEEDR]{&p.OSPEEDR, OSPEEDR13} }
func OSPEEDR14_(p *Periph) mmio.RM32[OSPEEDR] { return mmio.RM32[OSPEEDR]{&p.OSPEEDR, OSPEEDR14} }
func OSPEEDR15_(p *Periph) mmio.RM32[OSPEEDR] { return mmio.RM32[OSPEEDR]{&p.OSPEEDR, OSPEEDR15} }

type PUPDR uint32

func PUPDR0_(p *Periph) mmio.RM32[PUPDR]  { return mmio.RM32[PUPDR]{&p.PUPDR, PUPDR0} }
func PUPDR1_(p *Periph) mmio.RM32[PUPDR]  { return mmio.RM32[PUPDR]{&p.PUPDR, PUPDR1} }
func PUPDR2_(p *Periph) mmio.RM32[PUPDR]  { return mmio.RM32[PUPDR]{&p.PUPDR, PUPDR2} }
func PUPDR3_(p *Periph) mmio.RM32[PUPDR]  { return mmio.RM32[PUPDR]{&p.PUPDR, PUPDR3} }
func PUPDR4_(p *Periph) mmio.RM32[PUPDR]  { return mmio.RM32[PUPDR]{&p.PUPDR, PUPDR4} }
func PUPDR5_(p *Periph) mmio.RM32[PUPDR]  { return mmio.RM32[PUPDR]{&p.PUPDR, PUPDR5} }
func PUPDR6_(p *Periph) mmio.RM32[PUPDR]  { return mmio.RM32[PUPDR]{&p.PUPDR, PUPDR6} }
func PUPDR7_(p *Periph) mmio.RM32[PUPDR]  { return mmio.RM32[PUPDR]{&p.PUPDR, PUPDR7} }
func PUPDR8_(p *Periph) mmio.RM32[PUPDR]  { return mmio.RM32[PUPDR]{&p.PUPDR, PUPDR8} }
func PUPDR9_(p *Periph) mmio.RM32[PUPDR]  { return mmio.RM32[PUPDR]{&p.PUPDR, PUPDR9} }
func PUPDR10_(p *Periph) mmio.RM32[PUPDR] { return mmio.RM32[PUPDR]{&p.PUPDR, PUPDR10} }
func PUPDR11_(p *Periph) mmio.RM32[PUPDR] { return mmio.RM32[PUPDR]{&p.PUPDR, PUPDR11} }
func PUPDR12_(p *Periph) mmio.RM32[PUPDR] { return mmio.RM32[PUPDR]{&p.PUPDR, PUPDR12} }
func PUPDR13_(p *Periph) mmio.RM32[PUPDR] { return mmio.RM32[PUPDR]{&p.PUPDR, PUPDR13} }
func PUPDR14_(p *Periph) mmio.RM32[PUPDR] { return mmio.RM32[PUPDR]{&p.PUPDR, PUPDR14} }
func PUPDR15_(p *Periph) mmio.RM32[PUPDR] { return mmio.RM32[PUPDR]{&p.PUPDR, PUPDR15} }

type IDR uint32

func IDR0_(p *Periph) mmio.RM32[IDR]  { return mmio.RM32[IDR]{&p.IDR, IDR0} }
func IDR1_(p *Periph) mmio.RM32[IDR]  { return mmio.RM32[IDR]{&p.IDR, IDR1} }
func IDR2_(p *Periph) mmio.RM32[IDR]  { return mmio.RM32[IDR]{&p.IDR, IDR2} }
func IDR3_(p *Periph) mmio.RM32[IDR]  { return mmio.RM32[IDR]{&p.IDR, IDR3} }
func IDR4_(p *Periph) mmio.RM32[IDR]  { return mmio.RM32[IDR]{&p.IDR, IDR4} }
func IDR5_(p *Periph) mmio.RM32[IDR]  { return mmio.RM32[IDR]{&p.IDR, IDR5} }
func IDR6_(p *Periph) mmio.RM32[IDR]  { return mmio.RM32[IDR]{&p.IDR, IDR6} }
func IDR7_(p *Periph) mmio.RM32[IDR]  { return mmio.RM32[IDR]{&p.IDR, IDR7} }
func IDR8_(p *Periph) mmio.RM32[IDR]  { return mmio.RM32[IDR]{&p.IDR, IDR8} }
func IDR9_(p *Periph) mmio.RM32[IDR]  { return mmio.RM32[IDR]{&p.IDR, IDR9} }
func IDR10_(p *Periph) mmio.RM32[IDR] { return mmio.RM32[IDR]{&p.IDR, IDR10} }
func IDR11_(p *Periph) mmio.RM32[IDR] { return mmio.RM32[IDR]{&p.IDR, IDR11} }
func IDR12_(p *Periph) mmio.RM32[IDR] { return mmio.RM32[IDR]{&p.IDR, IDR12} }
func IDR13_(p *Periph) mmio.RM32[IDR] { return mmio.RM32[IDR]{&p.IDR, IDR13} }
func IDR14_(p *Periph) mmio.RM32[IDR] { return mmio.RM32[IDR]{&p.IDR, IDR14} }
func IDR15_(p *Periph) mmio.RM32[IDR] { return mmio.RM32[IDR]{&p.IDR, IDR15} }

type ODR uint32

func ODR0_(p *Periph) mmio.RM32[ODR]  { return mmio.RM32[ODR]{&p.ODR, ODR0} }
func ODR1_(p *Periph) mmio.RM32[ODR]  { return mmio.RM32[ODR]{&p.ODR, ODR1} }
func ODR2_(p *Periph) mmio.RM32[ODR]  { return mmio.RM32[ODR]{&p.ODR, ODR2} }
func ODR3_(p *Periph) mmio.RM32[ODR]  { return mmio.RM32[ODR]{&p.ODR, ODR3} }
func ODR4_(p *Periph) mmio.RM32[ODR]  { return mmio.RM32[ODR]{&p.ODR, ODR4} }
func ODR5_(p *Periph) mmio.RM32[ODR]  { return mmio.RM32[ODR]{&p.ODR, ODR5} }
func ODR6_(p *Periph) mmio.RM32[ODR]  { return mmio.RM32[ODR]{&p.ODR, ODR6} }
func ODR7_(p *Periph) mmio.RM32[ODR]  { return mmio.RM32[ODR]{&p.ODR, ODR7} }
func ODR8_(p *Periph) mmio.RM32[ODR]  { return mmio.RM32[ODR]{&p.ODR, ODR8} }
func ODR9_(p *Periph) mmio.RM32[ODR]  { return mmio.RM32[ODR]{&p.ODR, ODR9} }
func ODR10_(p *Periph) mmio.RM32[ODR] { return mmio.RM32[ODR]{&p.ODR, ODR10} }
func ODR11_(p *Periph) mmio.RM32[ODR] { return mmio.RM32[ODR]{&p.ODR, ODR11} }
func ODR12_(p *Periph) mmio.RM32[ODR] { return mmio.RM32[ODR]{&p.ODR, ODR12} }
func ODR13_(p *Periph) mmio.RM32[ODR] { return mmio.RM32[ODR]{&p.ODR, ODR13} }
func ODR14_(p *Periph) mmio.RM32[ODR] { return mmio.RM32[ODR]{&p.ODR, ODR14} }
func ODR15_(p *Periph) mmio.RM32[ODR] { return mmio.RM32[ODR]{&p.ODR, ODR15} }

type BSRR uint32

func BS0_(p *Periph) mmio.RM32[BSRR]  { return mmio.RM32[BSRR]{&p.BSRR, BS0} }
func BS1_(p *Periph) mmio.RM32[BSRR]  { return mmio.RM32[BSRR]{&p.BSRR, BS1} }
func BS2_(p *Periph) mmio.RM32[BSRR]  { return mmio.RM32[BSRR]{&p.BSRR, BS2} }
func BS3_(p *Periph) mmio.RM32[BSRR]  { return mmio.RM32[BSRR]{&p.BSRR, BS3} }
func BS4_(p *Periph) mmio.RM32[BSRR]  { return mmio.RM32[BSRR]{&p.BSRR, BS4} }
func BS5_(p *Periph) mmio.RM32[BSRR]  { return mmio.RM32[BSRR]{&p.BSRR, BS5} }
func BS6_(p *Periph) mmio.RM32[BSRR]  { return mmio.RM32[BSRR]{&p.BSRR, BS6} }
func BS7_(p *Periph) mmio.RM32[BSRR]  { return mmio.RM32[BSRR]{&p.BSRR, BS7} }
func BS8_(p *Periph) mmio.RM32[BSRR]  { return mmio.RM32[BSRR]{&p.BSRR, BS8} }
func BS9_(p *Periph) mmio.RM32[BSRR]  { return mmio.RM32[BSRR]{&p.BSRR, BS9} }
func BS10_(p *Periph) mmio.RM32[BSRR] { return mmio.RM32[BSRR]{&p.BSRR, BS10} }
func BS11_(p *Periph) mmio.RM32[BSRR] { return mmio.RM32[BSRR]{&p.BSRR, BS11} }
func BS12_(p *Periph) mmio.RM32[BSRR] { return mmio.RM32[BSRR]{&p.BSRR, BS12} }
func BS13_(p *Periph) mmio.RM32[BSRR] { return mmio.RM32[BSRR]{&p.BSRR, BS13} }
func BS14_(p *Periph) mmio.RM32[BSRR] { return mmio.RM32[BSRR]{&p.BSRR, BS14} }
func BS15_(p *Periph) mmio.RM32[BSRR] { return mmio.RM32[BSRR]{&p.BSRR, BS15} }
func BR0_(p *Periph) mmio.RM32[BSRR]  { return mmio.RM32[BSRR]{&p.BSRR, BR0} }
func BR1_(p *Periph) mmio.RM32[BSRR]  { return mmio.RM32[BSRR]{&p.BSRR, BR1} }
func BR2_(p *Periph) mmio.RM32[BSRR]  { return mmio.RM32[BSRR]{&p.BSRR, BR2} }
func BR3_(p *Periph) mmio.RM32[BSRR]  { return mmio.RM32[BSRR]{&p.BSRR, BR3} }
func BR4_(p *Periph) mmio.RM32[BSRR]  { return mmio.RM32[BSRR]{&p.BSRR, BR4} }
func BR5_(p *Periph) mmio.RM32[BSRR]  { return mmio.RM32[BSRR]{&p.BSRR, BR5} }
func BR6_(p *Periph) mmio.RM32[BSRR]  { return mmio.RM32[BSRR]{&p.BSRR, BR6} }
func BR7_(p *Periph) mmio.RM32[BSRR]  { return mmio.RM32[BSRR]{&p.BSRR, BR7} }
func BR8_(p *Periph) mmio.RM32[BSRR]  { return mmio.RM32[BSRR]{&p.BSRR, BR8} }
func BR9_(p *Periph) mmio.RM32[BSRR]  { return mmio.RM32[BSRR]{&p.BSRR, BR9} }
func BR10_(p *Periph) mmio.RM32[BSRR] { return mmio.RM32[BSRR]{&p.BSRR, BR10} }
func BR11_(p *Periph) mmio.RM32[BSRR] { return mmio.RM32[BSRR]{&p.BSRR, BR11} }
func BR12_(p *Periph) mmio.RM32[BSRR] { return mmio.RM32[BSRR]{&p.BSRR, BR12} }
func BR13_(p *Periph) mmio.RM32[BSRR] { return mmio.RM32[BSRR]{&p.BSRR, BR13} }
func BR14_(p *Periph) mmio.RM32[BSRR] { return mmio.RM32[BSRR]{&p.BSRR, BR14} }
func BR15_(p *Periph) mmio.RM32[BSRR] { return mmio.RM32[BSRR]{&p.BSRR, BR15} }

type LCKR uint32

func LCK0_(p *Periph) mmio.RM32[LCKR]  { return mmio.RM32[LCKR]{&p.LCKR, LCK0} }
func LCK1_(p *Periph) mmio.RM32[LCKR]  { return mmio.RM32[LCKR]{&p.LCKR, LCK1} }
func LCK2_(p *Periph) mmio.RM32[LCKR]  { return mmio.RM32[LCKR]{&p.LCKR, LCK2} }
func LCK3_(p *Periph) mmio.RM32[LCKR]  { return mmio.RM32[LCKR]{&p.LCKR, LCK3} }
func LCK4_(p *Periph) mmio.RM32[LCKR]  { return mmio.RM32[LCKR]{&p.LCKR, LCK4} }
func LCK5_(p *Periph) mmio.RM32[LCKR]  { return mmio.RM32[LCKR]{&p.LCKR, LCK5} }
func LCK6_(p *Periph) mmio.RM32[LCKR]  { return mmio.RM32[LCKR]{&p.LCKR, LCK6} }
func LCK7_(p *Periph) mmio.RM32[LCKR]  { return mmio.RM32[LCKR]{&p.LCKR, LCK7} }
func LCK8_(p *Periph) mmio.RM32[LCKR]  { return mmio.RM32[LCKR]{&p.LCKR, LCK8} }
func LCK9_(p *Periph) mmio.RM32[LCKR]  { return mmio.RM32[LCKR]{&p.LCKR, LCK9} }
func LCK10_(p *Periph) mmio.RM32[LCKR] { return mmio.RM32[LCKR]{&p.LCKR, LCK10} }
func LCK11_(p *Periph) mmio.RM32[LCKR] { return mmio.RM32[LCKR]{&p.LCKR, LCK11} }
func LCK12_(p *Periph) mmio.RM32[LCKR] { return mmio.RM32[LCKR]{&p.LCKR, LCK12} }
func LCK13_(p *Periph) mmio.RM32[LCKR] { return mmio.RM32[LCKR]{&p.LCKR, LCK13} }
func LCK14_(p *Periph) mmio.RM32[LCKR] { return mmio.RM32[LCKR]{&p.LCKR, LCK14} }
func LCK15_(p *Periph) mmio.RM32[LCKR] { return mmio.RM32[LCKR]{&p.LCKR, LCK15} }
func LCKK_(p *Periph) mmio.RM32[LCKR]  { return mmio.RM32[LCKR]{&p.LCKR, LCKK} }

type AFRL uint32

func AFRL0_(p *Periph) mmio.RM32[AFRL] { return mmio.RM32[AFRL]{&p.AFRL, AFRL0} }
func AFRL1_(p *Periph) mmio.RM32[AFRL] { return mmio.RM32[AFRL]{&p.AFRL, AFRL1} }
func AFRL2_(p *Periph) mmio.RM32[AFRL] { return mmio.RM32[AFRL]{&p.AFRL, AFRL2} }
func AFRL3_(p *Periph) mmio.RM32[AFRL] { return mmio.RM32[AFRL]{&p.AFRL, AFRL3} }
func AFRL4_(p *Periph) mmio.RM32[AFRL] { return mmio.RM32[AFRL]{&p.AFRL, AFRL4} }
func AFRL5_(p *Periph) mmio.RM32[AFRL] { return mmio.RM32[AFRL]{&p.AFRL, AFRL5} }
func AFRL6_(p *Periph) mmio.RM32[AFRL] { return mmio.RM32[AFRL]{&p.AFRL, AFRL6} }
func AFRL7_(p *Periph) mmio.RM32[AFRL] { return mmio.RM32[AFRL]{&p.AFRL, AFRL7} }

type AFRH uint32

func AFRH8_(p *Periph) mmio.RM32[AFRH]  { return mmio.RM32[AFRH]{&p.AFRH, AFRH8} }
func AFRH9_(p *Periph) mmio.RM32[AFRH]  { return mmio.RM32[AFRH]{&p.AFRH, AFRH9} }
func AFRH10_(p *Periph) mmio.RM32[AFRH] { return mmio.RM32[AFRH]{&p.AFRH, AFRH10} }
func AFRH11_(p *Periph) mmio.RM32[AFRH] { return mmio.RM32[AFRH]{&p.AFRH, AFRH11} }
func AFRH12_(p *Periph) mmio.RM32[AFRH] { return mmio.RM32[AFRH]{&p.AFRH, AFRH12} }
func AFRH13_(p *Periph) mmio.RM32[AFRH] { return mmio.RM32[AFRH]{&p.AFRH, AFRH13} }
func AFRH14_(p *Periph) mmio.RM32[AFRH] { return mmio.RM32[AFRH]{&p.AFRH, AFRH14} }
func AFRH15_(p *Periph) mmio.RM32[AFRH] { return mmio.RM32[AFRH]{&p.AFRH, AFRH15} }

type BRR uint32

func BC0_(p *Periph) mmio.RM32[BRR]  { return mmio.RM32[BRR]{&p.BRR, BC0} }
func BC1_(p *Periph) mmio.RM32[BRR]  { return mmio.RM32[BRR]{&p.BRR, BC1} }
func BC2_(p *Periph) mmio.RM32[BRR]  { return mmio.RM32[BRR]{&p.BRR, BC2} }
func BC3_(p *Periph) mmio.RM32[BRR]  { return mmio.RM32[BRR]{&p.BRR, BC3} }
func BC4_(p *Periph) mmio.RM32[BRR]  { return mmio.RM32[BRR]{&p.BRR, BC4} }
func BC5_(p *Periph) mmio.RM32[BRR]  { return mmio.RM32[BRR]{&p.BRR, BC5} }
func BC6_(p *Periph) mmio.RM32[BRR]  { return mmio.RM32[BRR]{&p.BRR, BC6} }
func BC7_(p *Periph) mmio.RM32[BRR]  { return mmio.RM32[BRR]{&p.BRR, BC7} }
func BC8_(p *Periph) mmio.RM32[BRR]  { return mmio.RM32[BRR]{&p.BRR, BC8} }
func BC9_(p *Periph) mmio.RM32[BRR]  { return mmio.RM32[BRR]{&p.BRR, BC9} }
func BC10_(p *Periph) mmio.RM32[BRR] { return mmio.RM32[BRR]{&p.BRR, BC10} }
func BC11_(p *Periph) mmio.RM32[BRR] { return mmio.RM32[BRR]{&p.BRR, BC11} }
func BC12_(p *Periph) mmio.RM32[BRR] { return mmio.RM32[BRR]{&p.BRR, BC12} }
func BC13_(p *Periph) mmio.RM32[BRR] { return mmio.RM32[BRR]{&p.BRR, BC13} }
func BC14_(p *Periph) mmio.RM32[BRR] { return mmio.RM32[BRR]{&p.BRR, BC14} }
func BC15_(p *Periph) mmio.RM32[BRR] { return mmio.RM32[BRR]{&p.BRR, BC15} }

type ASCR uint32

func ASC0_(p *Periph) mmio.RM32[ASCR]  { return mmio.RM32[ASCR]{&p.ASCR, ASC0} }
func ASC1_(p *Periph) mmio.RM32[ASCR]  { return mmio.RM32[ASCR]{&p.ASCR, ASC1} }
func ASC2_(p *Periph) mmio.RM32[ASCR]  { return mmio.RM32[ASCR]{&p.ASCR, ASC2} }
func ASC3_(p *Periph) mmio.RM32[ASCR]  { return mmio.RM32[ASCR]{&p.ASCR, ASC3} }
func ASC4_(p *Periph) mmio.RM32[ASCR]  { return mmio.RM32[ASCR]{&p.ASCR, ASC4} }
func ASC5_(p *Periph) mmio.RM32[ASCR]  { return mmio.RM32[ASCR]{&p.ASCR, ASC5} }
func ASC6_(p *Periph) mmio.RM32[ASCR]  { return mmio.RM32[ASCR]{&p.ASCR, ASC6} }
func ASC7_(p *Periph) mmio.RM32[ASCR]  { return mmio.RM32[ASCR]{&p.ASCR, ASC7} }
func ASC8_(p *Periph) mmio.RM32[ASCR]  { return mmio.RM32[ASCR]{&p.ASCR, ASC8} }
func ASC9_(p *Periph) mmio.RM32[ASCR]  { return mmio.RM32[ASCR]{&p.ASCR, ASC9} }
func ASC10_(p *Periph) mmio.RM32[ASCR] { return mmio.RM32[ASCR]{&p.ASCR, ASC10} }
func ASC11_(p *Periph) mmio.RM32[ASCR] { return mmio.RM32[ASCR]{&p.ASCR, ASC11} }
func ASC12_(p *Periph) mmio.RM32[ASCR] { return mmio.RM32[ASCR]{&p.ASCR, ASC12} }
func ASC13_(p *Periph) mmio.RM32[ASCR] { return mmio.RM32[ASCR]{&p.ASCR, ASC13} }
func ASC14_(p *Periph) mmio.RM32[ASCR] { return mmio.RM32[ASCR]{&p.ASCR, ASC14} }
func ASC15_(p *Periph) mmio.RM32[ASCR] { return mmio.RM32[ASCR]{&p.ASCR, ASC15} }

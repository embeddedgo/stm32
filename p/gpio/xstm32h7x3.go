// DO NOT EDIT THIS FILE. GENERATED BY xgen.

//go:build stm32h7x3

package gpio

import (
	"embedded/mmio"
	"unsafe"

	"github.com/embeddedgo/stm32/p/bus"
	"github.com/embeddedgo/stm32/p/mmap"
)

type Periph struct {
	MODER   mmio.R32[MODER]
	OTYPER  mmio.R32[OTYPER]
	OSPEEDR mmio.R32[OSPEEDR]
	PUPDR   mmio.R32[PUPDR]
	IDR     mmio.R32[IDR]
	ODR     mmio.R32[ODR]
	BSRR    mmio.R32[BSRR]
	LCKR    mmio.R32[LCKR]
	AFRL    mmio.R32[AFRL]
	AFRH    mmio.R32[AFRH]
}

func GPIOA() *Periph { return (*Periph)(unsafe.Pointer(uintptr(mmap.GPIOA_BASE))) }
func GPIOB() *Periph { return (*Periph)(unsafe.Pointer(uintptr(mmap.GPIOB_BASE))) }
func GPIOC() *Periph { return (*Periph)(unsafe.Pointer(uintptr(mmap.GPIOC_BASE))) }
func GPIOD() *Periph { return (*Periph)(unsafe.Pointer(uintptr(mmap.GPIOD_BASE))) }
func GPIOE() *Periph { return (*Periph)(unsafe.Pointer(uintptr(mmap.GPIOE_BASE))) }
func GPIOF() *Periph { return (*Periph)(unsafe.Pointer(uintptr(mmap.GPIOF_BASE))) }
func GPIOG() *Periph { return (*Periph)(unsafe.Pointer(uintptr(mmap.GPIOG_BASE))) }
func GPIOH() *Periph { return (*Periph)(unsafe.Pointer(uintptr(mmap.GPIOH_BASE))) }
func GPIOI() *Periph { return (*Periph)(unsafe.Pointer(uintptr(mmap.GPIOI_BASE))) }
func GPIOJ() *Periph { return (*Periph)(unsafe.Pointer(uintptr(mmap.GPIOJ_BASE))) }
func GPIOK() *Periph { return (*Periph)(unsafe.Pointer(uintptr(mmap.GPIOK_BASE))) }

func (p *Periph) BaseAddr() uintptr {
	return uintptr(unsafe.Pointer(p))
}

func (p *Periph) Bus() bus.Bus {
	return bus.AHB4
}

type MODER uint32

func MODE0_(p *Periph) mmio.RM32[MODER]  { return mmio.RM32[MODER]{&p.MODER, MODE0} }
func MODE1_(p *Periph) mmio.RM32[MODER]  { return mmio.RM32[MODER]{&p.MODER, MODE1} }
func MODE2_(p *Periph) mmio.RM32[MODER]  { return mmio.RM32[MODER]{&p.MODER, MODE2} }
func MODE3_(p *Periph) mmio.RM32[MODER]  { return mmio.RM32[MODER]{&p.MODER, MODE3} }
func MODE4_(p *Periph) mmio.RM32[MODER]  { return mmio.RM32[MODER]{&p.MODER, MODE4} }
func MODE5_(p *Periph) mmio.RM32[MODER]  { return mmio.RM32[MODER]{&p.MODER, MODE5} }
func MODE6_(p *Periph) mmio.RM32[MODER]  { return mmio.RM32[MODER]{&p.MODER, MODE6} }
func MODE7_(p *Periph) mmio.RM32[MODER]  { return mmio.RM32[MODER]{&p.MODER, MODE7} }
func MODE8_(p *Periph) mmio.RM32[MODER]  { return mmio.RM32[MODER]{&p.MODER, MODE8} }
func MODE9_(p *Periph) mmio.RM32[MODER]  { return mmio.RM32[MODER]{&p.MODER, MODE9} }
func MODE10_(p *Periph) mmio.RM32[MODER] { return mmio.RM32[MODER]{&p.MODER, MODE10} }
func MODE11_(p *Periph) mmio.RM32[MODER] { return mmio.RM32[MODER]{&p.MODER, MODE11} }
func MODE12_(p *Periph) mmio.RM32[MODER] { return mmio.RM32[MODER]{&p.MODER, MODE12} }
func MODE13_(p *Periph) mmio.RM32[MODER] { return mmio.RM32[MODER]{&p.MODER, MODE13} }
func MODE14_(p *Periph) mmio.RM32[MODER] { return mmio.RM32[MODER]{&p.MODER, MODE14} }
func MODE15_(p *Periph) mmio.RM32[MODER] { return mmio.RM32[MODER]{&p.MODER, MODE15} }

type OTYPER uint32

func OT0_(p *Periph) mmio.RM32[OTYPER]  { return mmio.RM32[OTYPER]{&p.OTYPER, OT0} }
func OT1_(p *Periph) mmio.RM32[OTYPER]  { return mmio.RM32[OTYPER]{&p.OTYPER, OT1} }
func OT2_(p *Periph) mmio.RM32[OTYPER]  { return mmio.RM32[OTYPER]{&p.OTYPER, OT2} }
func OT3_(p *Periph) mmio.RM32[OTYPER]  { return mmio.RM32[OTYPER]{&p.OTYPER, OT3} }
func OT4_(p *Periph) mmio.RM32[OTYPER]  { return mmio.RM32[OTYPER]{&p.OTYPER, OT4} }
func OT5_(p *Periph) mmio.RM32[OTYPER]  { return mmio.RM32[OTYPER]{&p.OTYPER, OT5} }
func OT6_(p *Periph) mmio.RM32[OTYPER]  { return mmio.RM32[OTYPER]{&p.OTYPER, OT6} }
func OT7_(p *Periph) mmio.RM32[OTYPER]  { return mmio.RM32[OTYPER]{&p.OTYPER, OT7} }
func OT8_(p *Periph) mmio.RM32[OTYPER]  { return mmio.RM32[OTYPER]{&p.OTYPER, OT8} }
func OT9_(p *Periph) mmio.RM32[OTYPER]  { return mmio.RM32[OTYPER]{&p.OTYPER, OT9} }
func OT10_(p *Periph) mmio.RM32[OTYPER] { return mmio.RM32[OTYPER]{&p.OTYPER, OT10} }
func OT11_(p *Periph) mmio.RM32[OTYPER] { return mmio.RM32[OTYPER]{&p.OTYPER, OT11} }
func OT12_(p *Periph) mmio.RM32[OTYPER] { return mmio.RM32[OTYPER]{&p.OTYPER, OT12} }
func OT13_(p *Periph) mmio.RM32[OTYPER] { return mmio.RM32[OTYPER]{&p.OTYPER, OT13} }
func OT14_(p *Periph) mmio.RM32[OTYPER] { return mmio.RM32[OTYPER]{&p.OTYPER, OT14} }
func OT15_(p *Periph) mmio.RM32[OTYPER] { return mmio.RM32[OTYPER]{&p.OTYPER, OT15} }

type OSPEEDR uint32

func OSPEED0_(p *Periph) mmio.RM32[OSPEEDR]  { return mmio.RM32[OSPEEDR]{&p.OSPEEDR, OSPEED0} }
func OSPEED1_(p *Periph) mmio.RM32[OSPEEDR]  { return mmio.RM32[OSPEEDR]{&p.OSPEEDR, OSPEED1} }
func OSPEED2_(p *Periph) mmio.RM32[OSPEEDR]  { return mmio.RM32[OSPEEDR]{&p.OSPEEDR, OSPEED2} }
func OSPEED3_(p *Periph) mmio.RM32[OSPEEDR]  { return mmio.RM32[OSPEEDR]{&p.OSPEEDR, OSPEED3} }
func OSPEED4_(p *Periph) mmio.RM32[OSPEEDR]  { return mmio.RM32[OSPEEDR]{&p.OSPEEDR, OSPEED4} }
func OSPEED5_(p *Periph) mmio.RM32[OSPEEDR]  { return mmio.RM32[OSPEEDR]{&p.OSPEEDR, OSPEED5} }
func OSPEED6_(p *Periph) mmio.RM32[OSPEEDR]  { return mmio.RM32[OSPEEDR]{&p.OSPEEDR, OSPEED6} }
func OSPEED7_(p *Periph) mmio.RM32[OSPEEDR]  { return mmio.RM32[OSPEEDR]{&p.OSPEEDR, OSPEED7} }
func OSPEED8_(p *Periph) mmio.RM32[OSPEEDR]  { return mmio.RM32[OSPEEDR]{&p.OSPEEDR, OSPEED8} }
func OSPEED9_(p *Periph) mmio.RM32[OSPEEDR]  { return mmio.RM32[OSPEEDR]{&p.OSPEEDR, OSPEED9} }
func OSPEED10_(p *Periph) mmio.RM32[OSPEEDR] { return mmio.RM32[OSPEEDR]{&p.OSPEEDR, OSPEED10} }
func OSPEED11_(p *Periph) mmio.RM32[OSPEEDR] { return mmio.RM32[OSPEEDR]{&p.OSPEEDR, OSPEED11} }
func OSPEED12_(p *Periph) mmio.RM32[OSPEEDR] { return mmio.RM32[OSPEEDR]{&p.OSPEEDR, OSPEED12} }
func OSPEED13_(p *Periph) mmio.RM32[OSPEEDR] { return mmio.RM32[OSPEEDR]{&p.OSPEEDR, OSPEED13} }
func OSPEED14_(p *Periph) mmio.RM32[OSPEEDR] { return mmio.RM32[OSPEEDR]{&p.OSPEEDR, OSPEED14} }
func OSPEED15_(p *Periph) mmio.RM32[OSPEEDR] { return mmio.RM32[OSPEEDR]{&p.OSPEEDR, OSPEED15} }

type PUPDR uint32

func PUPD0_(p *Periph) mmio.RM32[PUPDR]  { return mmio.RM32[PUPDR]{&p.PUPDR, PUPD0} }
func PUPD1_(p *Periph) mmio.RM32[PUPDR]  { return mmio.RM32[PUPDR]{&p.PUPDR, PUPD1} }
func PUPD2_(p *Periph) mmio.RM32[PUPDR]  { return mmio.RM32[PUPDR]{&p.PUPDR, PUPD2} }
func PUPD3_(p *Periph) mmio.RM32[PUPDR]  { return mmio.RM32[PUPDR]{&p.PUPDR, PUPD3} }
func PUPD4_(p *Periph) mmio.RM32[PUPDR]  { return mmio.RM32[PUPDR]{&p.PUPDR, PUPD4} }
func PUPD5_(p *Periph) mmio.RM32[PUPDR]  { return mmio.RM32[PUPDR]{&p.PUPDR, PUPD5} }
func PUPD6_(p *Periph) mmio.RM32[PUPDR]  { return mmio.RM32[PUPDR]{&p.PUPDR, PUPD6} }
func PUPD7_(p *Periph) mmio.RM32[PUPDR]  { return mmio.RM32[PUPDR]{&p.PUPDR, PUPD7} }
func PUPD8_(p *Periph) mmio.RM32[PUPDR]  { return mmio.RM32[PUPDR]{&p.PUPDR, PUPD8} }
func PUPD9_(p *Periph) mmio.RM32[PUPDR]  { return mmio.RM32[PUPDR]{&p.PUPDR, PUPD9} }
func PUPD10_(p *Periph) mmio.RM32[PUPDR] { return mmio.RM32[PUPDR]{&p.PUPDR, PUPD10} }
func PUPD11_(p *Periph) mmio.RM32[PUPDR] { return mmio.RM32[PUPDR]{&p.PUPDR, PUPD11} }
func PUPD12_(p *Periph) mmio.RM32[PUPDR] { return mmio.RM32[PUPDR]{&p.PUPDR, PUPD12} }
func PUPD13_(p *Periph) mmio.RM32[PUPDR] { return mmio.RM32[PUPDR]{&p.PUPDR, PUPD13} }
func PUPD14_(p *Periph) mmio.RM32[PUPDR] { return mmio.RM32[PUPDR]{&p.PUPDR, PUPD14} }
func PUPD15_(p *Periph) mmio.RM32[PUPDR] { return mmio.RM32[PUPDR]{&p.PUPDR, PUPD15} }

type IDR uint32

func ID0_(p *Periph) mmio.RM32[IDR]  { return mmio.RM32[IDR]{&p.IDR, ID0} }
func ID1_(p *Periph) mmio.RM32[IDR]  { return mmio.RM32[IDR]{&p.IDR, ID1} }
func ID2_(p *Periph) mmio.RM32[IDR]  { return mmio.RM32[IDR]{&p.IDR, ID2} }
func ID3_(p *Periph) mmio.RM32[IDR]  { return mmio.RM32[IDR]{&p.IDR, ID3} }
func ID4_(p *Periph) mmio.RM32[IDR]  { return mmio.RM32[IDR]{&p.IDR, ID4} }
func ID5_(p *Periph) mmio.RM32[IDR]  { return mmio.RM32[IDR]{&p.IDR, ID5} }
func ID6_(p *Periph) mmio.RM32[IDR]  { return mmio.RM32[IDR]{&p.IDR, ID6} }
func ID7_(p *Periph) mmio.RM32[IDR]  { return mmio.RM32[IDR]{&p.IDR, ID7} }
func ID8_(p *Periph) mmio.RM32[IDR]  { return mmio.RM32[IDR]{&p.IDR, ID8} }
func ID9_(p *Periph) mmio.RM32[IDR]  { return mmio.RM32[IDR]{&p.IDR, ID9} }
func ID10_(p *Periph) mmio.RM32[IDR] { return mmio.RM32[IDR]{&p.IDR, ID10} }
func ID11_(p *Periph) mmio.RM32[IDR] { return mmio.RM32[IDR]{&p.IDR, ID11} }
func ID12_(p *Periph) mmio.RM32[IDR] { return mmio.RM32[IDR]{&p.IDR, ID12} }
func ID13_(p *Periph) mmio.RM32[IDR] { return mmio.RM32[IDR]{&p.IDR, ID13} }
func ID14_(p *Periph) mmio.RM32[IDR] { return mmio.RM32[IDR]{&p.IDR, ID14} }
func ID15_(p *Periph) mmio.RM32[IDR] { return mmio.RM32[IDR]{&p.IDR, ID15} }

type ODR uint32

func OD0_(p *Periph) mmio.RM32[ODR]  { return mmio.RM32[ODR]{&p.ODR, OD0} }
func OD1_(p *Periph) mmio.RM32[ODR]  { return mmio.RM32[ODR]{&p.ODR, OD1} }
func OD2_(p *Periph) mmio.RM32[ODR]  { return mmio.RM32[ODR]{&p.ODR, OD2} }
func OD3_(p *Periph) mmio.RM32[ODR]  { return mmio.RM32[ODR]{&p.ODR, OD3} }
func OD4_(p *Periph) mmio.RM32[ODR]  { return mmio.RM32[ODR]{&p.ODR, OD4} }
func OD5_(p *Periph) mmio.RM32[ODR]  { return mmio.RM32[ODR]{&p.ODR, OD5} }
func OD6_(p *Periph) mmio.RM32[ODR]  { return mmio.RM32[ODR]{&p.ODR, OD6} }
func OD7_(p *Periph) mmio.RM32[ODR]  { return mmio.RM32[ODR]{&p.ODR, OD7} }
func OD8_(p *Periph) mmio.RM32[ODR]  { return mmio.RM32[ODR]{&p.ODR, OD8} }
func OD9_(p *Periph) mmio.RM32[ODR]  { return mmio.RM32[ODR]{&p.ODR, OD9} }
func OD10_(p *Periph) mmio.RM32[ODR] { return mmio.RM32[ODR]{&p.ODR, OD10} }
func OD11_(p *Periph) mmio.RM32[ODR] { return mmio.RM32[ODR]{&p.ODR, OD11} }
func OD12_(p *Periph) mmio.RM32[ODR] { return mmio.RM32[ODR]{&p.ODR, OD12} }
func OD13_(p *Periph) mmio.RM32[ODR] { return mmio.RM32[ODR]{&p.ODR, OD13} }
func OD14_(p *Periph) mmio.RM32[ODR] { return mmio.RM32[ODR]{&p.ODR, OD14} }
func OD15_(p *Periph) mmio.RM32[ODR] { return mmio.RM32[ODR]{&p.ODR, OD15} }

type BSRR uint32

func BS0_(p *Periph) mmio.RM32[BSRR]  { return mmio.RM32[BSRR]{&p.BSRR, BS0} }
func BS1_(p *Periph) mmio.RM32[BSRR]  { return mmio.RM32[BSRR]{&p.BSRR, BS1} }
func BS2_(p *Periph) mmio.RM32[BSRR]  { return mmio.RM32[BSRR]{&p.BSRR, BS2} }
func BS3_(p *Periph) mmio.RM32[BSRR]  { return mmio.RM32[BSRR]{&p.BSRR, BS3} }
func BS4_(p *Periph) mmio.RM32[BSRR]  { return mmio.RM32[BSRR]{&p.BSRR, BS4} }
func BS5_(p *Periph) mmio.RM32[BSRR]  { return mmio.RM32[BSRR]{&p.BSRR, BS5} }
func BS6_(p *Periph) mmio.RM32[BSRR]  { return mmio.RM32[BSRR]{&p.BSRR, BS6} }
func BS7_(p *Periph) mmio.RM32[BSRR]  { return mmio.RM32[BSRR]{&p.BSRR, BS7} }
func BS8_(p *Periph) mmio.RM32[BSRR]  { return mmio.RM32[BSRR]{&p.BSRR, BS8} }
func BS9_(p *Periph) mmio.RM32[BSRR]  { return mmio.RM32[BSRR]{&p.BSRR, BS9} }
func BS10_(p *Periph) mmio.RM32[BSRR] { return mmio.RM32[BSRR]{&p.BSRR, BS10} }
func BS11_(p *Periph) mmio.RM32[BSRR] { return mmio.RM32[BSRR]{&p.BSRR, BS11} }
func BS12_(p *Periph) mmio.RM32[BSRR] { return mmio.RM32[BSRR]{&p.BSRR, BS12} }
func BS13_(p *Periph) mmio.RM32[BSRR] { return mmio.RM32[BSRR]{&p.BSRR, BS13} }
func BS14_(p *Periph) mmio.RM32[BSRR] { return mmio.RM32[BSRR]{&p.BSRR, BS14} }
func BS15_(p *Periph) mmio.RM32[BSRR] { return mmio.RM32[BSRR]{&p.BSRR, BS15} }
func BR0_(p *Periph) mmio.RM32[BSRR]  { return mmio.RM32[BSRR]{&p.BSRR, BR0} }
func BR1_(p *Periph) mmio.RM32[BSRR]  { return mmio.RM32[BSRR]{&p.BSRR, BR1} }
func BR2_(p *Periph) mmio.RM32[BSRR]  { return mmio.RM32[BSRR]{&p.BSRR, BR2} }
func BR3_(p *Periph) mmio.RM32[BSRR]  { return mmio.RM32[BSRR]{&p.BSRR, BR3} }
func BR4_(p *Periph) mmio.RM32[BSRR]  { return mmio.RM32[BSRR]{&p.BSRR, BR4} }
func BR5_(p *Periph) mmio.RM32[BSRR]  { return mmio.RM32[BSRR]{&p.BSRR, BR5} }
func BR6_(p *Periph) mmio.RM32[BSRR]  { return mmio.RM32[BSRR]{&p.BSRR, BR6} }
func BR7_(p *Periph) mmio.RM32[BSRR]  { return mmio.RM32[BSRR]{&p.BSRR, BR7} }
func BR8_(p *Periph) mmio.RM32[BSRR]  { return mmio.RM32[BSRR]{&p.BSRR, BR8} }
func BR9_(p *Periph) mmio.RM32[BSRR]  { return mmio.RM32[BSRR]{&p.BSRR, BR9} }
func BR10_(p *Periph) mmio.RM32[BSRR] { return mmio.RM32[BSRR]{&p.BSRR, BR10} }
func BR11_(p *Periph) mmio.RM32[BSRR] { return mmio.RM32[BSRR]{&p.BSRR, BR11} }
func BR12_(p *Periph) mmio.RM32[BSRR] { return mmio.RM32[BSRR]{&p.BSRR, BR12} }
func BR13_(p *Periph) mmio.RM32[BSRR] { return mmio.RM32[BSRR]{&p.BSRR, BR13} }
func BR14_(p *Periph) mmio.RM32[BSRR] { return mmio.RM32[BSRR]{&p.BSRR, BR14} }
func BR15_(p *Periph) mmio.RM32[BSRR] { return mmio.RM32[BSRR]{&p.BSRR, BR15} }

type LCKR uint32

func LCK0_(p *Periph) mmio.RM32[LCKR]  { return mmio.RM32[LCKR]{&p.LCKR, LCK0} }
func LCK1_(p *Periph) mmio.RM32[LCKR]  { return mmio.RM32[LCKR]{&p.LCKR, LCK1} }
func LCK2_(p *Periph) mmio.RM32[LCKR]  { return mmio.RM32[LCKR]{&p.LCKR, LCK2} }
func LCK3_(p *Periph) mmio.RM32[LCKR]  { return mmio.RM32[LCKR]{&p.LCKR, LCK3} }
func LCK4_(p *Periph) mmio.RM32[LCKR]  { return mmio.RM32[LCKR]{&p.LCKR, LCK4} }
func LCK5_(p *Periph) mmio.RM32[LCKR]  { return mmio.RM32[LCKR]{&p.LCKR, LCK5} }
func LCK6_(p *Periph) mmio.RM32[LCKR]  { return mmio.RM32[LCKR]{&p.LCKR, LCK6} }
func LCK7_(p *Periph) mmio.RM32[LCKR]  { return mmio.RM32[LCKR]{&p.LCKR, LCK7} }
func LCK8_(p *Periph) mmio.RM32[LCKR]  { return mmio.RM32[LCKR]{&p.LCKR, LCK8} }
func LCK9_(p *Periph) mmio.RM32[LCKR]  { return mmio.RM32[LCKR]{&p.LCKR, LCK9} }
func LCK10_(p *Periph) mmio.RM32[LCKR] { return mmio.RM32[LCKR]{&p.LCKR, LCK10} }
func LCK11_(p *Periph) mmio.RM32[LCKR] { return mmio.RM32[LCKR]{&p.LCKR, LCK11} }
func LCK12_(p *Periph) mmio.RM32[LCKR] { return mmio.RM32[LCKR]{&p.LCKR, LCK12} }
func LCK13_(p *Periph) mmio.RM32[LCKR] { return mmio.RM32[LCKR]{&p.LCKR, LCK13} }
func LCK14_(p *Periph) mmio.RM32[LCKR] { return mmio.RM32[LCKR]{&p.LCKR, LCK14} }
func LCK15_(p *Periph) mmio.RM32[LCKR] { return mmio.RM32[LCKR]{&p.LCKR, LCK15} }
func LCKK_(p *Periph) mmio.RM32[LCKR]  { return mmio.RM32[LCKR]{&p.LCKR, LCKK} }

type AFRL uint32

func AFSEL0_(p *Periph) mmio.RM32[AFRL] { return mmio.RM32[AFRL]{&p.AFRL, AFSEL0} }
func AFSEL1_(p *Periph) mmio.RM32[AFRL] { return mmio.RM32[AFRL]{&p.AFRL, AFSEL1} }
func AFSEL2_(p *Periph) mmio.RM32[AFRL] { return mmio.RM32[AFRL]{&p.AFRL, AFSEL2} }
func AFSEL3_(p *Periph) mmio.RM32[AFRL] { return mmio.RM32[AFRL]{&p.AFRL, AFSEL3} }
func AFSEL4_(p *Periph) mmio.RM32[AFRL] { return mmio.RM32[AFRL]{&p.AFRL, AFSEL4} }
func AFSEL5_(p *Periph) mmio.RM32[AFRL] { return mmio.RM32[AFRL]{&p.AFRL, AFSEL5} }
func AFSEL6_(p *Periph) mmio.RM32[AFRL] { return mmio.RM32[AFRL]{&p.AFRL, AFSEL6} }
func AFSEL7_(p *Periph) mmio.RM32[AFRL] { return mmio.RM32[AFRL]{&p.AFRL, AFSEL7} }

type AFRH uint32

func AFSEL8_(p *Periph) mmio.RM32[AFRH]  { return mmio.RM32[AFRH]{&p.AFRH, AFSEL8} }
func AFSEL9_(p *Periph) mmio.RM32[AFRH]  { return mmio.RM32[AFRH]{&p.AFRH, AFSEL9} }
func AFSEL10_(p *Periph) mmio.RM32[AFRH] { return mmio.RM32[AFRH]{&p.AFRH, AFSEL10} }
func AFSEL11_(p *Periph) mmio.RM32[AFRH] { return mmio.RM32[AFRH]{&p.AFRH, AFSEL11} }
func AFSEL12_(p *Periph) mmio.RM32[AFRH] { return mmio.RM32[AFRH]{&p.AFRH, AFSEL12} }
func AFSEL13_(p *Periph) mmio.RM32[AFRH] { return mmio.RM32[AFRH]{&p.AFRH, AFSEL13} }
func AFSEL14_(p *Periph) mmio.RM32[AFRH] { return mmio.RM32[AFRH]{&p.AFRH, AFSEL14} }
func AFSEL15_(p *Periph) mmio.RM32[AFRH] { return mmio.RM32[AFRH]{&p.AFRH, AFSEL15} }

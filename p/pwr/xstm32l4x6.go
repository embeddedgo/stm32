// DO NOT EDIT THIS FILE. GENERATED BY xgen.

//go:build stm32l4x6

package pwr

import (
	"embedded/mmio"
	"unsafe"

	"github.com/embeddedgo/stm32/p/bus"
	"github.com/embeddedgo/stm32/p/mmap"
)

type Periph struct {
	CR1  mmio.R32[CR1]
	CR2  mmio.R32[CR2]
	CR3  mmio.R32[CR3]
	CR4  mmio.R32[CR4]
	SR1  mmio.R32[SR1]
	SR2  mmio.R32[SR2]
	SCR  mmio.R32[SCR]
	_    uint32
	PUDC [8]SPUDC
}

func PWR() *Periph { return (*Periph)(unsafe.Pointer(uintptr(mmap.PWR_BASE))) }

func (p *Periph) BaseAddr() uintptr {
	return uintptr(unsafe.Pointer(p))
}

func (p *Periph) Bus() bus.Bus {
	return bus.APB1
}

type CR1 uint32

func LPMS_(p *Periph) mmio.RM32[CR1] { return mmio.RM32[CR1]{&p.CR1, LPMS} }
func DBP_(p *Periph) mmio.RM32[CR1]  { return mmio.RM32[CR1]{&p.CR1, DBP} }
func VOS_(p *Periph) mmio.RM32[CR1]  { return mmio.RM32[CR1]{&p.CR1, VOS} }
func LPR_(p *Periph) mmio.RM32[CR1]  { return mmio.RM32[CR1]{&p.CR1, LPR} }

type CR2 uint32

func PVDE_(p *Periph) mmio.RM32[CR2]  { return mmio.RM32[CR2]{&p.CR2, PVDE} }
func PLS_(p *Periph) mmio.RM32[CR2]   { return mmio.RM32[CR2]{&p.CR2, PLS} }
func PVME1_(p *Periph) mmio.RM32[CR2] { return mmio.RM32[CR2]{&p.CR2, PVME1} }
func PVME2_(p *Periph) mmio.RM32[CR2] { return mmio.RM32[CR2]{&p.CR2, PVME2} }
func PVME3_(p *Periph) mmio.RM32[CR2] { return mmio.RM32[CR2]{&p.CR2, PVME3} }
func PVME4_(p *Periph) mmio.RM32[CR2] { return mmio.RM32[CR2]{&p.CR2, PVME4} }
func IOSV_(p *Periph) mmio.RM32[CR2]  { return mmio.RM32[CR2]{&p.CR2, IOSV} }
func USV_(p *Periph) mmio.RM32[CR2]   { return mmio.RM32[CR2]{&p.CR2, USV} }

type CR3 uint32

func EWUP1_(p *Periph) mmio.RM32[CR3] { return mmio.RM32[CR3]{&p.CR3, EWUP1} }
func EWUP2_(p *Periph) mmio.RM32[CR3] { return mmio.RM32[CR3]{&p.CR3, EWUP2} }
func EWUP3_(p *Periph) mmio.RM32[CR3] { return mmio.RM32[CR3]{&p.CR3, EWUP3} }
func EWUP4_(p *Periph) mmio.RM32[CR3] { return mmio.RM32[CR3]{&p.CR3, EWUP4} }
func EWUP5_(p *Periph) mmio.RM32[CR3] { return mmio.RM32[CR3]{&p.CR3, EWUP5} }
func RRS_(p *Periph) mmio.RM32[CR3]   { return mmio.RM32[CR3]{&p.CR3, RRS} }
func APC_(p *Periph) mmio.RM32[CR3]   { return mmio.RM32[CR3]{&p.CR3, APC} }
func EWF_(p *Periph) mmio.RM32[CR3]   { return mmio.RM32[CR3]{&p.CR3, EWF} }

type CR4 uint32

func WP1_(p *Periph) mmio.RM32[CR4]  { return mmio.RM32[CR4]{&p.CR4, WP1} }
func WP2_(p *Periph) mmio.RM32[CR4]  { return mmio.RM32[CR4]{&p.CR4, WP2} }
func WP3_(p *Periph) mmio.RM32[CR4]  { return mmio.RM32[CR4]{&p.CR4, WP3} }
func WP4_(p *Periph) mmio.RM32[CR4]  { return mmio.RM32[CR4]{&p.CR4, WP4} }
func WP5_(p *Periph) mmio.RM32[CR4]  { return mmio.RM32[CR4]{&p.CR4, WP5} }
func VBE_(p *Periph) mmio.RM32[CR4]  { return mmio.RM32[CR4]{&p.CR4, VBE} }
func VBRS_(p *Periph) mmio.RM32[CR4] { return mmio.RM32[CR4]{&p.CR4, VBRS} }

type SR1 uint32

func CWUF1_(p *Periph) mmio.RM32[SR1] { return mmio.RM32[SR1]{&p.SR1, CWUF1} }
func CWUF2_(p *Periph) mmio.RM32[SR1] { return mmio.RM32[SR1]{&p.SR1, CWUF2} }
func CWUF3_(p *Periph) mmio.RM32[SR1] { return mmio.RM32[SR1]{&p.SR1, CWUF3} }
func CWUF4_(p *Periph) mmio.RM32[SR1] { return mmio.RM32[SR1]{&p.SR1, CWUF4} }
func CWUF5_(p *Periph) mmio.RM32[SR1] { return mmio.RM32[SR1]{&p.SR1, CWUF5} }
func CSBF_(p *Periph) mmio.RM32[SR1]  { return mmio.RM32[SR1]{&p.SR1, CSBF} }
func WUFI_(p *Periph) mmio.RM32[SR1]  { return mmio.RM32[SR1]{&p.SR1, WUFI} }

type SR2 uint32

func REGLPS_(p *Periph) mmio.RM32[SR2] { return mmio.RM32[SR2]{&p.SR2, REGLPS} }
func REGLPF_(p *Periph) mmio.RM32[SR2] { return mmio.RM32[SR2]{&p.SR2, REGLPF} }
func VOSF_(p *Periph) mmio.RM32[SR2]   { return mmio.RM32[SR2]{&p.SR2, VOSF} }
func PVDO_(p *Periph) mmio.RM32[SR2]   { return mmio.RM32[SR2]{&p.SR2, PVDO} }
func PVMO1_(p *Periph) mmio.RM32[SR2]  { return mmio.RM32[SR2]{&p.SR2, PVMO1} }
func PVMO2_(p *Periph) mmio.RM32[SR2]  { return mmio.RM32[SR2]{&p.SR2, PVMO2} }
func PVMO3_(p *Periph) mmio.RM32[SR2]  { return mmio.RM32[SR2]{&p.SR2, PVMO3} }
func PVMO4_(p *Periph) mmio.RM32[SR2]  { return mmio.RM32[SR2]{&p.SR2, PVMO4} }

type SCR uint32

func WUF1_(p *Periph) mmio.RM32[SCR] { return mmio.RM32[SCR]{&p.SCR, WUF1} }
func WUF2_(p *Periph) mmio.RM32[SCR] { return mmio.RM32[SCR]{&p.SCR, WUF2} }
func WUF3_(p *Periph) mmio.RM32[SCR] { return mmio.RM32[SCR]{&p.SCR, WUF3} }
func WUF4_(p *Periph) mmio.RM32[SCR] { return mmio.RM32[SCR]{&p.SCR, WUF4} }
func WUF5_(p *Periph) mmio.RM32[SCR] { return mmio.RM32[SCR]{&p.SCR, WUF5} }
func SBF_(p *Periph) mmio.RM32[SCR]  { return mmio.RM32[SCR]{&p.SCR, SBF} }

type SPUDC struct {
	PUCR mmio.R32[PUCR]
	PDCR mmio.R32[PDCR]
}

type PUCR uint32

func PU0_(p *Periph, i int) mmio.RM32[PUCR]  { return mmio.RM32[PUCR]{&p.PUDC[i].PUCR, PU0} }
func PU1_(p *Periph, i int) mmio.RM32[PUCR]  { return mmio.RM32[PUCR]{&p.PUDC[i].PUCR, PU1} }
func PU2_(p *Periph, i int) mmio.RM32[PUCR]  { return mmio.RM32[PUCR]{&p.PUDC[i].PUCR, PU2} }
func PU3_(p *Periph, i int) mmio.RM32[PUCR]  { return mmio.RM32[PUCR]{&p.PUDC[i].PUCR, PU3} }
func PU4_(p *Periph, i int) mmio.RM32[PUCR]  { return mmio.RM32[PUCR]{&p.PUDC[i].PUCR, PU4} }
func PU5_(p *Periph, i int) mmio.RM32[PUCR]  { return mmio.RM32[PUCR]{&p.PUDC[i].PUCR, PU5} }
func PU6_(p *Periph, i int) mmio.RM32[PUCR]  { return mmio.RM32[PUCR]{&p.PUDC[i].PUCR, PU6} }
func PU7_(p *Periph, i int) mmio.RM32[PUCR]  { return mmio.RM32[PUCR]{&p.PUDC[i].PUCR, PU7} }
func PU8_(p *Periph, i int) mmio.RM32[PUCR]  { return mmio.RM32[PUCR]{&p.PUDC[i].PUCR, PU8} }
func PU9_(p *Periph, i int) mmio.RM32[PUCR]  { return mmio.RM32[PUCR]{&p.PUDC[i].PUCR, PU9} }
func PU10_(p *Periph, i int) mmio.RM32[PUCR] { return mmio.RM32[PUCR]{&p.PUDC[i].PUCR, PU10} }
func PU11_(p *Periph, i int) mmio.RM32[PUCR] { return mmio.RM32[PUCR]{&p.PUDC[i].PUCR, PU11} }
func PU12_(p *Periph, i int) mmio.RM32[PUCR] { return mmio.RM32[PUCR]{&p.PUDC[i].PUCR, PU12} }
func PU13_(p *Periph, i int) mmio.RM32[PUCR] { return mmio.RM32[PUCR]{&p.PUDC[i].PUCR, PU13} }
func PU14_(p *Periph, i int) mmio.RM32[PUCR] { return mmio.RM32[PUCR]{&p.PUDC[i].PUCR, PU14} }
func PU15_(p *Periph, i int) mmio.RM32[PUCR] { return mmio.RM32[PUCR]{&p.PUDC[i].PUCR, PU15} }

type PDCR uint32

func PD0_(p *Periph, i int) mmio.RM32[PDCR]  { return mmio.RM32[PDCR]{&p.PUDC[i].PDCR, PD0} }
func PD1_(p *Periph, i int) mmio.RM32[PDCR]  { return mmio.RM32[PDCR]{&p.PUDC[i].PDCR, PD1} }
func PD2_(p *Periph, i int) mmio.RM32[PDCR]  { return mmio.RM32[PDCR]{&p.PUDC[i].PDCR, PD2} }
func PD3_(p *Periph, i int) mmio.RM32[PDCR]  { return mmio.RM32[PDCR]{&p.PUDC[i].PDCR, PD3} }
func PD4_(p *Periph, i int) mmio.RM32[PDCR]  { return mmio.RM32[PDCR]{&p.PUDC[i].PDCR, PD4} }
func PD5_(p *Periph, i int) mmio.RM32[PDCR]  { return mmio.RM32[PDCR]{&p.PUDC[i].PDCR, PD5} }
func PD6_(p *Periph, i int) mmio.RM32[PDCR]  { return mmio.RM32[PDCR]{&p.PUDC[i].PDCR, PD6} }
func PD7_(p *Periph, i int) mmio.RM32[PDCR]  { return mmio.RM32[PDCR]{&p.PUDC[i].PDCR, PD7} }
func PD8_(p *Periph, i int) mmio.RM32[PDCR]  { return mmio.RM32[PDCR]{&p.PUDC[i].PDCR, PD8} }
func PD9_(p *Periph, i int) mmio.RM32[PDCR]  { return mmio.RM32[PDCR]{&p.PUDC[i].PDCR, PD9} }
func PD10_(p *Periph, i int) mmio.RM32[PDCR] { return mmio.RM32[PDCR]{&p.PUDC[i].PDCR, PD10} }
func PD11_(p *Periph, i int) mmio.RM32[PDCR] { return mmio.RM32[PDCR]{&p.PUDC[i].PDCR, PD11} }
func PD12_(p *Periph, i int) mmio.RM32[PDCR] { return mmio.RM32[PDCR]{&p.PUDC[i].PDCR, PD12} }
func PD13_(p *Periph, i int) mmio.RM32[PDCR] { return mmio.RM32[PDCR]{&p.PUDC[i].PDCR, PD13} }
func PD14_(p *Periph, i int) mmio.RM32[PDCR] { return mmio.RM32[PDCR]{&p.PUDC[i].PDCR, PD14} }
func PD15_(p *Periph, i int) mmio.RM32[PDCR] { return mmio.RM32[PDCR]{&p.PUDC[i].PDCR, PD15} }

// Code generated by xgen -g; DO NOT EDIT.

//go:build stm32h7x3

package exti

import (
	"embedded/mmio"
	"unsafe"

	"github.com/embeddedgo/stm32/p/mmap"
)

type Periph struct {
	RTSR1   mmio.R32[uint32]
	FTSR1   mmio.R32[uint32]
	SWIER1  mmio.R32[uint32]
	D3PMR1  mmio.R32[uint32]
	D3PCR1L mmio.R32[uint32]
	D3PCR1H mmio.R32[uint32]
	_       [2]uint32
	RTSR2   mmio.R32[uint32]
	FTSR2   mmio.R32[uint32]
	SWIER2  mmio.R32[uint32]
	D3PMR2  mmio.R32[uint32]
	D3PCR2L mmio.R32[uint32]
	D3PCR2H mmio.R32[uint32]
	_       [2]uint32
	RTSR3   mmio.R32[uint32]
	FTSR3   mmio.R32[uint32]
	SWIER3  mmio.R32[uint32]
	D3PMR3  mmio.R32[uint32]
	_       uint32
	D3PCR3H mmio.R32[uint32]
	_       [10]uint32
	CPUIMR1 mmio.R32[uint32]
	CPUEMR1 mmio.R32[uint32]
	CPUPR1  mmio.R32[uint32]
	_       uint32
	CPUIMR2 mmio.R32[uint32]
	CPUEMR2 mmio.R32[uint32]
	CPUPR2  mmio.R32[uint32]
	_       uint32
	CPUIMR3 mmio.R32[uint32]
	CPUEMR3 mmio.R32[uint32]
	CPUPR3  mmio.R32[uint32]
}

func EXTI() *Periph { return (*Periph)(unsafe.Pointer(uintptr(mmap.EXTI_BASE))) }

func (p *Periph) BaseAddr() uintptr {
	return uintptr(unsafe.Pointer(p))
}

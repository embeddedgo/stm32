// DO NOT EDIT THIS FILE. GENERATED BY svdxgen.

// +build stm32f407

// Package mpu provides access to the registers of the MPU peripheral.
//
// Instances:
//  MPU  MPU_BASE  -  -  Memory protection unit
// Registers:
//  0x000 32  MPU_TYPER  MPU type register
//  0x004 32  MPU_CTRL   MPU control register
//  0x008 32  MPU_RNR    MPU region number register
//  0x00C 32  MPU_RBAR   MPU region base address register
//  0x010 32  MPU_RASR   MPU region attribute and size register
// Import:
//  github.com/embeddedgo/stm32/p/mmap
package mpu

const (
	SEPARATE MPU_TYPER = 0x01 << 0  //+ Separate flag
	DREGION  MPU_TYPER = 0xFF << 8  //+ Number of MPU data regions
	IREGION  MPU_TYPER = 0xFF << 16 //+ Number of MPU instruction regions
)

const (
	SEPARATEn = 0
	DREGIONn  = 8
	IREGIONn  = 16
)

const (
	ENABLE     MPU_CTRL = 0x01 << 0 //+ Enables the MPU
	HFNMIENA   MPU_CTRL = 0x01 << 1 //+ Enables the operation of MPU during hard fault
	PRIVDEFENA MPU_CTRL = 0x01 << 2 //+ Enable priviliged software access to default memory map
)

const (
	ENABLEn     = 0
	HFNMIENAn   = 1
	PRIVDEFENAn = 2
)

const (
	REGION MPU_RNR = 0xFF << 0 //+ MPU region
)

const (
	REGIONn = 0
)

const (
	REGION MPU_RBAR = 0x0F << 0      //+ MPU region field
	VALID  MPU_RBAR = 0x01 << 4      //+ MPU region number valid
	ADDR   MPU_RBAR = 0x7FFFFFF << 5 //+ Region base address field
)

const (
	REGIONn = 0
	VALIDn  = 4
	ADDRn   = 5
)

const (
	ENABLE MPU_RASR = 0x01 << 0  //+ Region enable bit.
	SIZE   MPU_RASR = 0x1F << 1  //+ Size of the MPU protection region
	SRD    MPU_RASR = 0xFF << 8  //+ Subregion disable bits
	B      MPU_RASR = 0x01 << 16 //+ memory attribute
	C      MPU_RASR = 0x01 << 17 //+ memory attribute
	S      MPU_RASR = 0x01 << 18 //+ Shareable memory attribute
	TEX    MPU_RASR = 0x07 << 19 //+ memory attribute
	AP     MPU_RASR = 0x07 << 24 //+ Access permission
	XN     MPU_RASR = 0x01 << 28 //+ Instruction access disable bit
)

const (
	ENABLEn = 0
	SIZEn   = 1
	SRDn    = 8
	Bn      = 16
	Cn      = 17
	Sn      = 18
	TEXn    = 19
	APn     = 24
	XNn     = 28
)

// DO NOT EDIT THIS FILE. GENERATED BY xgen.

//go:build stm32l4x6

package rcc

import (
	"embedded/mmio"
	"unsafe"

	"github.com/embeddedgo/stm32/p/mmap"
)

type Periph struct {
	CR          mmio.R32[CR]
	ICSCR       mmio.R32[ICSCR]
	CFGR        mmio.R32[CFGR]
	PLLCFGR     mmio.R32[PLLCFGR]
	PLLSAI1CFGR mmio.R32[PLLSAI1CFGR]
	PLLSAI2CFGR mmio.R32[PLLSAI2CFGR]
	CIER        mmio.R32[CIER]
	CIFR        mmio.R32[CIFR]
	CICR        mmio.R32[CICR]
	_           uint32
	AHB1RSTR    mmio.R32[AHB1RSTR]
	AHB2RSTR    mmio.R32[AHB2RSTR]
	AHB3RSTR    mmio.R32[AHB3RSTR]
	_           uint32
	APB1RSTR1   mmio.R32[APB1RSTR1]
	APB1RSTR2   mmio.R32[APB1RSTR2]
	APB2RSTR    mmio.R32[APB2RSTR]
	_           uint32
	AHB1ENR     mmio.R32[AHB1ENR]
	AHB2ENR     mmio.R32[AHB2ENR]
	AHB3ENR     mmio.R32[AHB3ENR]
	_           uint32
	APB1ENR1    mmio.R32[APB1ENR1]
	APB1ENR2    mmio.R32[APB1ENR2]
	APB2ENR     mmio.R32[APB2ENR]
	_           uint32
	AHB1SMENR   mmio.R32[AHB1SMENR]
	AHB2SMENR   mmio.R32[AHB2SMENR]
	AHB3SMENR   mmio.R32[AHB3SMENR]
	_           uint32
	APB1SMENR1  mmio.R32[APB1SMENR1]
	APB1SMENR2  mmio.R32[APB1SMENR2]
	APB2SMENR   mmio.R32[APB2SMENR]
	_           uint32
	CCIPR       mmio.R32[CCIPR]
	_           uint32
	BDCR        mmio.R32[BDCR]
	CSR         mmio.R32[CSR]
}

func RCC() *Periph { return (*Periph)(unsafe.Pointer(uintptr(mmap.RCC_BASE))) }

func (p *Periph) BaseAddr() uintptr {
	return uintptr(unsafe.Pointer(p))
}

type CR uint32

func MSION_(p *Periph) mmio.RM32[CR]      { return mmio.RM32[CR]{&p.CR, MSION} }
func MSIRDY_(p *Periph) mmio.RM32[CR]     { return mmio.RM32[CR]{&p.CR, MSIRDY} }
func MSIPLLEN_(p *Periph) mmio.RM32[CR]   { return mmio.RM32[CR]{&p.CR, MSIPLLEN} }
func MSIRGSEL_(p *Periph) mmio.RM32[CR]   { return mmio.RM32[CR]{&p.CR, MSIRGSEL} }
func MSIRANGE_(p *Periph) mmio.RM32[CR]   { return mmio.RM32[CR]{&p.CR, MSIRANGE} }
func HSION_(p *Periph) mmio.RM32[CR]      { return mmio.RM32[CR]{&p.CR, HSION} }
func HSIKERON_(p *Periph) mmio.RM32[CR]   { return mmio.RM32[CR]{&p.CR, HSIKERON} }
func HSIRDY_(p *Periph) mmio.RM32[CR]     { return mmio.RM32[CR]{&p.CR, HSIRDY} }
func HSIASFS_(p *Periph) mmio.RM32[CR]    { return mmio.RM32[CR]{&p.CR, HSIASFS} }
func HSEON_(p *Periph) mmio.RM32[CR]      { return mmio.RM32[CR]{&p.CR, HSEON} }
func HSERDY_(p *Periph) mmio.RM32[CR]     { return mmio.RM32[CR]{&p.CR, HSERDY} }
func HSEBYP_(p *Periph) mmio.RM32[CR]     { return mmio.RM32[CR]{&p.CR, HSEBYP} }
func CSSON_(p *Periph) mmio.RM32[CR]      { return mmio.RM32[CR]{&p.CR, CSSON} }
func PLLON_(p *Periph) mmio.RM32[CR]      { return mmio.RM32[CR]{&p.CR, PLLON} }
func PLLRDY_(p *Periph) mmio.RM32[CR]     { return mmio.RM32[CR]{&p.CR, PLLRDY} }
func PLLSAI1ON_(p *Periph) mmio.RM32[CR]  { return mmio.RM32[CR]{&p.CR, PLLSAI1ON} }
func PLLSAI1RDY_(p *Periph) mmio.RM32[CR] { return mmio.RM32[CR]{&p.CR, PLLSAI1RDY} }
func PLLSAI2ON_(p *Periph) mmio.RM32[CR]  { return mmio.RM32[CR]{&p.CR, PLLSAI2ON} }
func PLLSAI2RDY_(p *Periph) mmio.RM32[CR] { return mmio.RM32[CR]{&p.CR, PLLSAI2RDY} }

type ICSCR uint32

func MSICAL_(p *Periph) mmio.RM32[ICSCR]  { return mmio.RM32[ICSCR]{&p.ICSCR, MSICAL} }
func MSITRIM_(p *Periph) mmio.RM32[ICSCR] { return mmio.RM32[ICSCR]{&p.ICSCR, MSITRIM} }
func HSICAL_(p *Periph) mmio.RM32[ICSCR]  { return mmio.RM32[ICSCR]{&p.ICSCR, HSICAL} }
func HSITRIM_(p *Periph) mmio.RM32[ICSCR] { return mmio.RM32[ICSCR]{&p.ICSCR, HSITRIM} }

type CFGR uint32

func SW_(p *Periph) mmio.RM32[CFGR]       { return mmio.RM32[CFGR]{&p.CFGR, SW} }
func SWS_(p *Periph) mmio.RM32[CFGR]      { return mmio.RM32[CFGR]{&p.CFGR, SWS} }
func HPRE_(p *Periph) mmio.RM32[CFGR]     { return mmio.RM32[CFGR]{&p.CFGR, HPRE} }
func PPRE1_(p *Periph) mmio.RM32[CFGR]    { return mmio.RM32[CFGR]{&p.CFGR, PPRE1} }
func PPRE2_(p *Periph) mmio.RM32[CFGR]    { return mmio.RM32[CFGR]{&p.CFGR, PPRE2} }
func STOPWUCK_(p *Periph) mmio.RM32[CFGR] { return mmio.RM32[CFGR]{&p.CFGR, STOPWUCK} }
func MCOSEL_(p *Periph) mmio.RM32[CFGR]   { return mmio.RM32[CFGR]{&p.CFGR, MCOSEL} }
func MCOPRE_(p *Periph) mmio.RM32[CFGR]   { return mmio.RM32[CFGR]{&p.CFGR, MCOPRE} }

type PLLCFGR uint32

func PLLSRC_(p *Periph) mmio.RM32[PLLCFGR]  { return mmio.RM32[PLLCFGR]{&p.PLLCFGR, PLLSRC} }
func PLLM_(p *Periph) mmio.RM32[PLLCFGR]    { return mmio.RM32[PLLCFGR]{&p.PLLCFGR, PLLM} }
func PLLN_(p *Periph) mmio.RM32[PLLCFGR]    { return mmio.RM32[PLLCFGR]{&p.PLLCFGR, PLLN} }
func PLLPEN_(p *Periph) mmio.RM32[PLLCFGR]  { return mmio.RM32[PLLCFGR]{&p.PLLCFGR, PLLPEN} }
func PLLP_(p *Periph) mmio.RM32[PLLCFGR]    { return mmio.RM32[PLLCFGR]{&p.PLLCFGR, PLLP} }
func PLLQEN_(p *Periph) mmio.RM32[PLLCFGR]  { return mmio.RM32[PLLCFGR]{&p.PLLCFGR, PLLQEN} }
func PLLQ_(p *Periph) mmio.RM32[PLLCFGR]    { return mmio.RM32[PLLCFGR]{&p.PLLCFGR, PLLQ} }
func PLLREN_(p *Periph) mmio.RM32[PLLCFGR]  { return mmio.RM32[PLLCFGR]{&p.PLLCFGR, PLLREN} }
func PLLR_(p *Periph) mmio.RM32[PLLCFGR]    { return mmio.RM32[PLLCFGR]{&p.PLLCFGR, PLLR} }
func PLLPDIV_(p *Periph) mmio.RM32[PLLCFGR] { return mmio.RM32[PLLCFGR]{&p.PLLCFGR, PLLPDIV} }

type PLLSAI1CFGR uint32

func PLLSAI1N_(p *Periph) mmio.RM32[PLLSAI1CFGR] {
	return mmio.RM32[PLLSAI1CFGR]{&p.PLLSAI1CFGR, PLLSAI1N}
}
func PLLSAI1PEN_(p *Periph) mmio.RM32[PLLSAI1CFGR] {
	return mmio.RM32[PLLSAI1CFGR]{&p.PLLSAI1CFGR, PLLSAI1PEN}
}
func PLLSAI1P_(p *Periph) mmio.RM32[PLLSAI1CFGR] {
	return mmio.RM32[PLLSAI1CFGR]{&p.PLLSAI1CFGR, PLLSAI1P}
}
func PLLSAI1QEN_(p *Periph) mmio.RM32[PLLSAI1CFGR] {
	return mmio.RM32[PLLSAI1CFGR]{&p.PLLSAI1CFGR, PLLSAI1QEN}
}
func PLLSAI1Q_(p *Periph) mmio.RM32[PLLSAI1CFGR] {
	return mmio.RM32[PLLSAI1CFGR]{&p.PLLSAI1CFGR, PLLSAI1Q}
}
func PLLSAI1REN_(p *Periph) mmio.RM32[PLLSAI1CFGR] {
	return mmio.RM32[PLLSAI1CFGR]{&p.PLLSAI1CFGR, PLLSAI1REN}
}
func PLLSAI1R_(p *Periph) mmio.RM32[PLLSAI1CFGR] {
	return mmio.RM32[PLLSAI1CFGR]{&p.PLLSAI1CFGR, PLLSAI1R}
}
func PLLSAI1PDIV_(p *Periph) mmio.RM32[PLLSAI1CFGR] {
	return mmio.RM32[PLLSAI1CFGR]{&p.PLLSAI1CFGR, PLLSAI1PDIV}
}

type PLLSAI2CFGR uint32

func PLLSAI2N_(p *Periph) mmio.RM32[PLLSAI2CFGR] {
	return mmio.RM32[PLLSAI2CFGR]{&p.PLLSAI2CFGR, PLLSAI2N}
}
func PLLSAI2PEN_(p *Periph) mmio.RM32[PLLSAI2CFGR] {
	return mmio.RM32[PLLSAI2CFGR]{&p.PLLSAI2CFGR, PLLSAI2PEN}
}
func PLLSAI2P_(p *Periph) mmio.RM32[PLLSAI2CFGR] {
	return mmio.RM32[PLLSAI2CFGR]{&p.PLLSAI2CFGR, PLLSAI2P}
}
func PLLSAI2REN_(p *Periph) mmio.RM32[PLLSAI2CFGR] {
	return mmio.RM32[PLLSAI2CFGR]{&p.PLLSAI2CFGR, PLLSAI2REN}
}
func PLLSAI2R_(p *Periph) mmio.RM32[PLLSAI2CFGR] {
	return mmio.RM32[PLLSAI2CFGR]{&p.PLLSAI2CFGR, PLLSAI2R}
}
func PLLSAI2PDIV_(p *Periph) mmio.RM32[PLLSAI2CFGR] {
	return mmio.RM32[PLLSAI2CFGR]{&p.PLLSAI2CFGR, PLLSAI2PDIV}
}

type CIER uint32

func LSIRDYIE_(p *Periph) mmio.RM32[CIER]     { return mmio.RM32[CIER]{&p.CIER, LSIRDYIE} }
func LSERDYIE_(p *Periph) mmio.RM32[CIER]     { return mmio.RM32[CIER]{&p.CIER, LSERDYIE} }
func MSIRDYIE_(p *Periph) mmio.RM32[CIER]     { return mmio.RM32[CIER]{&p.CIER, MSIRDYIE} }
func HSIRDYIE_(p *Periph) mmio.RM32[CIER]     { return mmio.RM32[CIER]{&p.CIER, HSIRDYIE} }
func HSERDYIE_(p *Periph) mmio.RM32[CIER]     { return mmio.RM32[CIER]{&p.CIER, HSERDYIE} }
func PLLRDYIE_(p *Periph) mmio.RM32[CIER]     { return mmio.RM32[CIER]{&p.CIER, PLLRDYIE} }
func PLLSAI1RDYIE_(p *Periph) mmio.RM32[CIER] { return mmio.RM32[CIER]{&p.CIER, PLLSAI1RDYIE} }
func PLLSAI2RDYIE_(p *Periph) mmio.RM32[CIER] { return mmio.RM32[CIER]{&p.CIER, PLLSAI2RDYIE} }
func LSECSSIE_(p *Periph) mmio.RM32[CIER]     { return mmio.RM32[CIER]{&p.CIER, LSECSSIE} }
func HSI48RDYIE_(p *Periph) mmio.RM32[CIER]   { return mmio.RM32[CIER]{&p.CIER, HSI48RDYIE} }

type CIFR uint32

func LSIRDYF_(p *Periph) mmio.RM32[CIFR]     { return mmio.RM32[CIFR]{&p.CIFR, LSIRDYF} }
func LSERDYF_(p *Periph) mmio.RM32[CIFR]     { return mmio.RM32[CIFR]{&p.CIFR, LSERDYF} }
func MSIRDYF_(p *Periph) mmio.RM32[CIFR]     { return mmio.RM32[CIFR]{&p.CIFR, MSIRDYF} }
func HSIRDYF_(p *Periph) mmio.RM32[CIFR]     { return mmio.RM32[CIFR]{&p.CIFR, HSIRDYF} }
func HSERDYF_(p *Periph) mmio.RM32[CIFR]     { return mmio.RM32[CIFR]{&p.CIFR, HSERDYF} }
func PLLRDYF_(p *Periph) mmio.RM32[CIFR]     { return mmio.RM32[CIFR]{&p.CIFR, PLLRDYF} }
func PLLSAI1RDYF_(p *Periph) mmio.RM32[CIFR] { return mmio.RM32[CIFR]{&p.CIFR, PLLSAI1RDYF} }
func PLLSAI2RDYF_(p *Periph) mmio.RM32[CIFR] { return mmio.RM32[CIFR]{&p.CIFR, PLLSAI2RDYF} }
func CSSF_(p *Periph) mmio.RM32[CIFR]        { return mmio.RM32[CIFR]{&p.CIFR, CSSF} }
func LSECSSF_(p *Periph) mmio.RM32[CIFR]     { return mmio.RM32[CIFR]{&p.CIFR, LSECSSF} }
func HSI48RDYF_(p *Periph) mmio.RM32[CIFR]   { return mmio.RM32[CIFR]{&p.CIFR, HSI48RDYF} }

type CICR uint32

func LSIRDYC_(p *Periph) mmio.RM32[CICR]     { return mmio.RM32[CICR]{&p.CICR, LSIRDYC} }
func LSERDYC_(p *Periph) mmio.RM32[CICR]     { return mmio.RM32[CICR]{&p.CICR, LSERDYC} }
func MSIRDYC_(p *Periph) mmio.RM32[CICR]     { return mmio.RM32[CICR]{&p.CICR, MSIRDYC} }
func HSIRDYC_(p *Periph) mmio.RM32[CICR]     { return mmio.RM32[CICR]{&p.CICR, HSIRDYC} }
func HSERDYC_(p *Periph) mmio.RM32[CICR]     { return mmio.RM32[CICR]{&p.CICR, HSERDYC} }
func PLLRDYC_(p *Periph) mmio.RM32[CICR]     { return mmio.RM32[CICR]{&p.CICR, PLLRDYC} }
func PLLSAI1RDYC_(p *Periph) mmio.RM32[CICR] { return mmio.RM32[CICR]{&p.CICR, PLLSAI1RDYC} }
func PLLSAI2RDYC_(p *Periph) mmio.RM32[CICR] { return mmio.RM32[CICR]{&p.CICR, PLLSAI2RDYC} }
func CSSC_(p *Periph) mmio.RM32[CICR]        { return mmio.RM32[CICR]{&p.CICR, CSSC} }
func LSECSSC_(p *Periph) mmio.RM32[CICR]     { return mmio.RM32[CICR]{&p.CICR, LSECSSC} }
func HSI48RDYC_(p *Periph) mmio.RM32[CICR]   { return mmio.RM32[CICR]{&p.CICR, HSI48RDYC} }

type AHB1RSTR uint32

func DMA1RST_(p *Periph) mmio.RM32[AHB1RSTR]  { return mmio.RM32[AHB1RSTR]{&p.AHB1RSTR, DMA1RST} }
func DMA2RST_(p *Periph) mmio.RM32[AHB1RSTR]  { return mmio.RM32[AHB1RSTR]{&p.AHB1RSTR, DMA2RST} }
func FLASHRST_(p *Periph) mmio.RM32[AHB1RSTR] { return mmio.RM32[AHB1RSTR]{&p.AHB1RSTR, FLASHRST} }
func CRCRST_(p *Periph) mmio.RM32[AHB1RSTR]   { return mmio.RM32[AHB1RSTR]{&p.AHB1RSTR, CRCRST} }
func TSCRST_(p *Periph) mmio.RM32[AHB1RSTR]   { return mmio.RM32[AHB1RSTR]{&p.AHB1RSTR, TSCRST} }
func DMA2DRST_(p *Periph) mmio.RM32[AHB1RSTR] { return mmio.RM32[AHB1RSTR]{&p.AHB1RSTR, DMA2DRST} }

type AHB2RSTR uint32

func GPIOARST_(p *Periph) mmio.RM32[AHB2RSTR] { return mmio.RM32[AHB2RSTR]{&p.AHB2RSTR, GPIOARST} }
func GPIOBRST_(p *Periph) mmio.RM32[AHB2RSTR] { return mmio.RM32[AHB2RSTR]{&p.AHB2RSTR, GPIOBRST} }
func GPIOCRST_(p *Periph) mmio.RM32[AHB2RSTR] { return mmio.RM32[AHB2RSTR]{&p.AHB2RSTR, GPIOCRST} }
func GPIODRST_(p *Periph) mmio.RM32[AHB2RSTR] { return mmio.RM32[AHB2RSTR]{&p.AHB2RSTR, GPIODRST} }
func GPIOERST_(p *Periph) mmio.RM32[AHB2RSTR] { return mmio.RM32[AHB2RSTR]{&p.AHB2RSTR, GPIOERST} }
func GPIOFRST_(p *Periph) mmio.RM32[AHB2RSTR] { return mmio.RM32[AHB2RSTR]{&p.AHB2RSTR, GPIOFRST} }
func GPIOGRST_(p *Periph) mmio.RM32[AHB2RSTR] { return mmio.RM32[AHB2RSTR]{&p.AHB2RSTR, GPIOGRST} }
func GPIOHRST_(p *Periph) mmio.RM32[AHB2RSTR] { return mmio.RM32[AHB2RSTR]{&p.AHB2RSTR, GPIOHRST} }
func GPIOIRST_(p *Periph) mmio.RM32[AHB2RSTR] { return mmio.RM32[AHB2RSTR]{&p.AHB2RSTR, GPIOIRST} }
func OTGFSRST_(p *Periph) mmio.RM32[AHB2RSTR] { return mmio.RM32[AHB2RSTR]{&p.AHB2RSTR, OTGFSRST} }
func ADCRST_(p *Periph) mmio.RM32[AHB2RSTR]   { return mmio.RM32[AHB2RSTR]{&p.AHB2RSTR, ADCRST} }
func DCMIRST_(p *Periph) mmio.RM32[AHB2RSTR]  { return mmio.RM32[AHB2RSTR]{&p.AHB2RSTR, DCMIRST} }
func AESRST_(p *Periph) mmio.RM32[AHB2RSTR]   { return mmio.RM32[AHB2RSTR]{&p.AHB2RSTR, AESRST} }
func HASH1RST_(p *Periph) mmio.RM32[AHB2RSTR] { return mmio.RM32[AHB2RSTR]{&p.AHB2RSTR, HASH1RST} }
func RNGRST_(p *Periph) mmio.RM32[AHB2RSTR]   { return mmio.RM32[AHB2RSTR]{&p.AHB2RSTR, RNGRST} }

type AHB3RSTR uint32

func FMCRST_(p *Periph) mmio.RM32[AHB3RSTR]  { return mmio.RM32[AHB3RSTR]{&p.AHB3RSTR, FMCRST} }
func QSPIRST_(p *Periph) mmio.RM32[AHB3RSTR] { return mmio.RM32[AHB3RSTR]{&p.AHB3RSTR, QSPIRST} }

type APB1RSTR1 uint32

func TIM2RST_(p *Periph) mmio.RM32[APB1RSTR1]   { return mmio.RM32[APB1RSTR1]{&p.APB1RSTR1, TIM2RST} }
func TIM3RST_(p *Periph) mmio.RM32[APB1RSTR1]   { return mmio.RM32[APB1RSTR1]{&p.APB1RSTR1, TIM3RST} }
func TIM4RST_(p *Periph) mmio.RM32[APB1RSTR1]   { return mmio.RM32[APB1RSTR1]{&p.APB1RSTR1, TIM4RST} }
func TIM5RST_(p *Periph) mmio.RM32[APB1RSTR1]   { return mmio.RM32[APB1RSTR1]{&p.APB1RSTR1, TIM5RST} }
func TIM6RST_(p *Periph) mmio.RM32[APB1RSTR1]   { return mmio.RM32[APB1RSTR1]{&p.APB1RSTR1, TIM6RST} }
func TIM7RST_(p *Periph) mmio.RM32[APB1RSTR1]   { return mmio.RM32[APB1RSTR1]{&p.APB1RSTR1, TIM7RST} }
func LCDRST_(p *Periph) mmio.RM32[APB1RSTR1]    { return mmio.RM32[APB1RSTR1]{&p.APB1RSTR1, LCDRST} }
func SPI2RST_(p *Periph) mmio.RM32[APB1RSTR1]   { return mmio.RM32[APB1RSTR1]{&p.APB1RSTR1, SPI2RST} }
func SPI3RST_(p *Periph) mmio.RM32[APB1RSTR1]   { return mmio.RM32[APB1RSTR1]{&p.APB1RSTR1, SPI3RST} }
func USART2RST_(p *Periph) mmio.RM32[APB1RSTR1] { return mmio.RM32[APB1RSTR1]{&p.APB1RSTR1, USART2RST} }
func USART3RST_(p *Periph) mmio.RM32[APB1RSTR1] { return mmio.RM32[APB1RSTR1]{&p.APB1RSTR1, USART3RST} }
func UART4RST_(p *Periph) mmio.RM32[APB1RSTR1]  { return mmio.RM32[APB1RSTR1]{&p.APB1RSTR1, UART4RST} }
func UART5RST_(p *Periph) mmio.RM32[APB1RSTR1]  { return mmio.RM32[APB1RSTR1]{&p.APB1RSTR1, UART5RST} }
func I2C1RST_(p *Periph) mmio.RM32[APB1RSTR1]   { return mmio.RM32[APB1RSTR1]{&p.APB1RSTR1, I2C1RST} }
func I2C2RST_(p *Periph) mmio.RM32[APB1RSTR1]   { return mmio.RM32[APB1RSTR1]{&p.APB1RSTR1, I2C2RST} }
func I2C3RST_(p *Periph) mmio.RM32[APB1RSTR1]   { return mmio.RM32[APB1RSTR1]{&p.APB1RSTR1, I2C3RST} }
func CRSRST_(p *Periph) mmio.RM32[APB1RSTR1]    { return mmio.RM32[APB1RSTR1]{&p.APB1RSTR1, CRSRST} }
func CAN1RST_(p *Periph) mmio.RM32[APB1RSTR1]   { return mmio.RM32[APB1RSTR1]{&p.APB1RSTR1, CAN1RST} }
func CAN2RST_(p *Periph) mmio.RM32[APB1RSTR1]   { return mmio.RM32[APB1RSTR1]{&p.APB1RSTR1, CAN2RST} }
func PWRRST_(p *Periph) mmio.RM32[APB1RSTR1]    { return mmio.RM32[APB1RSTR1]{&p.APB1RSTR1, PWRRST} }
func DAC1RST_(p *Periph) mmio.RM32[APB1RSTR1]   { return mmio.RM32[APB1RSTR1]{&p.APB1RSTR1, DAC1RST} }
func OPAMPRST_(p *Periph) mmio.RM32[APB1RSTR1]  { return mmio.RM32[APB1RSTR1]{&p.APB1RSTR1, OPAMPRST} }
func LPTIM1RST_(p *Periph) mmio.RM32[APB1RSTR1] { return mmio.RM32[APB1RSTR1]{&p.APB1RSTR1, LPTIM1RST} }

type APB1RSTR2 uint32

func LPUART1RST_(p *Periph) mmio.RM32[APB1RSTR2] {
	return mmio.RM32[APB1RSTR2]{&p.APB1RSTR2, LPUART1RST}
}
func I2C4RST_(p *Periph) mmio.RM32[APB1RSTR2]   { return mmio.RM32[APB1RSTR2]{&p.APB1RSTR2, I2C4RST} }
func SWPMI1RST_(p *Periph) mmio.RM32[APB1RSTR2] { return mmio.RM32[APB1RSTR2]{&p.APB1RSTR2, SWPMI1RST} }
func LPTIM2RST_(p *Periph) mmio.RM32[APB1RSTR2] { return mmio.RM32[APB1RSTR2]{&p.APB1RSTR2, LPTIM2RST} }

type APB2RSTR uint32

func SYSCFGRST_(p *Periph) mmio.RM32[APB2RSTR] { return mmio.RM32[APB2RSTR]{&p.APB2RSTR, SYSCFGRST} }
func SDMMCRST_(p *Periph) mmio.RM32[APB2RSTR]  { return mmio.RM32[APB2RSTR]{&p.APB2RSTR, SDMMCRST} }
func TIM1RST_(p *Periph) mmio.RM32[APB2RSTR]   { return mmio.RM32[APB2RSTR]{&p.APB2RSTR, TIM1RST} }
func SPI1RST_(p *Periph) mmio.RM32[APB2RSTR]   { return mmio.RM32[APB2RSTR]{&p.APB2RSTR, SPI1RST} }
func TIM8RST_(p *Periph) mmio.RM32[APB2RSTR]   { return mmio.RM32[APB2RSTR]{&p.APB2RSTR, TIM8RST} }
func USART1RST_(p *Periph) mmio.RM32[APB2RSTR] { return mmio.RM32[APB2RSTR]{&p.APB2RSTR, USART1RST} }
func TIM15RST_(p *Periph) mmio.RM32[APB2RSTR]  { return mmio.RM32[APB2RSTR]{&p.APB2RSTR, TIM15RST} }
func TIM16RST_(p *Periph) mmio.RM32[APB2RSTR]  { return mmio.RM32[APB2RSTR]{&p.APB2RSTR, TIM16RST} }
func TIM17RST_(p *Periph) mmio.RM32[APB2RSTR]  { return mmio.RM32[APB2RSTR]{&p.APB2RSTR, TIM17RST} }
func SAI1RST_(p *Periph) mmio.RM32[APB2RSTR]   { return mmio.RM32[APB2RSTR]{&p.APB2RSTR, SAI1RST} }
func SAI2RST_(p *Periph) mmio.RM32[APB2RSTR]   { return mmio.RM32[APB2RSTR]{&p.APB2RSTR, SAI2RST} }
func DFSDMRST_(p *Periph) mmio.RM32[APB2RSTR]  { return mmio.RM32[APB2RSTR]{&p.APB2RSTR, DFSDMRST} }

type AHB1ENR uint32

func DMA1EN_(p *Periph) mmio.RM32[AHB1ENR]  { return mmio.RM32[AHB1ENR]{&p.AHB1ENR, DMA1EN} }
func DMA2EN_(p *Periph) mmio.RM32[AHB1ENR]  { return mmio.RM32[AHB1ENR]{&p.AHB1ENR, DMA2EN} }
func FLASHEN_(p *Periph) mmio.RM32[AHB1ENR] { return mmio.RM32[AHB1ENR]{&p.AHB1ENR, FLASHEN} }
func CRCEN_(p *Periph) mmio.RM32[AHB1ENR]   { return mmio.RM32[AHB1ENR]{&p.AHB1ENR, CRCEN} }
func TSCEN_(p *Periph) mmio.RM32[AHB1ENR]   { return mmio.RM32[AHB1ENR]{&p.AHB1ENR, TSCEN} }
func DMA2DEN_(p *Periph) mmio.RM32[AHB1ENR] { return mmio.RM32[AHB1ENR]{&p.AHB1ENR, DMA2DEN} }

type AHB2ENR uint32

func GPIOAEN_(p *Periph) mmio.RM32[AHB2ENR] { return mmio.RM32[AHB2ENR]{&p.AHB2ENR, GPIOAEN} }
func GPIOBEN_(p *Periph) mmio.RM32[AHB2ENR] { return mmio.RM32[AHB2ENR]{&p.AHB2ENR, GPIOBEN} }
func GPIOCEN_(p *Periph) mmio.RM32[AHB2ENR] { return mmio.RM32[AHB2ENR]{&p.AHB2ENR, GPIOCEN} }
func GPIODEN_(p *Periph) mmio.RM32[AHB2ENR] { return mmio.RM32[AHB2ENR]{&p.AHB2ENR, GPIODEN} }
func GPIOEEN_(p *Periph) mmio.RM32[AHB2ENR] { return mmio.RM32[AHB2ENR]{&p.AHB2ENR, GPIOEEN} }
func GPIOFEN_(p *Periph) mmio.RM32[AHB2ENR] { return mmio.RM32[AHB2ENR]{&p.AHB2ENR, GPIOFEN} }
func GPIOGEN_(p *Periph) mmio.RM32[AHB2ENR] { return mmio.RM32[AHB2ENR]{&p.AHB2ENR, GPIOGEN} }
func GPIOHEN_(p *Periph) mmio.RM32[AHB2ENR] { return mmio.RM32[AHB2ENR]{&p.AHB2ENR, GPIOHEN} }
func GPIOIEN_(p *Periph) mmio.RM32[AHB2ENR] { return mmio.RM32[AHB2ENR]{&p.AHB2ENR, GPIOIEN} }
func OTGFSEN_(p *Periph) mmio.RM32[AHB2ENR] { return mmio.RM32[AHB2ENR]{&p.AHB2ENR, OTGFSEN} }
func ADCEN_(p *Periph) mmio.RM32[AHB2ENR]   { return mmio.RM32[AHB2ENR]{&p.AHB2ENR, ADCEN} }
func DCMIEN_(p *Periph) mmio.RM32[AHB2ENR]  { return mmio.RM32[AHB2ENR]{&p.AHB2ENR, DCMIEN} }
func AESEN_(p *Periph) mmio.RM32[AHB2ENR]   { return mmio.RM32[AHB2ENR]{&p.AHB2ENR, AESEN} }
func HASH1EN_(p *Periph) mmio.RM32[AHB2ENR] { return mmio.RM32[AHB2ENR]{&p.AHB2ENR, HASH1EN} }
func RNGEN_(p *Periph) mmio.RM32[AHB2ENR]   { return mmio.RM32[AHB2ENR]{&p.AHB2ENR, RNGEN} }

type AHB3ENR uint32

func FMCEN_(p *Periph) mmio.RM32[AHB3ENR]  { return mmio.RM32[AHB3ENR]{&p.AHB3ENR, FMCEN} }
func QSPIEN_(p *Periph) mmio.RM32[AHB3ENR] { return mmio.RM32[AHB3ENR]{&p.AHB3ENR, QSPIEN} }

type APB1ENR1 uint32

func TIM2EN_(p *Periph) mmio.RM32[APB1ENR1]   { return mmio.RM32[APB1ENR1]{&p.APB1ENR1, TIM2EN} }
func TIM3EN_(p *Periph) mmio.RM32[APB1ENR1]   { return mmio.RM32[APB1ENR1]{&p.APB1ENR1, TIM3EN} }
func TIM4EN_(p *Periph) mmio.RM32[APB1ENR1]   { return mmio.RM32[APB1ENR1]{&p.APB1ENR1, TIM4EN} }
func TIM5EN_(p *Periph) mmio.RM32[APB1ENR1]   { return mmio.RM32[APB1ENR1]{&p.APB1ENR1, TIM5EN} }
func TIM6EN_(p *Periph) mmio.RM32[APB1ENR1]   { return mmio.RM32[APB1ENR1]{&p.APB1ENR1, TIM6EN} }
func TIM7EN_(p *Periph) mmio.RM32[APB1ENR1]   { return mmio.RM32[APB1ENR1]{&p.APB1ENR1, TIM7EN} }
func LCDEN_(p *Periph) mmio.RM32[APB1ENR1]    { return mmio.RM32[APB1ENR1]{&p.APB1ENR1, LCDEN} }
func RTCAPBEN_(p *Periph) mmio.RM32[APB1ENR1] { return mmio.RM32[APB1ENR1]{&p.APB1ENR1, RTCAPBEN} }
func WWDGEN_(p *Periph) mmio.RM32[APB1ENR1]   { return mmio.RM32[APB1ENR1]{&p.APB1ENR1, WWDGEN} }
func SPI2EN_(p *Periph) mmio.RM32[APB1ENR1]   { return mmio.RM32[APB1ENR1]{&p.APB1ENR1, SPI2EN} }
func SPI3EN_(p *Periph) mmio.RM32[APB1ENR1]   { return mmio.RM32[APB1ENR1]{&p.APB1ENR1, SPI3EN} }
func USART2EN_(p *Periph) mmio.RM32[APB1ENR1] { return mmio.RM32[APB1ENR1]{&p.APB1ENR1, USART2EN} }
func USART3EN_(p *Periph) mmio.RM32[APB1ENR1] { return mmio.RM32[APB1ENR1]{&p.APB1ENR1, USART3EN} }
func UART4EN_(p *Periph) mmio.RM32[APB1ENR1]  { return mmio.RM32[APB1ENR1]{&p.APB1ENR1, UART4EN} }
func UART5EN_(p *Periph) mmio.RM32[APB1ENR1]  { return mmio.RM32[APB1ENR1]{&p.APB1ENR1, UART5EN} }
func I2C1EN_(p *Periph) mmio.RM32[APB1ENR1]   { return mmio.RM32[APB1ENR1]{&p.APB1ENR1, I2C1EN} }
func I2C2EN_(p *Periph) mmio.RM32[APB1ENR1]   { return mmio.RM32[APB1ENR1]{&p.APB1ENR1, I2C2EN} }
func I2C3EN_(p *Periph) mmio.RM32[APB1ENR1]   { return mmio.RM32[APB1ENR1]{&p.APB1ENR1, I2C3EN} }
func CRSEN_(p *Periph) mmio.RM32[APB1ENR1]    { return mmio.RM32[APB1ENR1]{&p.APB1ENR1, CRSEN} }
func CAN1EN_(p *Periph) mmio.RM32[APB1ENR1]   { return mmio.RM32[APB1ENR1]{&p.APB1ENR1, CAN1EN} }
func CAN2EN_(p *Periph) mmio.RM32[APB1ENR1]   { return mmio.RM32[APB1ENR1]{&p.APB1ENR1, CAN2EN} }
func PWREN_(p *Periph) mmio.RM32[APB1ENR1]    { return mmio.RM32[APB1ENR1]{&p.APB1ENR1, PWREN} }
func DAC1EN_(p *Periph) mmio.RM32[APB1ENR1]   { return mmio.RM32[APB1ENR1]{&p.APB1ENR1, DAC1EN} }
func OPAMPEN_(p *Periph) mmio.RM32[APB1ENR1]  { return mmio.RM32[APB1ENR1]{&p.APB1ENR1, OPAMPEN} }
func LPTIM1EN_(p *Periph) mmio.RM32[APB1ENR1] { return mmio.RM32[APB1ENR1]{&p.APB1ENR1, LPTIM1EN} }

type APB1ENR2 uint32

func LPUART1EN_(p *Periph) mmio.RM32[APB1ENR2] { return mmio.RM32[APB1ENR2]{&p.APB1ENR2, LPUART1EN} }
func I2C4EN_(p *Periph) mmio.RM32[APB1ENR2]    { return mmio.RM32[APB1ENR2]{&p.APB1ENR2, I2C4EN} }
func SWPMI1EN_(p *Periph) mmio.RM32[APB1ENR2]  { return mmio.RM32[APB1ENR2]{&p.APB1ENR2, SWPMI1EN} }
func LPTIM2EN_(p *Periph) mmio.RM32[APB1ENR2]  { return mmio.RM32[APB1ENR2]{&p.APB1ENR2, LPTIM2EN} }

type APB2ENR uint32

func SYSCFGEN_(p *Periph) mmio.RM32[APB2ENR]   { return mmio.RM32[APB2ENR]{&p.APB2ENR, SYSCFGEN} }
func FIREWALLEN_(p *Periph) mmio.RM32[APB2ENR] { return mmio.RM32[APB2ENR]{&p.APB2ENR, FIREWALLEN} }
func SDMMCEN_(p *Periph) mmio.RM32[APB2ENR]    { return mmio.RM32[APB2ENR]{&p.APB2ENR, SDMMCEN} }
func TIM1EN_(p *Periph) mmio.RM32[APB2ENR]     { return mmio.RM32[APB2ENR]{&p.APB2ENR, TIM1EN} }
func SPI1EN_(p *Periph) mmio.RM32[APB2ENR]     { return mmio.RM32[APB2ENR]{&p.APB2ENR, SPI1EN} }
func TIM8EN_(p *Periph) mmio.RM32[APB2ENR]     { return mmio.RM32[APB2ENR]{&p.APB2ENR, TIM8EN} }
func USART1EN_(p *Periph) mmio.RM32[APB2ENR]   { return mmio.RM32[APB2ENR]{&p.APB2ENR, USART1EN} }
func TIM15EN_(p *Periph) mmio.RM32[APB2ENR]    { return mmio.RM32[APB2ENR]{&p.APB2ENR, TIM15EN} }
func TIM16EN_(p *Periph) mmio.RM32[APB2ENR]    { return mmio.RM32[APB2ENR]{&p.APB2ENR, TIM16EN} }
func TIM17EN_(p *Periph) mmio.RM32[APB2ENR]    { return mmio.RM32[APB2ENR]{&p.APB2ENR, TIM17EN} }
func SAI1EN_(p *Periph) mmio.RM32[APB2ENR]     { return mmio.RM32[APB2ENR]{&p.APB2ENR, SAI1EN} }
func SAI2EN_(p *Periph) mmio.RM32[APB2ENR]     { return mmio.RM32[APB2ENR]{&p.APB2ENR, SAI2EN} }
func DFSDMEN_(p *Periph) mmio.RM32[APB2ENR]    { return mmio.RM32[APB2ENR]{&p.APB2ENR, DFSDMEN} }

type AHB1SMENR uint32

func DMA1SMEN_(p *Periph) mmio.RM32[AHB1SMENR]  { return mmio.RM32[AHB1SMENR]{&p.AHB1SMENR, DMA1SMEN} }
func DMA2SMEN_(p *Periph) mmio.RM32[AHB1SMENR]  { return mmio.RM32[AHB1SMENR]{&p.AHB1SMENR, DMA2SMEN} }
func FLASHSMEN_(p *Periph) mmio.RM32[AHB1SMENR] { return mmio.RM32[AHB1SMENR]{&p.AHB1SMENR, FLASHSMEN} }
func SRAM1SMEN_(p *Periph) mmio.RM32[AHB1SMENR] { return mmio.RM32[AHB1SMENR]{&p.AHB1SMENR, SRAM1SMEN} }
func CRCSMEN_(p *Periph) mmio.RM32[AHB1SMENR]   { return mmio.RM32[AHB1SMENR]{&p.AHB1SMENR, CRCSMEN} }
func TSCSMEN_(p *Periph) mmio.RM32[AHB1SMENR]   { return mmio.RM32[AHB1SMENR]{&p.AHB1SMENR, TSCSMEN} }
func DMA2DSMEN_(p *Periph) mmio.RM32[AHB1SMENR] { return mmio.RM32[AHB1SMENR]{&p.AHB1SMENR, DMA2DSMEN} }

type AHB2SMENR uint32

func GPIOASMEN_(p *Periph) mmio.RM32[AHB2SMENR] { return mmio.RM32[AHB2SMENR]{&p.AHB2SMENR, GPIOASMEN} }
func GPIOBSMEN_(p *Periph) mmio.RM32[AHB2SMENR] { return mmio.RM32[AHB2SMENR]{&p.AHB2SMENR, GPIOBSMEN} }
func GPIOCSMEN_(p *Periph) mmio.RM32[AHB2SMENR] { return mmio.RM32[AHB2SMENR]{&p.AHB2SMENR, GPIOCSMEN} }
func GPIODSMEN_(p *Periph) mmio.RM32[AHB2SMENR] { return mmio.RM32[AHB2SMENR]{&p.AHB2SMENR, GPIODSMEN} }
func GPIOESMEN_(p *Periph) mmio.RM32[AHB2SMENR] { return mmio.RM32[AHB2SMENR]{&p.AHB2SMENR, GPIOESMEN} }
func GPIOFSMEN_(p *Periph) mmio.RM32[AHB2SMENR] { return mmio.RM32[AHB2SMENR]{&p.AHB2SMENR, GPIOFSMEN} }
func GPIOGSMEN_(p *Periph) mmio.RM32[AHB2SMENR] { return mmio.RM32[AHB2SMENR]{&p.AHB2SMENR, GPIOGSMEN} }
func GPIOHSMEN_(p *Periph) mmio.RM32[AHB2SMENR] { return mmio.RM32[AHB2SMENR]{&p.AHB2SMENR, GPIOHSMEN} }
func GPIOISMEN_(p *Periph) mmio.RM32[AHB2SMENR] { return mmio.RM32[AHB2SMENR]{&p.AHB2SMENR, GPIOISMEN} }
func SRAM2SMEN_(p *Periph) mmio.RM32[AHB2SMENR] { return mmio.RM32[AHB2SMENR]{&p.AHB2SMENR, SRAM2SMEN} }
func OTGFSSMEN_(p *Periph) mmio.RM32[AHB2SMENR] { return mmio.RM32[AHB2SMENR]{&p.AHB2SMENR, OTGFSSMEN} }
func ADCFSSMEN_(p *Periph) mmio.RM32[AHB2SMENR] { return mmio.RM32[AHB2SMENR]{&p.AHB2SMENR, ADCFSSMEN} }
func DCMISMEN_(p *Periph) mmio.RM32[AHB2SMENR]  { return mmio.RM32[AHB2SMENR]{&p.AHB2SMENR, DCMISMEN} }
func AESSMEN_(p *Periph) mmio.RM32[AHB2SMENR]   { return mmio.RM32[AHB2SMENR]{&p.AHB2SMENR, AESSMEN} }
func HASH1SMEN_(p *Periph) mmio.RM32[AHB2SMENR] { return mmio.RM32[AHB2SMENR]{&p.AHB2SMENR, HASH1SMEN} }
func RNGSMEN_(p *Periph) mmio.RM32[AHB2SMENR]   { return mmio.RM32[AHB2SMENR]{&p.AHB2SMENR, RNGSMEN} }

type AHB3SMENR uint32

func FMCSMEN_(p *Periph) mmio.RM32[AHB3SMENR]  { return mmio.RM32[AHB3SMENR]{&p.AHB3SMENR, FMCSMEN} }
func QSPISMEN_(p *Periph) mmio.RM32[AHB3SMENR] { return mmio.RM32[AHB3SMENR]{&p.AHB3SMENR, QSPISMEN} }

type APB1SMENR1 uint32

func TIM2SMEN_(p *Periph) mmio.RM32[APB1SMENR1] {
	return mmio.RM32[APB1SMENR1]{&p.APB1SMENR1, TIM2SMEN}
}
func TIM3SMEN_(p *Periph) mmio.RM32[APB1SMENR1] {
	return mmio.RM32[APB1SMENR1]{&p.APB1SMENR1, TIM3SMEN}
}
func TIM4SMEN_(p *Periph) mmio.RM32[APB1SMENR1] {
	return mmio.RM32[APB1SMENR1]{&p.APB1SMENR1, TIM4SMEN}
}
func TIM5SMEN_(p *Periph) mmio.RM32[APB1SMENR1] {
	return mmio.RM32[APB1SMENR1]{&p.APB1SMENR1, TIM5SMEN}
}
func TIM6SMEN_(p *Periph) mmio.RM32[APB1SMENR1] {
	return mmio.RM32[APB1SMENR1]{&p.APB1SMENR1, TIM6SMEN}
}
func TIM7SMEN_(p *Periph) mmio.RM32[APB1SMENR1] {
	return mmio.RM32[APB1SMENR1]{&p.APB1SMENR1, TIM7SMEN}
}
func LCDSMEN_(p *Periph) mmio.RM32[APB1SMENR1] { return mmio.RM32[APB1SMENR1]{&p.APB1SMENR1, LCDSMEN} }
func RTCAPBSMEN_(p *Periph) mmio.RM32[APB1SMENR1] {
	return mmio.RM32[APB1SMENR1]{&p.APB1SMENR1, RTCAPBSMEN}
}
func WWDGSMEN_(p *Periph) mmio.RM32[APB1SMENR1] {
	return mmio.RM32[APB1SMENR1]{&p.APB1SMENR1, WWDGSMEN}
}
func SPI2SMEN_(p *Periph) mmio.RM32[APB1SMENR1] {
	return mmio.RM32[APB1SMENR1]{&p.APB1SMENR1, SPI2SMEN}
}
func SPI3SMEN_(p *Periph) mmio.RM32[APB1SMENR1] {
	return mmio.RM32[APB1SMENR1]{&p.APB1SMENR1, SPI3SMEN}
}
func USART2SMEN_(p *Periph) mmio.RM32[APB1SMENR1] {
	return mmio.RM32[APB1SMENR1]{&p.APB1SMENR1, USART2SMEN}
}
func USART3SMEN_(p *Periph) mmio.RM32[APB1SMENR1] {
	return mmio.RM32[APB1SMENR1]{&p.APB1SMENR1, USART3SMEN}
}
func UART4SMEN_(p *Periph) mmio.RM32[APB1SMENR1] {
	return mmio.RM32[APB1SMENR1]{&p.APB1SMENR1, UART4SMEN}
}
func UART5SMEN_(p *Periph) mmio.RM32[APB1SMENR1] {
	return mmio.RM32[APB1SMENR1]{&p.APB1SMENR1, UART5SMEN}
}
func I2C1SMEN_(p *Periph) mmio.RM32[APB1SMENR1] {
	return mmio.RM32[APB1SMENR1]{&p.APB1SMENR1, I2C1SMEN}
}
func I2C2SMEN_(p *Periph) mmio.RM32[APB1SMENR1] {
	return mmio.RM32[APB1SMENR1]{&p.APB1SMENR1, I2C2SMEN}
}
func I2C3SMEN_(p *Periph) mmio.RM32[APB1SMENR1] {
	return mmio.RM32[APB1SMENR1]{&p.APB1SMENR1, I2C3SMEN}
}
func CAN1SMEN_(p *Periph) mmio.RM32[APB1SMENR1] {
	return mmio.RM32[APB1SMENR1]{&p.APB1SMENR1, CAN1SMEN}
}
func CAN2SMEN_(p *Periph) mmio.RM32[APB1SMENR1] {
	return mmio.RM32[APB1SMENR1]{&p.APB1SMENR1, CAN2SMEN}
}
func PWRSMEN_(p *Periph) mmio.RM32[APB1SMENR1] { return mmio.RM32[APB1SMENR1]{&p.APB1SMENR1, PWRSMEN} }
func DAC1SMEN_(p *Periph) mmio.RM32[APB1SMENR1] {
	return mmio.RM32[APB1SMENR1]{&p.APB1SMENR1, DAC1SMEN}
}
func OPAMPSMEN_(p *Periph) mmio.RM32[APB1SMENR1] {
	return mmio.RM32[APB1SMENR1]{&p.APB1SMENR1, OPAMPSMEN}
}
func LPTIM1SMEN_(p *Periph) mmio.RM32[APB1SMENR1] {
	return mmio.RM32[APB1SMENR1]{&p.APB1SMENR1, LPTIM1SMEN}
}

type APB1SMENR2 uint32

func LPUART1SMEN_(p *Periph) mmio.RM32[APB1SMENR2] {
	return mmio.RM32[APB1SMENR2]{&p.APB1SMENR2, LPUART1SMEN}
}
func I2C4SMEN_(p *Periph) mmio.RM32[APB1SMENR2] {
	return mmio.RM32[APB1SMENR2]{&p.APB1SMENR2, I2C4SMEN}
}
func SWPMI1SMEN_(p *Periph) mmio.RM32[APB1SMENR2] {
	return mmio.RM32[APB1SMENR2]{&p.APB1SMENR2, SWPMI1SMEN}
}
func LPTIM2SMEN_(p *Periph) mmio.RM32[APB1SMENR2] {
	return mmio.RM32[APB1SMENR2]{&p.APB1SMENR2, LPTIM2SMEN}
}

type APB2SMENR uint32

func SYSCFGSMEN_(p *Periph) mmio.RM32[APB2SMENR] {
	return mmio.RM32[APB2SMENR]{&p.APB2SMENR, SYSCFGSMEN}
}
func SDMMCSMEN_(p *Periph) mmio.RM32[APB2SMENR] { return mmio.RM32[APB2SMENR]{&p.APB2SMENR, SDMMCSMEN} }
func TIM1SMEN_(p *Periph) mmio.RM32[APB2SMENR]  { return mmio.RM32[APB2SMENR]{&p.APB2SMENR, TIM1SMEN} }
func SPI1SMEN_(p *Periph) mmio.RM32[APB2SMENR]  { return mmio.RM32[APB2SMENR]{&p.APB2SMENR, SPI1SMEN} }
func TIM8SMEN_(p *Periph) mmio.RM32[APB2SMENR]  { return mmio.RM32[APB2SMENR]{&p.APB2SMENR, TIM8SMEN} }
func USART1SMEN_(p *Periph) mmio.RM32[APB2SMENR] {
	return mmio.RM32[APB2SMENR]{&p.APB2SMENR, USART1SMEN}
}
func TIM15SMEN_(p *Periph) mmio.RM32[APB2SMENR] { return mmio.RM32[APB2SMENR]{&p.APB2SMENR, TIM15SMEN} }
func TIM16SMEN_(p *Periph) mmio.RM32[APB2SMENR] { return mmio.RM32[APB2SMENR]{&p.APB2SMENR, TIM16SMEN} }
func TIM17SMEN_(p *Periph) mmio.RM32[APB2SMENR] { return mmio.RM32[APB2SMENR]{&p.APB2SMENR, TIM17SMEN} }
func SAI1SMEN_(p *Periph) mmio.RM32[APB2SMENR]  { return mmio.RM32[APB2SMENR]{&p.APB2SMENR, SAI1SMEN} }
func SAI2SMEN_(p *Periph) mmio.RM32[APB2SMENR]  { return mmio.RM32[APB2SMENR]{&p.APB2SMENR, SAI2SMEN} }
func DFSDMSMEN_(p *Periph) mmio.RM32[APB2SMENR] { return mmio.RM32[APB2SMENR]{&p.APB2SMENR, DFSDMSMEN} }

type CCIPR uint32

func USART1SEL_(p *Periph) mmio.RM32[CCIPR]  { return mmio.RM32[CCIPR]{&p.CCIPR, USART1SEL} }
func USART2SEL_(p *Periph) mmio.RM32[CCIPR]  { return mmio.RM32[CCIPR]{&p.CCIPR, USART2SEL} }
func USART3SEL_(p *Periph) mmio.RM32[CCIPR]  { return mmio.RM32[CCIPR]{&p.CCIPR, USART3SEL} }
func UART4SEL_(p *Periph) mmio.RM32[CCIPR]   { return mmio.RM32[CCIPR]{&p.CCIPR, UART4SEL} }
func UART5SEL_(p *Periph) mmio.RM32[CCIPR]   { return mmio.RM32[CCIPR]{&p.CCIPR, UART5SEL} }
func LPUART1SEL_(p *Periph) mmio.RM32[CCIPR] { return mmio.RM32[CCIPR]{&p.CCIPR, LPUART1SEL} }
func I2C1SEL_(p *Periph) mmio.RM32[CCIPR]    { return mmio.RM32[CCIPR]{&p.CCIPR, I2C1SEL} }
func I2C2SEL_(p *Periph) mmio.RM32[CCIPR]    { return mmio.RM32[CCIPR]{&p.CCIPR, I2C2SEL} }
func I2C3SEL_(p *Periph) mmio.RM32[CCIPR]    { return mmio.RM32[CCIPR]{&p.CCIPR, I2C3SEL} }
func LPTIM1SEL_(p *Periph) mmio.RM32[CCIPR]  { return mmio.RM32[CCIPR]{&p.CCIPR, LPTIM1SEL} }
func LPTIM2SEL_(p *Periph) mmio.RM32[CCIPR]  { return mmio.RM32[CCIPR]{&p.CCIPR, LPTIM2SEL} }
func SAI1SEL_(p *Periph) mmio.RM32[CCIPR]    { return mmio.RM32[CCIPR]{&p.CCIPR, SAI1SEL} }
func SAI2SEL_(p *Periph) mmio.RM32[CCIPR]    { return mmio.RM32[CCIPR]{&p.CCIPR, SAI2SEL} }
func CLK48SEL_(p *Periph) mmio.RM32[CCIPR]   { return mmio.RM32[CCIPR]{&p.CCIPR, CLK48SEL} }
func ADCSEL_(p *Periph) mmio.RM32[CCIPR]     { return mmio.RM32[CCIPR]{&p.CCIPR, ADCSEL} }
func SWPMI1SEL_(p *Periph) mmio.RM32[CCIPR]  { return mmio.RM32[CCIPR]{&p.CCIPR, SWPMI1SEL} }
func DFSDMSEL_(p *Periph) mmio.RM32[CCIPR]   { return mmio.RM32[CCIPR]{&p.CCIPR, DFSDMSEL} }

type BDCR uint32

func LSEON_(p *Periph) mmio.RM32[BDCR]    { return mmio.RM32[BDCR]{&p.BDCR, LSEON} }
func LSERDY_(p *Periph) mmio.RM32[BDCR]   { return mmio.RM32[BDCR]{&p.BDCR, LSERDY} }
func LSEBYP_(p *Periph) mmio.RM32[BDCR]   { return mmio.RM32[BDCR]{&p.BDCR, LSEBYP} }
func LSEDRV_(p *Periph) mmio.RM32[BDCR]   { return mmio.RM32[BDCR]{&p.BDCR, LSEDRV} }
func LSECSSON_(p *Periph) mmio.RM32[BDCR] { return mmio.RM32[BDCR]{&p.BDCR, LSECSSON} }
func LSECSSD_(p *Periph) mmio.RM32[BDCR]  { return mmio.RM32[BDCR]{&p.BDCR, LSECSSD} }
func RTCSEL_(p *Periph) mmio.RM32[BDCR]   { return mmio.RM32[BDCR]{&p.BDCR, RTCSEL} }
func RTCEN_(p *Periph) mmio.RM32[BDCR]    { return mmio.RM32[BDCR]{&p.BDCR, RTCEN} }
func BDRST_(p *Periph) mmio.RM32[BDCR]    { return mmio.RM32[BDCR]{&p.BDCR, BDRST} }
func LSCOEN_(p *Periph) mmio.RM32[BDCR]   { return mmio.RM32[BDCR]{&p.BDCR, LSCOEN} }
func LSCOSEL_(p *Periph) mmio.RM32[BDCR]  { return mmio.RM32[BDCR]{&p.BDCR, LSCOSEL} }

type CSR uint32

func LSION_(p *Periph) mmio.RM32[CSR]        { return mmio.RM32[CSR]{&p.CSR, LSION} }
func LSIRDY_(p *Periph) mmio.RM32[CSR]       { return mmio.RM32[CSR]{&p.CSR, LSIRDY} }
func MSISRANGE_(p *Periph) mmio.RM32[CSR]    { return mmio.RM32[CSR]{&p.CSR, MSISRANGE} }
func RMVF_(p *Periph) mmio.RM32[CSR]         { return mmio.RM32[CSR]{&p.CSR, RMVF} }
func FIREWALLRSTF_(p *Periph) mmio.RM32[CSR] { return mmio.RM32[CSR]{&p.CSR, FIREWALLRSTF} }
func OBLRSTF_(p *Periph) mmio.RM32[CSR]      { return mmio.RM32[CSR]{&p.CSR, OBLRSTF} }
func PINRSTF_(p *Periph) mmio.RM32[CSR]      { return mmio.RM32[CSR]{&p.CSR, PINRSTF} }
func BORRSTF_(p *Periph) mmio.RM32[CSR]      { return mmio.RM32[CSR]{&p.CSR, BORRSTF} }
func SFTRSTF_(p *Periph) mmio.RM32[CSR]      { return mmio.RM32[CSR]{&p.CSR, SFTRSTF} }
func IWDGRSTF_(p *Periph) mmio.RM32[CSR]     { return mmio.RM32[CSR]{&p.CSR, IWDGRSTF} }
func WWDGRSTF_(p *Periph) mmio.RM32[CSR]     { return mmio.RM32[CSR]{&p.CSR, WWDGRSTF} }
func LPWRSTF_(p *Periph) mmio.RM32[CSR]      { return mmio.RM32[CSR]{&p.CSR, LPWRSTF} }

// DO NOT EDIT THIS FILE. GENERATED BY svdxgen.

//go:build stm32h7x3

// Package rng provides access to the registers of the RNG peripheral.
//
// Instances:
//  RNG  RNG_BASE  AHB2  -
// Registers:
//  0x000 32  CR  RNG control register
//  0x004 32  SR  RNG status register
//  0x008 32  DR  The RNG_DR register is a read-only register that delivers a 32-bit random value when read. The content of this register is valid when DRDY= 1, even if RNGEN=0.
// Import:
//  github.com/embeddedgo/stm32/p/bus
//  github.com/embeddedgo/stm32/p/mmap
package rng

const (
	RNGEN CR = 0x01 << 2 //+ Random number generator enable
	IE    CR = 0x01 << 3 //+ Interrupt enable
	CED   CR = 0x01 << 5 //+ Clock error detection Note: The clock error detection can be used only when ck_rc48 or ck_pll1_q (ck_pll1_q = 48MHz) source is selected otherwise, CED bit must be equal to 1. The clock error detection cannot be enabled nor disabled on the fly when RNG peripheral is enabled, to enable or disable CED the RNG must be disabled.
)

const (
	RNGENn = 2
	IEn    = 3
	CEDn   = 5
)

const (
	DRDY SR = 0x01 << 0 //+ Data ready Note: If IE=1 in RNG_CR, an interrupt is generated when DRDY=1. It can rise when the peripheral is disabled. When the output buffer becomes empty (after reading RNG_DR), this bit returns to 0 until a new random value is generated.
	CECS SR = 0x01 << 1 //+ Clock error current status Note: This bit is meaningless if CED (Clock error detection) bit in RNG_CR is equal to 1.
	SECS SR = 0x01 << 2 //+ Seed error current status ** More than 64 consecutive bits at the same value (0 or 1) ** More than 32 consecutive alternances of 0 and 1 (0101010101...01)
	CEIS SR = 0x01 << 5 //+ Clock error interrupt status This bit is set at the same time as CECS. It is cleared by writing it to 0. An interrupt is pending if IE = 1 in the RNG_CR register. Note: This bit is meaningless if CED (Clock error detection) bit in RNG_CR is equal to 1.
	SEIS SR = 0x01 << 6 //+ Seed error interrupt status This bit is set at the same time as SECS. It is cleared by writing it to 0. ** More than 64 consecutive bits at the same value (0 or 1) ** More than 32 consecutive alternances of 0 and 1 (0101010101...01) An interrupt is pending if IE = 1 in the RNG_CR register.
)

const (
	DRDYn = 0
	CECSn = 1
	SECSn = 2
	CEISn = 5
	SEISn = 6
)

const (
	RNDATA DR = 0xFFFFFFFF << 0 //+ Random data 32-bit random data which are valid when DRDY=1.
)

const (
	RNDATAn = 0
)

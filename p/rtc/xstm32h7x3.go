// DO NOT EDIT THIS FILE. GENERATED BY xgen.

// +build stm32h7x3

package rtc

import (
	"embedded/mmio"
	"unsafe"

	"github.com/embeddedgo/stm32/p/mmap"
)

type Periph struct {
	RTC_TR       RRTC_TR
	RTC_DR       RRTC_DR
	RTC_CR       RRTC_CR
	RTC_ISR      RRTC_ISR
	RTC_PRER     RRTC_PRER
	RTC_WUTR     RRTC_WUTR
	_            uint32
	RTC_ALRMAR   RRTC_ALRMAR
	RTC_ALRMBR   RRTC_ALRMBR
	RTC_WPR      RRTC_WPR
	RTC_SSR      RRTC_SSR
	RTC_SHIFTR   RRTC_SHIFTR
	RTC_TSTR     RRTC_TSTR
	RTC_TSDR     RRTC_TSDR
	RTC_TSSSR    RRTC_TSSSR
	RTC_CALR     RRTC_CALR
	RTC_TAMPCR   RRTC_TAMPCR
	RTC_ALRMASSR RRTC_ALRMASSR
	RTC_ALRMBSSR RRTC_ALRMBSSR
	RTC_OR       RRTC_OR
	RTC_BKP0R    RRTC_BKP0R
	RTC_BKP1R    RRTC_BKP1R
	RTC_BKP2R    RRTC_BKP2R
	RTC_BKP3R    RRTC_BKP3R
	RTC_BKP4R    RRTC_BKP4R
	RTC_BKP5R    RRTC_BKP5R
	RTC_BKP6R    RRTC_BKP6R
	RTC_BKP7R    RRTC_BKP7R
	RTC_BKP8R    RRTC_BKP8R
	RTC_BKP9R    RRTC_BKP9R
	RTC_BKP10R   RRTC_BKP10R
	RTC_BKP11R   RRTC_BKP11R
	RTC_BKP12R   RRTC_BKP12R
	RTC_BKP13R   RRTC_BKP13R
	RTC_BKP14R   RRTC_BKP14R
	RTC_BKP15R   RRTC_BKP15R
	RTC_BKP16R   RRTC_BKP16R
	RTC_BKP17R   RRTC_BKP17R
	RTC_BKP18R   RRTC_BKP18R
	RTC_BKP19R   RRTC_BKP19R
	RTC_BKP20R   RRTC_BKP20R
	RTC_BKP21R   RRTC_BKP21R
	RTC_BKP22R   RRTC_BKP22R
	RTC_BKP23R   RRTC_BKP23R
	RTC_BKP24R   RRTC_BKP24R
	RTC_BKP25R   RRTC_BKP25R
	RTC_BKP26R   RRTC_BKP26R
	RTC_BKP27R   RRTC_BKP27R
	RTC_BKP28R   RRTC_BKP28R
	RTC_BKP29R   RRTC_BKP29R
	RTC_BKP30R   RRTC_BKP30R
	RTC_BKP31R   RRTC_BKP31R
}

func RTC() *Periph { return (*Periph)(unsafe.Pointer(uintptr(mmap.RTC_BASE))) }

func (p *Periph) BaseAddr() uintptr {
	return uintptr(unsafe.Pointer(p))
}

type RTC_TR uint32

type RRTC_TR struct{ mmio.U32 }

func (r *RRTC_TR) LoadBits(mask RTC_TR) RTC_TR { return RTC_TR(r.U32.LoadBits(uint32(mask))) }
func (r *RRTC_TR) StoreBits(mask, b RTC_TR)    { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *RRTC_TR) SetBits(mask RTC_TR)         { r.U32.SetBits(uint32(mask)) }
func (r *RRTC_TR) ClearBits(mask RTC_TR)       { r.U32.ClearBits(uint32(mask)) }
func (r *RRTC_TR) Load() RTC_TR                { return RTC_TR(r.U32.Load()) }
func (r *RRTC_TR) Store(b RTC_TR)              { r.U32.Store(uint32(b)) }

type RMRTC_TR struct{ mmio.UM32 }

func (rm RMRTC_TR) Load() RTC_TR   { return RTC_TR(rm.UM32.Load()) }
func (rm RMRTC_TR) Store(b RTC_TR) { rm.UM32.Store(uint32(b)) }

func (p *Periph) SU() RMRTC_TR {
	return RMRTC_TR{mmio.UM32{&p.RTC_TR.U32, uint32(SU)}}
}

func (p *Periph) ST() RMRTC_TR {
	return RMRTC_TR{mmio.UM32{&p.RTC_TR.U32, uint32(ST)}}
}

func (p *Periph) MNU() RMRTC_TR {
	return RMRTC_TR{mmio.UM32{&p.RTC_TR.U32, uint32(MNU)}}
}

func (p *Periph) MNT() RMRTC_TR {
	return RMRTC_TR{mmio.UM32{&p.RTC_TR.U32, uint32(MNT)}}
}

func (p *Periph) HU() RMRTC_TR {
	return RMRTC_TR{mmio.UM32{&p.RTC_TR.U32, uint32(HU)}}
}

func (p *Periph) HT() RMRTC_TR {
	return RMRTC_TR{mmio.UM32{&p.RTC_TR.U32, uint32(HT)}}
}

func (p *Periph) PM() RMRTC_TR {
	return RMRTC_TR{mmio.UM32{&p.RTC_TR.U32, uint32(PM)}}
}

type RTC_DR uint32

type RRTC_DR struct{ mmio.U32 }

func (r *RRTC_DR) LoadBits(mask RTC_DR) RTC_DR { return RTC_DR(r.U32.LoadBits(uint32(mask))) }
func (r *RRTC_DR) StoreBits(mask, b RTC_DR)    { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *RRTC_DR) SetBits(mask RTC_DR)         { r.U32.SetBits(uint32(mask)) }
func (r *RRTC_DR) ClearBits(mask RTC_DR)       { r.U32.ClearBits(uint32(mask)) }
func (r *RRTC_DR) Load() RTC_DR                { return RTC_DR(r.U32.Load()) }
func (r *RRTC_DR) Store(b RTC_DR)              { r.U32.Store(uint32(b)) }

type RMRTC_DR struct{ mmio.UM32 }

func (rm RMRTC_DR) Load() RTC_DR   { return RTC_DR(rm.UM32.Load()) }
func (rm RMRTC_DR) Store(b RTC_DR) { rm.UM32.Store(uint32(b)) }

func (p *Periph) DU() RMRTC_DR {
	return RMRTC_DR{mmio.UM32{&p.RTC_DR.U32, uint32(DU)}}
}

func (p *Periph) DT() RMRTC_DR {
	return RMRTC_DR{mmio.UM32{&p.RTC_DR.U32, uint32(DT)}}
}

func (p *Periph) MU() RMRTC_DR {
	return RMRTC_DR{mmio.UM32{&p.RTC_DR.U32, uint32(MU)}}
}

func (p *Periph) MT() RMRTC_DR {
	return RMRTC_DR{mmio.UM32{&p.RTC_DR.U32, uint32(MT)}}
}

func (p *Periph) WDU() RMRTC_DR {
	return RMRTC_DR{mmio.UM32{&p.RTC_DR.U32, uint32(WDU)}}
}

func (p *Periph) YU() RMRTC_DR {
	return RMRTC_DR{mmio.UM32{&p.RTC_DR.U32, uint32(YU)}}
}

func (p *Periph) YT() RMRTC_DR {
	return RMRTC_DR{mmio.UM32{&p.RTC_DR.U32, uint32(YT)}}
}

type RTC_CR uint32

type RRTC_CR struct{ mmio.U32 }

func (r *RRTC_CR) LoadBits(mask RTC_CR) RTC_CR { return RTC_CR(r.U32.LoadBits(uint32(mask))) }
func (r *RRTC_CR) StoreBits(mask, b RTC_CR)    { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *RRTC_CR) SetBits(mask RTC_CR)         { r.U32.SetBits(uint32(mask)) }
func (r *RRTC_CR) ClearBits(mask RTC_CR)       { r.U32.ClearBits(uint32(mask)) }
func (r *RRTC_CR) Load() RTC_CR                { return RTC_CR(r.U32.Load()) }
func (r *RRTC_CR) Store(b RTC_CR)              { r.U32.Store(uint32(b)) }

type RMRTC_CR struct{ mmio.UM32 }

func (rm RMRTC_CR) Load() RTC_CR   { return RTC_CR(rm.UM32.Load()) }
func (rm RMRTC_CR) Store(b RTC_CR) { rm.UM32.Store(uint32(b)) }

func (p *Periph) WUCKSEL() RMRTC_CR {
	return RMRTC_CR{mmio.UM32{&p.RTC_CR.U32, uint32(WUCKSEL)}}
}

func (p *Periph) TSEDGE() RMRTC_CR {
	return RMRTC_CR{mmio.UM32{&p.RTC_CR.U32, uint32(TSEDGE)}}
}

func (p *Periph) REFCKON() RMRTC_CR {
	return RMRTC_CR{mmio.UM32{&p.RTC_CR.U32, uint32(REFCKON)}}
}

func (p *Periph) BYPSHAD() RMRTC_CR {
	return RMRTC_CR{mmio.UM32{&p.RTC_CR.U32, uint32(BYPSHAD)}}
}

func (p *Periph) FMT() RMRTC_CR {
	return RMRTC_CR{mmio.UM32{&p.RTC_CR.U32, uint32(FMT)}}
}

func (p *Periph) ALRAE() RMRTC_CR {
	return RMRTC_CR{mmio.UM32{&p.RTC_CR.U32, uint32(ALRAE)}}
}

func (p *Periph) ALRBE() RMRTC_CR {
	return RMRTC_CR{mmio.UM32{&p.RTC_CR.U32, uint32(ALRBE)}}
}

func (p *Periph) WUTE() RMRTC_CR {
	return RMRTC_CR{mmio.UM32{&p.RTC_CR.U32, uint32(WUTE)}}
}

func (p *Periph) TSE() RMRTC_CR {
	return RMRTC_CR{mmio.UM32{&p.RTC_CR.U32, uint32(TSE)}}
}

func (p *Periph) ALRAIE() RMRTC_CR {
	return RMRTC_CR{mmio.UM32{&p.RTC_CR.U32, uint32(ALRAIE)}}
}

func (p *Periph) ALRBIE() RMRTC_CR {
	return RMRTC_CR{mmio.UM32{&p.RTC_CR.U32, uint32(ALRBIE)}}
}

func (p *Periph) WUTIE() RMRTC_CR {
	return RMRTC_CR{mmio.UM32{&p.RTC_CR.U32, uint32(WUTIE)}}
}

func (p *Periph) TSIE() RMRTC_CR {
	return RMRTC_CR{mmio.UM32{&p.RTC_CR.U32, uint32(TSIE)}}
}

func (p *Periph) ADD1H() RMRTC_CR {
	return RMRTC_CR{mmio.UM32{&p.RTC_CR.U32, uint32(ADD1H)}}
}

func (p *Periph) SUB1H() RMRTC_CR {
	return RMRTC_CR{mmio.UM32{&p.RTC_CR.U32, uint32(SUB1H)}}
}

func (p *Periph) BKP() RMRTC_CR {
	return RMRTC_CR{mmio.UM32{&p.RTC_CR.U32, uint32(BKP)}}
}

func (p *Periph) COSEL() RMRTC_CR {
	return RMRTC_CR{mmio.UM32{&p.RTC_CR.U32, uint32(COSEL)}}
}

func (p *Periph) POL() RMRTC_CR {
	return RMRTC_CR{mmio.UM32{&p.RTC_CR.U32, uint32(POL)}}
}

func (p *Periph) OSEL() RMRTC_CR {
	return RMRTC_CR{mmio.UM32{&p.RTC_CR.U32, uint32(OSEL)}}
}

func (p *Periph) COE() RMRTC_CR {
	return RMRTC_CR{mmio.UM32{&p.RTC_CR.U32, uint32(COE)}}
}

func (p *Periph) ITSE() RMRTC_CR {
	return RMRTC_CR{mmio.UM32{&p.RTC_CR.U32, uint32(ITSE)}}
}

type RTC_ISR uint32

type RRTC_ISR struct{ mmio.U32 }

func (r *RRTC_ISR) LoadBits(mask RTC_ISR) RTC_ISR { return RTC_ISR(r.U32.LoadBits(uint32(mask))) }
func (r *RRTC_ISR) StoreBits(mask, b RTC_ISR)     { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *RRTC_ISR) SetBits(mask RTC_ISR)          { r.U32.SetBits(uint32(mask)) }
func (r *RRTC_ISR) ClearBits(mask RTC_ISR)        { r.U32.ClearBits(uint32(mask)) }
func (r *RRTC_ISR) Load() RTC_ISR                 { return RTC_ISR(r.U32.Load()) }
func (r *RRTC_ISR) Store(b RTC_ISR)               { r.U32.Store(uint32(b)) }

type RMRTC_ISR struct{ mmio.UM32 }

func (rm RMRTC_ISR) Load() RTC_ISR   { return RTC_ISR(rm.UM32.Load()) }
func (rm RMRTC_ISR) Store(b RTC_ISR) { rm.UM32.Store(uint32(b)) }

func (p *Periph) ALRAWF() RMRTC_ISR {
	return RMRTC_ISR{mmio.UM32{&p.RTC_ISR.U32, uint32(ALRAWF)}}
}

func (p *Periph) ALRBWF() RMRTC_ISR {
	return RMRTC_ISR{mmio.UM32{&p.RTC_ISR.U32, uint32(ALRBWF)}}
}

func (p *Periph) WUTWF() RMRTC_ISR {
	return RMRTC_ISR{mmio.UM32{&p.RTC_ISR.U32, uint32(WUTWF)}}
}

func (p *Periph) SHPF() RMRTC_ISR {
	return RMRTC_ISR{mmio.UM32{&p.RTC_ISR.U32, uint32(SHPF)}}
}

func (p *Periph) INITS() RMRTC_ISR {
	return RMRTC_ISR{mmio.UM32{&p.RTC_ISR.U32, uint32(INITS)}}
}

func (p *Periph) RSF() RMRTC_ISR {
	return RMRTC_ISR{mmio.UM32{&p.RTC_ISR.U32, uint32(RSF)}}
}

func (p *Periph) INITF() RMRTC_ISR {
	return RMRTC_ISR{mmio.UM32{&p.RTC_ISR.U32, uint32(INITF)}}
}

func (p *Periph) INIT() RMRTC_ISR {
	return RMRTC_ISR{mmio.UM32{&p.RTC_ISR.U32, uint32(INIT)}}
}

func (p *Periph) ALRAF() RMRTC_ISR {
	return RMRTC_ISR{mmio.UM32{&p.RTC_ISR.U32, uint32(ALRAF)}}
}

func (p *Periph) ALRBF() RMRTC_ISR {
	return RMRTC_ISR{mmio.UM32{&p.RTC_ISR.U32, uint32(ALRBF)}}
}

func (p *Periph) WUTF() RMRTC_ISR {
	return RMRTC_ISR{mmio.UM32{&p.RTC_ISR.U32, uint32(WUTF)}}
}

func (p *Periph) TSF() RMRTC_ISR {
	return RMRTC_ISR{mmio.UM32{&p.RTC_ISR.U32, uint32(TSF)}}
}

func (p *Periph) TSOVF() RMRTC_ISR {
	return RMRTC_ISR{mmio.UM32{&p.RTC_ISR.U32, uint32(TSOVF)}}
}

func (p *Periph) TAMP1F() RMRTC_ISR {
	return RMRTC_ISR{mmio.UM32{&p.RTC_ISR.U32, uint32(TAMP1F)}}
}

func (p *Periph) TAMP2F() RMRTC_ISR {
	return RMRTC_ISR{mmio.UM32{&p.RTC_ISR.U32, uint32(TAMP2F)}}
}

func (p *Periph) TAMP3F() RMRTC_ISR {
	return RMRTC_ISR{mmio.UM32{&p.RTC_ISR.U32, uint32(TAMP3F)}}
}

func (p *Periph) RECALPF() RMRTC_ISR {
	return RMRTC_ISR{mmio.UM32{&p.RTC_ISR.U32, uint32(RECALPF)}}
}

func (p *Periph) ITSF() RMRTC_ISR {
	return RMRTC_ISR{mmio.UM32{&p.RTC_ISR.U32, uint32(ITSF)}}
}

type RTC_PRER uint32

type RRTC_PRER struct{ mmio.U32 }

func (r *RRTC_PRER) LoadBits(mask RTC_PRER) RTC_PRER { return RTC_PRER(r.U32.LoadBits(uint32(mask))) }
func (r *RRTC_PRER) StoreBits(mask, b RTC_PRER)      { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *RRTC_PRER) SetBits(mask RTC_PRER)           { r.U32.SetBits(uint32(mask)) }
func (r *RRTC_PRER) ClearBits(mask RTC_PRER)         { r.U32.ClearBits(uint32(mask)) }
func (r *RRTC_PRER) Load() RTC_PRER                  { return RTC_PRER(r.U32.Load()) }
func (r *RRTC_PRER) Store(b RTC_PRER)                { r.U32.Store(uint32(b)) }

type RMRTC_PRER struct{ mmio.UM32 }

func (rm RMRTC_PRER) Load() RTC_PRER   { return RTC_PRER(rm.UM32.Load()) }
func (rm RMRTC_PRER) Store(b RTC_PRER) { rm.UM32.Store(uint32(b)) }

func (p *Periph) PREDIV_S() RMRTC_PRER {
	return RMRTC_PRER{mmio.UM32{&p.RTC_PRER.U32, uint32(PREDIV_S)}}
}

func (p *Periph) PREDIV_A() RMRTC_PRER {
	return RMRTC_PRER{mmio.UM32{&p.RTC_PRER.U32, uint32(PREDIV_A)}}
}

type RTC_WUTR uint32

type RRTC_WUTR struct{ mmio.U32 }

func (r *RRTC_WUTR) LoadBits(mask RTC_WUTR) RTC_WUTR { return RTC_WUTR(r.U32.LoadBits(uint32(mask))) }
func (r *RRTC_WUTR) StoreBits(mask, b RTC_WUTR)      { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *RRTC_WUTR) SetBits(mask RTC_WUTR)           { r.U32.SetBits(uint32(mask)) }
func (r *RRTC_WUTR) ClearBits(mask RTC_WUTR)         { r.U32.ClearBits(uint32(mask)) }
func (r *RRTC_WUTR) Load() RTC_WUTR                  { return RTC_WUTR(r.U32.Load()) }
func (r *RRTC_WUTR) Store(b RTC_WUTR)                { r.U32.Store(uint32(b)) }

type RMRTC_WUTR struct{ mmio.UM32 }

func (rm RMRTC_WUTR) Load() RTC_WUTR   { return RTC_WUTR(rm.UM32.Load()) }
func (rm RMRTC_WUTR) Store(b RTC_WUTR) { rm.UM32.Store(uint32(b)) }

func (p *Periph) WUT() RMRTC_WUTR {
	return RMRTC_WUTR{mmio.UM32{&p.RTC_WUTR.U32, uint32(WUT)}}
}

type RTC_ALRMAR uint32

type RRTC_ALRMAR struct{ mmio.U32 }

func (r *RRTC_ALRMAR) LoadBits(mask RTC_ALRMAR) RTC_ALRMAR {
	return RTC_ALRMAR(r.U32.LoadBits(uint32(mask)))
}
func (r *RRTC_ALRMAR) StoreBits(mask, b RTC_ALRMAR) { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *RRTC_ALRMAR) SetBits(mask RTC_ALRMAR)      { r.U32.SetBits(uint32(mask)) }
func (r *RRTC_ALRMAR) ClearBits(mask RTC_ALRMAR)    { r.U32.ClearBits(uint32(mask)) }
func (r *RRTC_ALRMAR) Load() RTC_ALRMAR             { return RTC_ALRMAR(r.U32.Load()) }
func (r *RRTC_ALRMAR) Store(b RTC_ALRMAR)           { r.U32.Store(uint32(b)) }

type RMRTC_ALRMAR struct{ mmio.UM32 }

func (rm RMRTC_ALRMAR) Load() RTC_ALRMAR   { return RTC_ALRMAR(rm.UM32.Load()) }
func (rm RMRTC_ALRMAR) Store(b RTC_ALRMAR) { rm.UM32.Store(uint32(b)) }

func (p *Periph) SU() RMRTC_ALRMAR {
	return RMRTC_ALRMAR{mmio.UM32{&p.RTC_ALRMAR.U32, uint32(SU)}}
}

func (p *Periph) ST() RMRTC_ALRMAR {
	return RMRTC_ALRMAR{mmio.UM32{&p.RTC_ALRMAR.U32, uint32(ST)}}
}

func (p *Periph) MSK1() RMRTC_ALRMAR {
	return RMRTC_ALRMAR{mmio.UM32{&p.RTC_ALRMAR.U32, uint32(MSK1)}}
}

func (p *Periph) MNU() RMRTC_ALRMAR {
	return RMRTC_ALRMAR{mmio.UM32{&p.RTC_ALRMAR.U32, uint32(MNU)}}
}

func (p *Periph) MNT() RMRTC_ALRMAR {
	return RMRTC_ALRMAR{mmio.UM32{&p.RTC_ALRMAR.U32, uint32(MNT)}}
}

func (p *Periph) MSK2() RMRTC_ALRMAR {
	return RMRTC_ALRMAR{mmio.UM32{&p.RTC_ALRMAR.U32, uint32(MSK2)}}
}

func (p *Periph) HU() RMRTC_ALRMAR {
	return RMRTC_ALRMAR{mmio.UM32{&p.RTC_ALRMAR.U32, uint32(HU)}}
}

func (p *Periph) HT() RMRTC_ALRMAR {
	return RMRTC_ALRMAR{mmio.UM32{&p.RTC_ALRMAR.U32, uint32(HT)}}
}

func (p *Periph) PM() RMRTC_ALRMAR {
	return RMRTC_ALRMAR{mmio.UM32{&p.RTC_ALRMAR.U32, uint32(PM)}}
}

func (p *Periph) MSK3() RMRTC_ALRMAR {
	return RMRTC_ALRMAR{mmio.UM32{&p.RTC_ALRMAR.U32, uint32(MSK3)}}
}

func (p *Periph) DU() RMRTC_ALRMAR {
	return RMRTC_ALRMAR{mmio.UM32{&p.RTC_ALRMAR.U32, uint32(DU)}}
}

func (p *Periph) DT() RMRTC_ALRMAR {
	return RMRTC_ALRMAR{mmio.UM32{&p.RTC_ALRMAR.U32, uint32(DT)}}
}

func (p *Periph) WDSEL() RMRTC_ALRMAR {
	return RMRTC_ALRMAR{mmio.UM32{&p.RTC_ALRMAR.U32, uint32(WDSEL)}}
}

func (p *Periph) MSK4() RMRTC_ALRMAR {
	return RMRTC_ALRMAR{mmio.UM32{&p.RTC_ALRMAR.U32, uint32(MSK4)}}
}

type RTC_ALRMBR uint32

type RRTC_ALRMBR struct{ mmio.U32 }

func (r *RRTC_ALRMBR) LoadBits(mask RTC_ALRMBR) RTC_ALRMBR {
	return RTC_ALRMBR(r.U32.LoadBits(uint32(mask)))
}
func (r *RRTC_ALRMBR) StoreBits(mask, b RTC_ALRMBR) { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *RRTC_ALRMBR) SetBits(mask RTC_ALRMBR)      { r.U32.SetBits(uint32(mask)) }
func (r *RRTC_ALRMBR) ClearBits(mask RTC_ALRMBR)    { r.U32.ClearBits(uint32(mask)) }
func (r *RRTC_ALRMBR) Load() RTC_ALRMBR             { return RTC_ALRMBR(r.U32.Load()) }
func (r *RRTC_ALRMBR) Store(b RTC_ALRMBR)           { r.U32.Store(uint32(b)) }

type RMRTC_ALRMBR struct{ mmio.UM32 }

func (rm RMRTC_ALRMBR) Load() RTC_ALRMBR   { return RTC_ALRMBR(rm.UM32.Load()) }
func (rm RMRTC_ALRMBR) Store(b RTC_ALRMBR) { rm.UM32.Store(uint32(b)) }

func (p *Periph) SU() RMRTC_ALRMBR {
	return RMRTC_ALRMBR{mmio.UM32{&p.RTC_ALRMBR.U32, uint32(SU)}}
}

func (p *Periph) ST() RMRTC_ALRMBR {
	return RMRTC_ALRMBR{mmio.UM32{&p.RTC_ALRMBR.U32, uint32(ST)}}
}

func (p *Periph) MSK1() RMRTC_ALRMBR {
	return RMRTC_ALRMBR{mmio.UM32{&p.RTC_ALRMBR.U32, uint32(MSK1)}}
}

func (p *Periph) MNU() RMRTC_ALRMBR {
	return RMRTC_ALRMBR{mmio.UM32{&p.RTC_ALRMBR.U32, uint32(MNU)}}
}

func (p *Periph) MNT() RMRTC_ALRMBR {
	return RMRTC_ALRMBR{mmio.UM32{&p.RTC_ALRMBR.U32, uint32(MNT)}}
}

func (p *Periph) MSK2() RMRTC_ALRMBR {
	return RMRTC_ALRMBR{mmio.UM32{&p.RTC_ALRMBR.U32, uint32(MSK2)}}
}

func (p *Periph) HU() RMRTC_ALRMBR {
	return RMRTC_ALRMBR{mmio.UM32{&p.RTC_ALRMBR.U32, uint32(HU)}}
}

func (p *Periph) HT() RMRTC_ALRMBR {
	return RMRTC_ALRMBR{mmio.UM32{&p.RTC_ALRMBR.U32, uint32(HT)}}
}

func (p *Periph) PM() RMRTC_ALRMBR {
	return RMRTC_ALRMBR{mmio.UM32{&p.RTC_ALRMBR.U32, uint32(PM)}}
}

func (p *Periph) MSK3() RMRTC_ALRMBR {
	return RMRTC_ALRMBR{mmio.UM32{&p.RTC_ALRMBR.U32, uint32(MSK3)}}
}

func (p *Periph) DU() RMRTC_ALRMBR {
	return RMRTC_ALRMBR{mmio.UM32{&p.RTC_ALRMBR.U32, uint32(DU)}}
}

func (p *Periph) DT() RMRTC_ALRMBR {
	return RMRTC_ALRMBR{mmio.UM32{&p.RTC_ALRMBR.U32, uint32(DT)}}
}

func (p *Periph) WDSEL() RMRTC_ALRMBR {
	return RMRTC_ALRMBR{mmio.UM32{&p.RTC_ALRMBR.U32, uint32(WDSEL)}}
}

func (p *Periph) MSK4() RMRTC_ALRMBR {
	return RMRTC_ALRMBR{mmio.UM32{&p.RTC_ALRMBR.U32, uint32(MSK4)}}
}

type RTC_WPR uint32

type RRTC_WPR struct{ mmio.U32 }

func (r *RRTC_WPR) LoadBits(mask RTC_WPR) RTC_WPR { return RTC_WPR(r.U32.LoadBits(uint32(mask))) }
func (r *RRTC_WPR) StoreBits(mask, b RTC_WPR)     { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *RRTC_WPR) SetBits(mask RTC_WPR)          { r.U32.SetBits(uint32(mask)) }
func (r *RRTC_WPR) ClearBits(mask RTC_WPR)        { r.U32.ClearBits(uint32(mask)) }
func (r *RRTC_WPR) Load() RTC_WPR                 { return RTC_WPR(r.U32.Load()) }
func (r *RRTC_WPR) Store(b RTC_WPR)               { r.U32.Store(uint32(b)) }

type RMRTC_WPR struct{ mmio.UM32 }

func (rm RMRTC_WPR) Load() RTC_WPR   { return RTC_WPR(rm.UM32.Load()) }
func (rm RMRTC_WPR) Store(b RTC_WPR) { rm.UM32.Store(uint32(b)) }

func (p *Periph) KEY() RMRTC_WPR {
	return RMRTC_WPR{mmio.UM32{&p.RTC_WPR.U32, uint32(KEY)}}
}

type RTC_SSR uint32

type RRTC_SSR struct{ mmio.U32 }

func (r *RRTC_SSR) LoadBits(mask RTC_SSR) RTC_SSR { return RTC_SSR(r.U32.LoadBits(uint32(mask))) }
func (r *RRTC_SSR) StoreBits(mask, b RTC_SSR)     { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *RRTC_SSR) SetBits(mask RTC_SSR)          { r.U32.SetBits(uint32(mask)) }
func (r *RRTC_SSR) ClearBits(mask RTC_SSR)        { r.U32.ClearBits(uint32(mask)) }
func (r *RRTC_SSR) Load() RTC_SSR                 { return RTC_SSR(r.U32.Load()) }
func (r *RRTC_SSR) Store(b RTC_SSR)               { r.U32.Store(uint32(b)) }

type RMRTC_SSR struct{ mmio.UM32 }

func (rm RMRTC_SSR) Load() RTC_SSR   { return RTC_SSR(rm.UM32.Load()) }
func (rm RMRTC_SSR) Store(b RTC_SSR) { rm.UM32.Store(uint32(b)) }

func (p *Periph) SS() RMRTC_SSR {
	return RMRTC_SSR{mmio.UM32{&p.RTC_SSR.U32, uint32(SS)}}
}

type RTC_SHIFTR uint32

type RRTC_SHIFTR struct{ mmio.U32 }

func (r *RRTC_SHIFTR) LoadBits(mask RTC_SHIFTR) RTC_SHIFTR {
	return RTC_SHIFTR(r.U32.LoadBits(uint32(mask)))
}
func (r *RRTC_SHIFTR) StoreBits(mask, b RTC_SHIFTR) { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *RRTC_SHIFTR) SetBits(mask RTC_SHIFTR)      { r.U32.SetBits(uint32(mask)) }
func (r *RRTC_SHIFTR) ClearBits(mask RTC_SHIFTR)    { r.U32.ClearBits(uint32(mask)) }
func (r *RRTC_SHIFTR) Load() RTC_SHIFTR             { return RTC_SHIFTR(r.U32.Load()) }
func (r *RRTC_SHIFTR) Store(b RTC_SHIFTR)           { r.U32.Store(uint32(b)) }

type RMRTC_SHIFTR struct{ mmio.UM32 }

func (rm RMRTC_SHIFTR) Load() RTC_SHIFTR   { return RTC_SHIFTR(rm.UM32.Load()) }
func (rm RMRTC_SHIFTR) Store(b RTC_SHIFTR) { rm.UM32.Store(uint32(b)) }

func (p *Periph) SUBFS() RMRTC_SHIFTR {
	return RMRTC_SHIFTR{mmio.UM32{&p.RTC_SHIFTR.U32, uint32(SUBFS)}}
}

func (p *Periph) ADD1S() RMRTC_SHIFTR {
	return RMRTC_SHIFTR{mmio.UM32{&p.RTC_SHIFTR.U32, uint32(ADD1S)}}
}

type RTC_TSTR uint32

type RRTC_TSTR struct{ mmio.U32 }

func (r *RRTC_TSTR) LoadBits(mask RTC_TSTR) RTC_TSTR { return RTC_TSTR(r.U32.LoadBits(uint32(mask))) }
func (r *RRTC_TSTR) StoreBits(mask, b RTC_TSTR)      { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *RRTC_TSTR) SetBits(mask RTC_TSTR)           { r.U32.SetBits(uint32(mask)) }
func (r *RRTC_TSTR) ClearBits(mask RTC_TSTR)         { r.U32.ClearBits(uint32(mask)) }
func (r *RRTC_TSTR) Load() RTC_TSTR                  { return RTC_TSTR(r.U32.Load()) }
func (r *RRTC_TSTR) Store(b RTC_TSTR)                { r.U32.Store(uint32(b)) }

type RMRTC_TSTR struct{ mmio.UM32 }

func (rm RMRTC_TSTR) Load() RTC_TSTR   { return RTC_TSTR(rm.UM32.Load()) }
func (rm RMRTC_TSTR) Store(b RTC_TSTR) { rm.UM32.Store(uint32(b)) }

func (p *Periph) SU() RMRTC_TSTR {
	return RMRTC_TSTR{mmio.UM32{&p.RTC_TSTR.U32, uint32(SU)}}
}

func (p *Periph) ST() RMRTC_TSTR {
	return RMRTC_TSTR{mmio.UM32{&p.RTC_TSTR.U32, uint32(ST)}}
}

func (p *Periph) MNU() RMRTC_TSTR {
	return RMRTC_TSTR{mmio.UM32{&p.RTC_TSTR.U32, uint32(MNU)}}
}

func (p *Periph) MNT() RMRTC_TSTR {
	return RMRTC_TSTR{mmio.UM32{&p.RTC_TSTR.U32, uint32(MNT)}}
}

func (p *Periph) HU() RMRTC_TSTR {
	return RMRTC_TSTR{mmio.UM32{&p.RTC_TSTR.U32, uint32(HU)}}
}

func (p *Periph) HT() RMRTC_TSTR {
	return RMRTC_TSTR{mmio.UM32{&p.RTC_TSTR.U32, uint32(HT)}}
}

func (p *Periph) PM() RMRTC_TSTR {
	return RMRTC_TSTR{mmio.UM32{&p.RTC_TSTR.U32, uint32(PM)}}
}

type RTC_TSDR uint32

type RRTC_TSDR struct{ mmio.U32 }

func (r *RRTC_TSDR) LoadBits(mask RTC_TSDR) RTC_TSDR { return RTC_TSDR(r.U32.LoadBits(uint32(mask))) }
func (r *RRTC_TSDR) StoreBits(mask, b RTC_TSDR)      { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *RRTC_TSDR) SetBits(mask RTC_TSDR)           { r.U32.SetBits(uint32(mask)) }
func (r *RRTC_TSDR) ClearBits(mask RTC_TSDR)         { r.U32.ClearBits(uint32(mask)) }
func (r *RRTC_TSDR) Load() RTC_TSDR                  { return RTC_TSDR(r.U32.Load()) }
func (r *RRTC_TSDR) Store(b RTC_TSDR)                { r.U32.Store(uint32(b)) }

type RMRTC_TSDR struct{ mmio.UM32 }

func (rm RMRTC_TSDR) Load() RTC_TSDR   { return RTC_TSDR(rm.UM32.Load()) }
func (rm RMRTC_TSDR) Store(b RTC_TSDR) { rm.UM32.Store(uint32(b)) }

func (p *Periph) DU() RMRTC_TSDR {
	return RMRTC_TSDR{mmio.UM32{&p.RTC_TSDR.U32, uint32(DU)}}
}

func (p *Periph) DT() RMRTC_TSDR {
	return RMRTC_TSDR{mmio.UM32{&p.RTC_TSDR.U32, uint32(DT)}}
}

func (p *Periph) MU() RMRTC_TSDR {
	return RMRTC_TSDR{mmio.UM32{&p.RTC_TSDR.U32, uint32(MU)}}
}

func (p *Periph) MT() RMRTC_TSDR {
	return RMRTC_TSDR{mmio.UM32{&p.RTC_TSDR.U32, uint32(MT)}}
}

func (p *Periph) WDU() RMRTC_TSDR {
	return RMRTC_TSDR{mmio.UM32{&p.RTC_TSDR.U32, uint32(WDU)}}
}

type RTC_TSSSR uint32

type RRTC_TSSSR struct{ mmio.U32 }

func (r *RRTC_TSSSR) LoadBits(mask RTC_TSSSR) RTC_TSSSR {
	return RTC_TSSSR(r.U32.LoadBits(uint32(mask)))
}
func (r *RRTC_TSSSR) StoreBits(mask, b RTC_TSSSR) { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *RRTC_TSSSR) SetBits(mask RTC_TSSSR)      { r.U32.SetBits(uint32(mask)) }
func (r *RRTC_TSSSR) ClearBits(mask RTC_TSSSR)    { r.U32.ClearBits(uint32(mask)) }
func (r *RRTC_TSSSR) Load() RTC_TSSSR             { return RTC_TSSSR(r.U32.Load()) }
func (r *RRTC_TSSSR) Store(b RTC_TSSSR)           { r.U32.Store(uint32(b)) }

type RMRTC_TSSSR struct{ mmio.UM32 }

func (rm RMRTC_TSSSR) Load() RTC_TSSSR   { return RTC_TSSSR(rm.UM32.Load()) }
func (rm RMRTC_TSSSR) Store(b RTC_TSSSR) { rm.UM32.Store(uint32(b)) }

func (p *Periph) SS() RMRTC_TSSSR {
	return RMRTC_TSSSR{mmio.UM32{&p.RTC_TSSSR.U32, uint32(SS)}}
}

type RTC_CALR uint32

type RRTC_CALR struct{ mmio.U32 }

func (r *RRTC_CALR) LoadBits(mask RTC_CALR) RTC_CALR { return RTC_CALR(r.U32.LoadBits(uint32(mask))) }
func (r *RRTC_CALR) StoreBits(mask, b RTC_CALR)      { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *RRTC_CALR) SetBits(mask RTC_CALR)           { r.U32.SetBits(uint32(mask)) }
func (r *RRTC_CALR) ClearBits(mask RTC_CALR)         { r.U32.ClearBits(uint32(mask)) }
func (r *RRTC_CALR) Load() RTC_CALR                  { return RTC_CALR(r.U32.Load()) }
func (r *RRTC_CALR) Store(b RTC_CALR)                { r.U32.Store(uint32(b)) }

type RMRTC_CALR struct{ mmio.UM32 }

func (rm RMRTC_CALR) Load() RTC_CALR   { return RTC_CALR(rm.UM32.Load()) }
func (rm RMRTC_CALR) Store(b RTC_CALR) { rm.UM32.Store(uint32(b)) }

func (p *Periph) CALM() RMRTC_CALR {
	return RMRTC_CALR{mmio.UM32{&p.RTC_CALR.U32, uint32(CALM)}}
}

func (p *Periph) CALW16() RMRTC_CALR {
	return RMRTC_CALR{mmio.UM32{&p.RTC_CALR.U32, uint32(CALW16)}}
}

func (p *Periph) CALW8() RMRTC_CALR {
	return RMRTC_CALR{mmio.UM32{&p.RTC_CALR.U32, uint32(CALW8)}}
}

func (p *Periph) CALP() RMRTC_CALR {
	return RMRTC_CALR{mmio.UM32{&p.RTC_CALR.U32, uint32(CALP)}}
}

type RTC_TAMPCR uint32

type RRTC_TAMPCR struct{ mmio.U32 }

func (r *RRTC_TAMPCR) LoadBits(mask RTC_TAMPCR) RTC_TAMPCR {
	return RTC_TAMPCR(r.U32.LoadBits(uint32(mask)))
}
func (r *RRTC_TAMPCR) StoreBits(mask, b RTC_TAMPCR) { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *RRTC_TAMPCR) SetBits(mask RTC_TAMPCR)      { r.U32.SetBits(uint32(mask)) }
func (r *RRTC_TAMPCR) ClearBits(mask RTC_TAMPCR)    { r.U32.ClearBits(uint32(mask)) }
func (r *RRTC_TAMPCR) Load() RTC_TAMPCR             { return RTC_TAMPCR(r.U32.Load()) }
func (r *RRTC_TAMPCR) Store(b RTC_TAMPCR)           { r.U32.Store(uint32(b)) }

type RMRTC_TAMPCR struct{ mmio.UM32 }

func (rm RMRTC_TAMPCR) Load() RTC_TAMPCR   { return RTC_TAMPCR(rm.UM32.Load()) }
func (rm RMRTC_TAMPCR) Store(b RTC_TAMPCR) { rm.UM32.Store(uint32(b)) }

func (p *Periph) TAMP1E() RMRTC_TAMPCR {
	return RMRTC_TAMPCR{mmio.UM32{&p.RTC_TAMPCR.U32, uint32(TAMP1E)}}
}

func (p *Periph) TAMP1TRG() RMRTC_TAMPCR {
	return RMRTC_TAMPCR{mmio.UM32{&p.RTC_TAMPCR.U32, uint32(TAMP1TRG)}}
}

func (p *Periph) TAMPIE() RMRTC_TAMPCR {
	return RMRTC_TAMPCR{mmio.UM32{&p.RTC_TAMPCR.U32, uint32(TAMPIE)}}
}

func (p *Periph) TAMP2E() RMRTC_TAMPCR {
	return RMRTC_TAMPCR{mmio.UM32{&p.RTC_TAMPCR.U32, uint32(TAMP2E)}}
}

func (p *Periph) TAMP2TRG() RMRTC_TAMPCR {
	return RMRTC_TAMPCR{mmio.UM32{&p.RTC_TAMPCR.U32, uint32(TAMP2TRG)}}
}

func (p *Periph) TAMP3E() RMRTC_TAMPCR {
	return RMRTC_TAMPCR{mmio.UM32{&p.RTC_TAMPCR.U32, uint32(TAMP3E)}}
}

func (p *Periph) TAMP3TRG() RMRTC_TAMPCR {
	return RMRTC_TAMPCR{mmio.UM32{&p.RTC_TAMPCR.U32, uint32(TAMP3TRG)}}
}

func (p *Periph) TAMPTS() RMRTC_TAMPCR {
	return RMRTC_TAMPCR{mmio.UM32{&p.RTC_TAMPCR.U32, uint32(TAMPTS)}}
}

func (p *Periph) TAMPFREQ() RMRTC_TAMPCR {
	return RMRTC_TAMPCR{mmio.UM32{&p.RTC_TAMPCR.U32, uint32(TAMPFREQ)}}
}

func (p *Periph) TAMPFLT() RMRTC_TAMPCR {
	return RMRTC_TAMPCR{mmio.UM32{&p.RTC_TAMPCR.U32, uint32(TAMPFLT)}}
}

func (p *Periph) TAMPPRCH() RMRTC_TAMPCR {
	return RMRTC_TAMPCR{mmio.UM32{&p.RTC_TAMPCR.U32, uint32(TAMPPRCH)}}
}

func (p *Periph) TAMPPUDIS() RMRTC_TAMPCR {
	return RMRTC_TAMPCR{mmio.UM32{&p.RTC_TAMPCR.U32, uint32(TAMPPUDIS)}}
}

func (p *Periph) TAMP1IE() RMRTC_TAMPCR {
	return RMRTC_TAMPCR{mmio.UM32{&p.RTC_TAMPCR.U32, uint32(TAMP1IE)}}
}

func (p *Periph) TAMP1NOERASE() RMRTC_TAMPCR {
	return RMRTC_TAMPCR{mmio.UM32{&p.RTC_TAMPCR.U32, uint32(TAMP1NOERASE)}}
}

func (p *Periph) TAMP1MF() RMRTC_TAMPCR {
	return RMRTC_TAMPCR{mmio.UM32{&p.RTC_TAMPCR.U32, uint32(TAMP1MF)}}
}

func (p *Periph) TAMP2IE() RMRTC_TAMPCR {
	return RMRTC_TAMPCR{mmio.UM32{&p.RTC_TAMPCR.U32, uint32(TAMP2IE)}}
}

func (p *Periph) TAMP2NOERASE() RMRTC_TAMPCR {
	return RMRTC_TAMPCR{mmio.UM32{&p.RTC_TAMPCR.U32, uint32(TAMP2NOERASE)}}
}

func (p *Periph) TAMP2MF() RMRTC_TAMPCR {
	return RMRTC_TAMPCR{mmio.UM32{&p.RTC_TAMPCR.U32, uint32(TAMP2MF)}}
}

func (p *Periph) TAMP3IE() RMRTC_TAMPCR {
	return RMRTC_TAMPCR{mmio.UM32{&p.RTC_TAMPCR.U32, uint32(TAMP3IE)}}
}

func (p *Periph) TAMP3NOERASE() RMRTC_TAMPCR {
	return RMRTC_TAMPCR{mmio.UM32{&p.RTC_TAMPCR.U32, uint32(TAMP3NOERASE)}}
}

func (p *Periph) TAMP3MF() RMRTC_TAMPCR {
	return RMRTC_TAMPCR{mmio.UM32{&p.RTC_TAMPCR.U32, uint32(TAMP3MF)}}
}

type RTC_ALRMASSR uint32

type RRTC_ALRMASSR struct{ mmio.U32 }

func (r *RRTC_ALRMASSR) LoadBits(mask RTC_ALRMASSR) RTC_ALRMASSR {
	return RTC_ALRMASSR(r.U32.LoadBits(uint32(mask)))
}
func (r *RRTC_ALRMASSR) StoreBits(mask, b RTC_ALRMASSR) { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *RRTC_ALRMASSR) SetBits(mask RTC_ALRMASSR)      { r.U32.SetBits(uint32(mask)) }
func (r *RRTC_ALRMASSR) ClearBits(mask RTC_ALRMASSR)    { r.U32.ClearBits(uint32(mask)) }
func (r *RRTC_ALRMASSR) Load() RTC_ALRMASSR             { return RTC_ALRMASSR(r.U32.Load()) }
func (r *RRTC_ALRMASSR) Store(b RTC_ALRMASSR)           { r.U32.Store(uint32(b)) }

type RMRTC_ALRMASSR struct{ mmio.UM32 }

func (rm RMRTC_ALRMASSR) Load() RTC_ALRMASSR   { return RTC_ALRMASSR(rm.UM32.Load()) }
func (rm RMRTC_ALRMASSR) Store(b RTC_ALRMASSR) { rm.UM32.Store(uint32(b)) }

func (p *Periph) SS() RMRTC_ALRMASSR {
	return RMRTC_ALRMASSR{mmio.UM32{&p.RTC_ALRMASSR.U32, uint32(SS)}}
}

func (p *Periph) MASKSS() RMRTC_ALRMASSR {
	return RMRTC_ALRMASSR{mmio.UM32{&p.RTC_ALRMASSR.U32, uint32(MASKSS)}}
}

type RTC_ALRMBSSR uint32

type RRTC_ALRMBSSR struct{ mmio.U32 }

func (r *RRTC_ALRMBSSR) LoadBits(mask RTC_ALRMBSSR) RTC_ALRMBSSR {
	return RTC_ALRMBSSR(r.U32.LoadBits(uint32(mask)))
}
func (r *RRTC_ALRMBSSR) StoreBits(mask, b RTC_ALRMBSSR) { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *RRTC_ALRMBSSR) SetBits(mask RTC_ALRMBSSR)      { r.U32.SetBits(uint32(mask)) }
func (r *RRTC_ALRMBSSR) ClearBits(mask RTC_ALRMBSSR)    { r.U32.ClearBits(uint32(mask)) }
func (r *RRTC_ALRMBSSR) Load() RTC_ALRMBSSR             { return RTC_ALRMBSSR(r.U32.Load()) }
func (r *RRTC_ALRMBSSR) Store(b RTC_ALRMBSSR)           { r.U32.Store(uint32(b)) }

type RMRTC_ALRMBSSR struct{ mmio.UM32 }

func (rm RMRTC_ALRMBSSR) Load() RTC_ALRMBSSR   { return RTC_ALRMBSSR(rm.UM32.Load()) }
func (rm RMRTC_ALRMBSSR) Store(b RTC_ALRMBSSR) { rm.UM32.Store(uint32(b)) }

func (p *Periph) SS() RMRTC_ALRMBSSR {
	return RMRTC_ALRMBSSR{mmio.UM32{&p.RTC_ALRMBSSR.U32, uint32(SS)}}
}

func (p *Periph) MASKSS() RMRTC_ALRMBSSR {
	return RMRTC_ALRMBSSR{mmio.UM32{&p.RTC_ALRMBSSR.U32, uint32(MASKSS)}}
}

type RTC_OR uint32

type RRTC_OR struct{ mmio.U32 }

func (r *RRTC_OR) LoadBits(mask RTC_OR) RTC_OR { return RTC_OR(r.U32.LoadBits(uint32(mask))) }
func (r *RRTC_OR) StoreBits(mask, b RTC_OR)    { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *RRTC_OR) SetBits(mask RTC_OR)         { r.U32.SetBits(uint32(mask)) }
func (r *RRTC_OR) ClearBits(mask RTC_OR)       { r.U32.ClearBits(uint32(mask)) }
func (r *RRTC_OR) Load() RTC_OR                { return RTC_OR(r.U32.Load()) }
func (r *RRTC_OR) Store(b RTC_OR)              { r.U32.Store(uint32(b)) }

type RMRTC_OR struct{ mmio.UM32 }

func (rm RMRTC_OR) Load() RTC_OR   { return RTC_OR(rm.UM32.Load()) }
func (rm RMRTC_OR) Store(b RTC_OR) { rm.UM32.Store(uint32(b)) }

func (p *Periph) RTC_ALARM_TYPE() RMRTC_OR {
	return RMRTC_OR{mmio.UM32{&p.RTC_OR.U32, uint32(RTC_ALARM_TYPE)}}
}

func (p *Periph) RTC_OUT_RMP() RMRTC_OR {
	return RMRTC_OR{mmio.UM32{&p.RTC_OR.U32, uint32(RTC_OUT_RMP)}}
}

type RTC_BKP0R uint32

type RRTC_BKP0R struct{ mmio.U32 }

func (r *RRTC_BKP0R) LoadBits(mask RTC_BKP0R) RTC_BKP0R {
	return RTC_BKP0R(r.U32.LoadBits(uint32(mask)))
}
func (r *RRTC_BKP0R) StoreBits(mask, b RTC_BKP0R) { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *RRTC_BKP0R) SetBits(mask RTC_BKP0R)      { r.U32.SetBits(uint32(mask)) }
func (r *RRTC_BKP0R) ClearBits(mask RTC_BKP0R)    { r.U32.ClearBits(uint32(mask)) }
func (r *RRTC_BKP0R) Load() RTC_BKP0R             { return RTC_BKP0R(r.U32.Load()) }
func (r *RRTC_BKP0R) Store(b RTC_BKP0R)           { r.U32.Store(uint32(b)) }

type RMRTC_BKP0R struct{ mmio.UM32 }

func (rm RMRTC_BKP0R) Load() RTC_BKP0R   { return RTC_BKP0R(rm.UM32.Load()) }
func (rm RMRTC_BKP0R) Store(b RTC_BKP0R) { rm.UM32.Store(uint32(b)) }

func (p *Periph) BKP() RMRTC_BKP0R {
	return RMRTC_BKP0R{mmio.UM32{&p.RTC_BKP0R.U32, uint32(BKP)}}
}

type RTC_BKP1R uint32

type RRTC_BKP1R struct{ mmio.U32 }

func (r *RRTC_BKP1R) LoadBits(mask RTC_BKP1R) RTC_BKP1R {
	return RTC_BKP1R(r.U32.LoadBits(uint32(mask)))
}
func (r *RRTC_BKP1R) StoreBits(mask, b RTC_BKP1R) { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *RRTC_BKP1R) SetBits(mask RTC_BKP1R)      { r.U32.SetBits(uint32(mask)) }
func (r *RRTC_BKP1R) ClearBits(mask RTC_BKP1R)    { r.U32.ClearBits(uint32(mask)) }
func (r *RRTC_BKP1R) Load() RTC_BKP1R             { return RTC_BKP1R(r.U32.Load()) }
func (r *RRTC_BKP1R) Store(b RTC_BKP1R)           { r.U32.Store(uint32(b)) }

type RMRTC_BKP1R struct{ mmio.UM32 }

func (rm RMRTC_BKP1R) Load() RTC_BKP1R   { return RTC_BKP1R(rm.UM32.Load()) }
func (rm RMRTC_BKP1R) Store(b RTC_BKP1R) { rm.UM32.Store(uint32(b)) }

func (p *Periph) BKP() RMRTC_BKP1R {
	return RMRTC_BKP1R{mmio.UM32{&p.RTC_BKP1R.U32, uint32(BKP)}}
}

type RTC_BKP2R uint32

type RRTC_BKP2R struct{ mmio.U32 }

func (r *RRTC_BKP2R) LoadBits(mask RTC_BKP2R) RTC_BKP2R {
	return RTC_BKP2R(r.U32.LoadBits(uint32(mask)))
}
func (r *RRTC_BKP2R) StoreBits(mask, b RTC_BKP2R) { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *RRTC_BKP2R) SetBits(mask RTC_BKP2R)      { r.U32.SetBits(uint32(mask)) }
func (r *RRTC_BKP2R) ClearBits(mask RTC_BKP2R)    { r.U32.ClearBits(uint32(mask)) }
func (r *RRTC_BKP2R) Load() RTC_BKP2R             { return RTC_BKP2R(r.U32.Load()) }
func (r *RRTC_BKP2R) Store(b RTC_BKP2R)           { r.U32.Store(uint32(b)) }

type RMRTC_BKP2R struct{ mmio.UM32 }

func (rm RMRTC_BKP2R) Load() RTC_BKP2R   { return RTC_BKP2R(rm.UM32.Load()) }
func (rm RMRTC_BKP2R) Store(b RTC_BKP2R) { rm.UM32.Store(uint32(b)) }

func (p *Periph) BKP() RMRTC_BKP2R {
	return RMRTC_BKP2R{mmio.UM32{&p.RTC_BKP2R.U32, uint32(BKP)}}
}

type RTC_BKP3R uint32

type RRTC_BKP3R struct{ mmio.U32 }

func (r *RRTC_BKP3R) LoadBits(mask RTC_BKP3R) RTC_BKP3R {
	return RTC_BKP3R(r.U32.LoadBits(uint32(mask)))
}
func (r *RRTC_BKP3R) StoreBits(mask, b RTC_BKP3R) { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *RRTC_BKP3R) SetBits(mask RTC_BKP3R)      { r.U32.SetBits(uint32(mask)) }
func (r *RRTC_BKP3R) ClearBits(mask RTC_BKP3R)    { r.U32.ClearBits(uint32(mask)) }
func (r *RRTC_BKP3R) Load() RTC_BKP3R             { return RTC_BKP3R(r.U32.Load()) }
func (r *RRTC_BKP3R) Store(b RTC_BKP3R)           { r.U32.Store(uint32(b)) }

type RMRTC_BKP3R struct{ mmio.UM32 }

func (rm RMRTC_BKP3R) Load() RTC_BKP3R   { return RTC_BKP3R(rm.UM32.Load()) }
func (rm RMRTC_BKP3R) Store(b RTC_BKP3R) { rm.UM32.Store(uint32(b)) }

func (p *Periph) BKP() RMRTC_BKP3R {
	return RMRTC_BKP3R{mmio.UM32{&p.RTC_BKP3R.U32, uint32(BKP)}}
}

type RTC_BKP4R uint32

type RRTC_BKP4R struct{ mmio.U32 }

func (r *RRTC_BKP4R) LoadBits(mask RTC_BKP4R) RTC_BKP4R {
	return RTC_BKP4R(r.U32.LoadBits(uint32(mask)))
}
func (r *RRTC_BKP4R) StoreBits(mask, b RTC_BKP4R) { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *RRTC_BKP4R) SetBits(mask RTC_BKP4R)      { r.U32.SetBits(uint32(mask)) }
func (r *RRTC_BKP4R) ClearBits(mask RTC_BKP4R)    { r.U32.ClearBits(uint32(mask)) }
func (r *RRTC_BKP4R) Load() RTC_BKP4R             { return RTC_BKP4R(r.U32.Load()) }
func (r *RRTC_BKP4R) Store(b RTC_BKP4R)           { r.U32.Store(uint32(b)) }

type RMRTC_BKP4R struct{ mmio.UM32 }

func (rm RMRTC_BKP4R) Load() RTC_BKP4R   { return RTC_BKP4R(rm.UM32.Load()) }
func (rm RMRTC_BKP4R) Store(b RTC_BKP4R) { rm.UM32.Store(uint32(b)) }

func (p *Periph) BKP() RMRTC_BKP4R {
	return RMRTC_BKP4R{mmio.UM32{&p.RTC_BKP4R.U32, uint32(BKP)}}
}

type RTC_BKP5R uint32

type RRTC_BKP5R struct{ mmio.U32 }

func (r *RRTC_BKP5R) LoadBits(mask RTC_BKP5R) RTC_BKP5R {
	return RTC_BKP5R(r.U32.LoadBits(uint32(mask)))
}
func (r *RRTC_BKP5R) StoreBits(mask, b RTC_BKP5R) { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *RRTC_BKP5R) SetBits(mask RTC_BKP5R)      { r.U32.SetBits(uint32(mask)) }
func (r *RRTC_BKP5R) ClearBits(mask RTC_BKP5R)    { r.U32.ClearBits(uint32(mask)) }
func (r *RRTC_BKP5R) Load() RTC_BKP5R             { return RTC_BKP5R(r.U32.Load()) }
func (r *RRTC_BKP5R) Store(b RTC_BKP5R)           { r.U32.Store(uint32(b)) }

type RMRTC_BKP5R struct{ mmio.UM32 }

func (rm RMRTC_BKP5R) Load() RTC_BKP5R   { return RTC_BKP5R(rm.UM32.Load()) }
func (rm RMRTC_BKP5R) Store(b RTC_BKP5R) { rm.UM32.Store(uint32(b)) }

func (p *Periph) BKP() RMRTC_BKP5R {
	return RMRTC_BKP5R{mmio.UM32{&p.RTC_BKP5R.U32, uint32(BKP)}}
}

type RTC_BKP6R uint32

type RRTC_BKP6R struct{ mmio.U32 }

func (r *RRTC_BKP6R) LoadBits(mask RTC_BKP6R) RTC_BKP6R {
	return RTC_BKP6R(r.U32.LoadBits(uint32(mask)))
}
func (r *RRTC_BKP6R) StoreBits(mask, b RTC_BKP6R) { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *RRTC_BKP6R) SetBits(mask RTC_BKP6R)      { r.U32.SetBits(uint32(mask)) }
func (r *RRTC_BKP6R) ClearBits(mask RTC_BKP6R)    { r.U32.ClearBits(uint32(mask)) }
func (r *RRTC_BKP6R) Load() RTC_BKP6R             { return RTC_BKP6R(r.U32.Load()) }
func (r *RRTC_BKP6R) Store(b RTC_BKP6R)           { r.U32.Store(uint32(b)) }

type RMRTC_BKP6R struct{ mmio.UM32 }

func (rm RMRTC_BKP6R) Load() RTC_BKP6R   { return RTC_BKP6R(rm.UM32.Load()) }
func (rm RMRTC_BKP6R) Store(b RTC_BKP6R) { rm.UM32.Store(uint32(b)) }

func (p *Periph) BKP() RMRTC_BKP6R {
	return RMRTC_BKP6R{mmio.UM32{&p.RTC_BKP6R.U32, uint32(BKP)}}
}

type RTC_BKP7R uint32

type RRTC_BKP7R struct{ mmio.U32 }

func (r *RRTC_BKP7R) LoadBits(mask RTC_BKP7R) RTC_BKP7R {
	return RTC_BKP7R(r.U32.LoadBits(uint32(mask)))
}
func (r *RRTC_BKP7R) StoreBits(mask, b RTC_BKP7R) { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *RRTC_BKP7R) SetBits(mask RTC_BKP7R)      { r.U32.SetBits(uint32(mask)) }
func (r *RRTC_BKP7R) ClearBits(mask RTC_BKP7R)    { r.U32.ClearBits(uint32(mask)) }
func (r *RRTC_BKP7R) Load() RTC_BKP7R             { return RTC_BKP7R(r.U32.Load()) }
func (r *RRTC_BKP7R) Store(b RTC_BKP7R)           { r.U32.Store(uint32(b)) }

type RMRTC_BKP7R struct{ mmio.UM32 }

func (rm RMRTC_BKP7R) Load() RTC_BKP7R   { return RTC_BKP7R(rm.UM32.Load()) }
func (rm RMRTC_BKP7R) Store(b RTC_BKP7R) { rm.UM32.Store(uint32(b)) }

func (p *Periph) BKP() RMRTC_BKP7R {
	return RMRTC_BKP7R{mmio.UM32{&p.RTC_BKP7R.U32, uint32(BKP)}}
}

type RTC_BKP8R uint32

type RRTC_BKP8R struct{ mmio.U32 }

func (r *RRTC_BKP8R) LoadBits(mask RTC_BKP8R) RTC_BKP8R {
	return RTC_BKP8R(r.U32.LoadBits(uint32(mask)))
}
func (r *RRTC_BKP8R) StoreBits(mask, b RTC_BKP8R) { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *RRTC_BKP8R) SetBits(mask RTC_BKP8R)      { r.U32.SetBits(uint32(mask)) }
func (r *RRTC_BKP8R) ClearBits(mask RTC_BKP8R)    { r.U32.ClearBits(uint32(mask)) }
func (r *RRTC_BKP8R) Load() RTC_BKP8R             { return RTC_BKP8R(r.U32.Load()) }
func (r *RRTC_BKP8R) Store(b RTC_BKP8R)           { r.U32.Store(uint32(b)) }

type RMRTC_BKP8R struct{ mmio.UM32 }

func (rm RMRTC_BKP8R) Load() RTC_BKP8R   { return RTC_BKP8R(rm.UM32.Load()) }
func (rm RMRTC_BKP8R) Store(b RTC_BKP8R) { rm.UM32.Store(uint32(b)) }

func (p *Periph) BKP() RMRTC_BKP8R {
	return RMRTC_BKP8R{mmio.UM32{&p.RTC_BKP8R.U32, uint32(BKP)}}
}

type RTC_BKP9R uint32

type RRTC_BKP9R struct{ mmio.U32 }

func (r *RRTC_BKP9R) LoadBits(mask RTC_BKP9R) RTC_BKP9R {
	return RTC_BKP9R(r.U32.LoadBits(uint32(mask)))
}
func (r *RRTC_BKP9R) StoreBits(mask, b RTC_BKP9R) { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *RRTC_BKP9R) SetBits(mask RTC_BKP9R)      { r.U32.SetBits(uint32(mask)) }
func (r *RRTC_BKP9R) ClearBits(mask RTC_BKP9R)    { r.U32.ClearBits(uint32(mask)) }
func (r *RRTC_BKP9R) Load() RTC_BKP9R             { return RTC_BKP9R(r.U32.Load()) }
func (r *RRTC_BKP9R) Store(b RTC_BKP9R)           { r.U32.Store(uint32(b)) }

type RMRTC_BKP9R struct{ mmio.UM32 }

func (rm RMRTC_BKP9R) Load() RTC_BKP9R   { return RTC_BKP9R(rm.UM32.Load()) }
func (rm RMRTC_BKP9R) Store(b RTC_BKP9R) { rm.UM32.Store(uint32(b)) }

func (p *Periph) BKP() RMRTC_BKP9R {
	return RMRTC_BKP9R{mmio.UM32{&p.RTC_BKP9R.U32, uint32(BKP)}}
}

type RTC_BKP10R uint32

type RRTC_BKP10R struct{ mmio.U32 }

func (r *RRTC_BKP10R) LoadBits(mask RTC_BKP10R) RTC_BKP10R {
	return RTC_BKP10R(r.U32.LoadBits(uint32(mask)))
}
func (r *RRTC_BKP10R) StoreBits(mask, b RTC_BKP10R) { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *RRTC_BKP10R) SetBits(mask RTC_BKP10R)      { r.U32.SetBits(uint32(mask)) }
func (r *RRTC_BKP10R) ClearBits(mask RTC_BKP10R)    { r.U32.ClearBits(uint32(mask)) }
func (r *RRTC_BKP10R) Load() RTC_BKP10R             { return RTC_BKP10R(r.U32.Load()) }
func (r *RRTC_BKP10R) Store(b RTC_BKP10R)           { r.U32.Store(uint32(b)) }

type RMRTC_BKP10R struct{ mmio.UM32 }

func (rm RMRTC_BKP10R) Load() RTC_BKP10R   { return RTC_BKP10R(rm.UM32.Load()) }
func (rm RMRTC_BKP10R) Store(b RTC_BKP10R) { rm.UM32.Store(uint32(b)) }

func (p *Periph) BKP() RMRTC_BKP10R {
	return RMRTC_BKP10R{mmio.UM32{&p.RTC_BKP10R.U32, uint32(BKP)}}
}

type RTC_BKP11R uint32

type RRTC_BKP11R struct{ mmio.U32 }

func (r *RRTC_BKP11R) LoadBits(mask RTC_BKP11R) RTC_BKP11R {
	return RTC_BKP11R(r.U32.LoadBits(uint32(mask)))
}
func (r *RRTC_BKP11R) StoreBits(mask, b RTC_BKP11R) { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *RRTC_BKP11R) SetBits(mask RTC_BKP11R)      { r.U32.SetBits(uint32(mask)) }
func (r *RRTC_BKP11R) ClearBits(mask RTC_BKP11R)    { r.U32.ClearBits(uint32(mask)) }
func (r *RRTC_BKP11R) Load() RTC_BKP11R             { return RTC_BKP11R(r.U32.Load()) }
func (r *RRTC_BKP11R) Store(b RTC_BKP11R)           { r.U32.Store(uint32(b)) }

type RMRTC_BKP11R struct{ mmio.UM32 }

func (rm RMRTC_BKP11R) Load() RTC_BKP11R   { return RTC_BKP11R(rm.UM32.Load()) }
func (rm RMRTC_BKP11R) Store(b RTC_BKP11R) { rm.UM32.Store(uint32(b)) }

func (p *Periph) BKP() RMRTC_BKP11R {
	return RMRTC_BKP11R{mmio.UM32{&p.RTC_BKP11R.U32, uint32(BKP)}}
}

type RTC_BKP12R uint32

type RRTC_BKP12R struct{ mmio.U32 }

func (r *RRTC_BKP12R) LoadBits(mask RTC_BKP12R) RTC_BKP12R {
	return RTC_BKP12R(r.U32.LoadBits(uint32(mask)))
}
func (r *RRTC_BKP12R) StoreBits(mask, b RTC_BKP12R) { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *RRTC_BKP12R) SetBits(mask RTC_BKP12R)      { r.U32.SetBits(uint32(mask)) }
func (r *RRTC_BKP12R) ClearBits(mask RTC_BKP12R)    { r.U32.ClearBits(uint32(mask)) }
func (r *RRTC_BKP12R) Load() RTC_BKP12R             { return RTC_BKP12R(r.U32.Load()) }
func (r *RRTC_BKP12R) Store(b RTC_BKP12R)           { r.U32.Store(uint32(b)) }

type RMRTC_BKP12R struct{ mmio.UM32 }

func (rm RMRTC_BKP12R) Load() RTC_BKP12R   { return RTC_BKP12R(rm.UM32.Load()) }
func (rm RMRTC_BKP12R) Store(b RTC_BKP12R) { rm.UM32.Store(uint32(b)) }

func (p *Periph) BKP() RMRTC_BKP12R {
	return RMRTC_BKP12R{mmio.UM32{&p.RTC_BKP12R.U32, uint32(BKP)}}
}

type RTC_BKP13R uint32

type RRTC_BKP13R struct{ mmio.U32 }

func (r *RRTC_BKP13R) LoadBits(mask RTC_BKP13R) RTC_BKP13R {
	return RTC_BKP13R(r.U32.LoadBits(uint32(mask)))
}
func (r *RRTC_BKP13R) StoreBits(mask, b RTC_BKP13R) { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *RRTC_BKP13R) SetBits(mask RTC_BKP13R)      { r.U32.SetBits(uint32(mask)) }
func (r *RRTC_BKP13R) ClearBits(mask RTC_BKP13R)    { r.U32.ClearBits(uint32(mask)) }
func (r *RRTC_BKP13R) Load() RTC_BKP13R             { return RTC_BKP13R(r.U32.Load()) }
func (r *RRTC_BKP13R) Store(b RTC_BKP13R)           { r.U32.Store(uint32(b)) }

type RMRTC_BKP13R struct{ mmio.UM32 }

func (rm RMRTC_BKP13R) Load() RTC_BKP13R   { return RTC_BKP13R(rm.UM32.Load()) }
func (rm RMRTC_BKP13R) Store(b RTC_BKP13R) { rm.UM32.Store(uint32(b)) }

func (p *Periph) BKP() RMRTC_BKP13R {
	return RMRTC_BKP13R{mmio.UM32{&p.RTC_BKP13R.U32, uint32(BKP)}}
}

type RTC_BKP14R uint32

type RRTC_BKP14R struct{ mmio.U32 }

func (r *RRTC_BKP14R) LoadBits(mask RTC_BKP14R) RTC_BKP14R {
	return RTC_BKP14R(r.U32.LoadBits(uint32(mask)))
}
func (r *RRTC_BKP14R) StoreBits(mask, b RTC_BKP14R) { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *RRTC_BKP14R) SetBits(mask RTC_BKP14R)      { r.U32.SetBits(uint32(mask)) }
func (r *RRTC_BKP14R) ClearBits(mask RTC_BKP14R)    { r.U32.ClearBits(uint32(mask)) }
func (r *RRTC_BKP14R) Load() RTC_BKP14R             { return RTC_BKP14R(r.U32.Load()) }
func (r *RRTC_BKP14R) Store(b RTC_BKP14R)           { r.U32.Store(uint32(b)) }

type RMRTC_BKP14R struct{ mmio.UM32 }

func (rm RMRTC_BKP14R) Load() RTC_BKP14R   { return RTC_BKP14R(rm.UM32.Load()) }
func (rm RMRTC_BKP14R) Store(b RTC_BKP14R) { rm.UM32.Store(uint32(b)) }

func (p *Periph) BKP() RMRTC_BKP14R {
	return RMRTC_BKP14R{mmio.UM32{&p.RTC_BKP14R.U32, uint32(BKP)}}
}

type RTC_BKP15R uint32

type RRTC_BKP15R struct{ mmio.U32 }

func (r *RRTC_BKP15R) LoadBits(mask RTC_BKP15R) RTC_BKP15R {
	return RTC_BKP15R(r.U32.LoadBits(uint32(mask)))
}
func (r *RRTC_BKP15R) StoreBits(mask, b RTC_BKP15R) { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *RRTC_BKP15R) SetBits(mask RTC_BKP15R)      { r.U32.SetBits(uint32(mask)) }
func (r *RRTC_BKP15R) ClearBits(mask RTC_BKP15R)    { r.U32.ClearBits(uint32(mask)) }
func (r *RRTC_BKP15R) Load() RTC_BKP15R             { return RTC_BKP15R(r.U32.Load()) }
func (r *RRTC_BKP15R) Store(b RTC_BKP15R)           { r.U32.Store(uint32(b)) }

type RMRTC_BKP15R struct{ mmio.UM32 }

func (rm RMRTC_BKP15R) Load() RTC_BKP15R   { return RTC_BKP15R(rm.UM32.Load()) }
func (rm RMRTC_BKP15R) Store(b RTC_BKP15R) { rm.UM32.Store(uint32(b)) }

func (p *Periph) BKP() RMRTC_BKP15R {
	return RMRTC_BKP15R{mmio.UM32{&p.RTC_BKP15R.U32, uint32(BKP)}}
}

type RTC_BKP16R uint32

type RRTC_BKP16R struct{ mmio.U32 }

func (r *RRTC_BKP16R) LoadBits(mask RTC_BKP16R) RTC_BKP16R {
	return RTC_BKP16R(r.U32.LoadBits(uint32(mask)))
}
func (r *RRTC_BKP16R) StoreBits(mask, b RTC_BKP16R) { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *RRTC_BKP16R) SetBits(mask RTC_BKP16R)      { r.U32.SetBits(uint32(mask)) }
func (r *RRTC_BKP16R) ClearBits(mask RTC_BKP16R)    { r.U32.ClearBits(uint32(mask)) }
func (r *RRTC_BKP16R) Load() RTC_BKP16R             { return RTC_BKP16R(r.U32.Load()) }
func (r *RRTC_BKP16R) Store(b RTC_BKP16R)           { r.U32.Store(uint32(b)) }

type RMRTC_BKP16R struct{ mmio.UM32 }

func (rm RMRTC_BKP16R) Load() RTC_BKP16R   { return RTC_BKP16R(rm.UM32.Load()) }
func (rm RMRTC_BKP16R) Store(b RTC_BKP16R) { rm.UM32.Store(uint32(b)) }

func (p *Periph) BKP() RMRTC_BKP16R {
	return RMRTC_BKP16R{mmio.UM32{&p.RTC_BKP16R.U32, uint32(BKP)}}
}

type RTC_BKP17R uint32

type RRTC_BKP17R struct{ mmio.U32 }

func (r *RRTC_BKP17R) LoadBits(mask RTC_BKP17R) RTC_BKP17R {
	return RTC_BKP17R(r.U32.LoadBits(uint32(mask)))
}
func (r *RRTC_BKP17R) StoreBits(mask, b RTC_BKP17R) { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *RRTC_BKP17R) SetBits(mask RTC_BKP17R)      { r.U32.SetBits(uint32(mask)) }
func (r *RRTC_BKP17R) ClearBits(mask RTC_BKP17R)    { r.U32.ClearBits(uint32(mask)) }
func (r *RRTC_BKP17R) Load() RTC_BKP17R             { return RTC_BKP17R(r.U32.Load()) }
func (r *RRTC_BKP17R) Store(b RTC_BKP17R)           { r.U32.Store(uint32(b)) }

type RMRTC_BKP17R struct{ mmio.UM32 }

func (rm RMRTC_BKP17R) Load() RTC_BKP17R   { return RTC_BKP17R(rm.UM32.Load()) }
func (rm RMRTC_BKP17R) Store(b RTC_BKP17R) { rm.UM32.Store(uint32(b)) }

func (p *Periph) BKP() RMRTC_BKP17R {
	return RMRTC_BKP17R{mmio.UM32{&p.RTC_BKP17R.U32, uint32(BKP)}}
}

type RTC_BKP18R uint32

type RRTC_BKP18R struct{ mmio.U32 }

func (r *RRTC_BKP18R) LoadBits(mask RTC_BKP18R) RTC_BKP18R {
	return RTC_BKP18R(r.U32.LoadBits(uint32(mask)))
}
func (r *RRTC_BKP18R) StoreBits(mask, b RTC_BKP18R) { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *RRTC_BKP18R) SetBits(mask RTC_BKP18R)      { r.U32.SetBits(uint32(mask)) }
func (r *RRTC_BKP18R) ClearBits(mask RTC_BKP18R)    { r.U32.ClearBits(uint32(mask)) }
func (r *RRTC_BKP18R) Load() RTC_BKP18R             { return RTC_BKP18R(r.U32.Load()) }
func (r *RRTC_BKP18R) Store(b RTC_BKP18R)           { r.U32.Store(uint32(b)) }

type RMRTC_BKP18R struct{ mmio.UM32 }

func (rm RMRTC_BKP18R) Load() RTC_BKP18R   { return RTC_BKP18R(rm.UM32.Load()) }
func (rm RMRTC_BKP18R) Store(b RTC_BKP18R) { rm.UM32.Store(uint32(b)) }

func (p *Periph) BKP() RMRTC_BKP18R {
	return RMRTC_BKP18R{mmio.UM32{&p.RTC_BKP18R.U32, uint32(BKP)}}
}

type RTC_BKP19R uint32

type RRTC_BKP19R struct{ mmio.U32 }

func (r *RRTC_BKP19R) LoadBits(mask RTC_BKP19R) RTC_BKP19R {
	return RTC_BKP19R(r.U32.LoadBits(uint32(mask)))
}
func (r *RRTC_BKP19R) StoreBits(mask, b RTC_BKP19R) { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *RRTC_BKP19R) SetBits(mask RTC_BKP19R)      { r.U32.SetBits(uint32(mask)) }
func (r *RRTC_BKP19R) ClearBits(mask RTC_BKP19R)    { r.U32.ClearBits(uint32(mask)) }
func (r *RRTC_BKP19R) Load() RTC_BKP19R             { return RTC_BKP19R(r.U32.Load()) }
func (r *RRTC_BKP19R) Store(b RTC_BKP19R)           { r.U32.Store(uint32(b)) }

type RMRTC_BKP19R struct{ mmio.UM32 }

func (rm RMRTC_BKP19R) Load() RTC_BKP19R   { return RTC_BKP19R(rm.UM32.Load()) }
func (rm RMRTC_BKP19R) Store(b RTC_BKP19R) { rm.UM32.Store(uint32(b)) }

func (p *Periph) BKP() RMRTC_BKP19R {
	return RMRTC_BKP19R{mmio.UM32{&p.RTC_BKP19R.U32, uint32(BKP)}}
}

type RTC_BKP20R uint32

type RRTC_BKP20R struct{ mmio.U32 }

func (r *RRTC_BKP20R) LoadBits(mask RTC_BKP20R) RTC_BKP20R {
	return RTC_BKP20R(r.U32.LoadBits(uint32(mask)))
}
func (r *RRTC_BKP20R) StoreBits(mask, b RTC_BKP20R) { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *RRTC_BKP20R) SetBits(mask RTC_BKP20R)      { r.U32.SetBits(uint32(mask)) }
func (r *RRTC_BKP20R) ClearBits(mask RTC_BKP20R)    { r.U32.ClearBits(uint32(mask)) }
func (r *RRTC_BKP20R) Load() RTC_BKP20R             { return RTC_BKP20R(r.U32.Load()) }
func (r *RRTC_BKP20R) Store(b RTC_BKP20R)           { r.U32.Store(uint32(b)) }

type RMRTC_BKP20R struct{ mmio.UM32 }

func (rm RMRTC_BKP20R) Load() RTC_BKP20R   { return RTC_BKP20R(rm.UM32.Load()) }
func (rm RMRTC_BKP20R) Store(b RTC_BKP20R) { rm.UM32.Store(uint32(b)) }

func (p *Periph) BKP() RMRTC_BKP20R {
	return RMRTC_BKP20R{mmio.UM32{&p.RTC_BKP20R.U32, uint32(BKP)}}
}

type RTC_BKP21R uint32

type RRTC_BKP21R struct{ mmio.U32 }

func (r *RRTC_BKP21R) LoadBits(mask RTC_BKP21R) RTC_BKP21R {
	return RTC_BKP21R(r.U32.LoadBits(uint32(mask)))
}
func (r *RRTC_BKP21R) StoreBits(mask, b RTC_BKP21R) { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *RRTC_BKP21R) SetBits(mask RTC_BKP21R)      { r.U32.SetBits(uint32(mask)) }
func (r *RRTC_BKP21R) ClearBits(mask RTC_BKP21R)    { r.U32.ClearBits(uint32(mask)) }
func (r *RRTC_BKP21R) Load() RTC_BKP21R             { return RTC_BKP21R(r.U32.Load()) }
func (r *RRTC_BKP21R) Store(b RTC_BKP21R)           { r.U32.Store(uint32(b)) }

type RMRTC_BKP21R struct{ mmio.UM32 }

func (rm RMRTC_BKP21R) Load() RTC_BKP21R   { return RTC_BKP21R(rm.UM32.Load()) }
func (rm RMRTC_BKP21R) Store(b RTC_BKP21R) { rm.UM32.Store(uint32(b)) }

func (p *Periph) BKP() RMRTC_BKP21R {
	return RMRTC_BKP21R{mmio.UM32{&p.RTC_BKP21R.U32, uint32(BKP)}}
}

type RTC_BKP22R uint32

type RRTC_BKP22R struct{ mmio.U32 }

func (r *RRTC_BKP22R) LoadBits(mask RTC_BKP22R) RTC_BKP22R {
	return RTC_BKP22R(r.U32.LoadBits(uint32(mask)))
}
func (r *RRTC_BKP22R) StoreBits(mask, b RTC_BKP22R) { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *RRTC_BKP22R) SetBits(mask RTC_BKP22R)      { r.U32.SetBits(uint32(mask)) }
func (r *RRTC_BKP22R) ClearBits(mask RTC_BKP22R)    { r.U32.ClearBits(uint32(mask)) }
func (r *RRTC_BKP22R) Load() RTC_BKP22R             { return RTC_BKP22R(r.U32.Load()) }
func (r *RRTC_BKP22R) Store(b RTC_BKP22R)           { r.U32.Store(uint32(b)) }

type RMRTC_BKP22R struct{ mmio.UM32 }

func (rm RMRTC_BKP22R) Load() RTC_BKP22R   { return RTC_BKP22R(rm.UM32.Load()) }
func (rm RMRTC_BKP22R) Store(b RTC_BKP22R) { rm.UM32.Store(uint32(b)) }

func (p *Periph) BKP() RMRTC_BKP22R {
	return RMRTC_BKP22R{mmio.UM32{&p.RTC_BKP22R.U32, uint32(BKP)}}
}

type RTC_BKP23R uint32

type RRTC_BKP23R struct{ mmio.U32 }

func (r *RRTC_BKP23R) LoadBits(mask RTC_BKP23R) RTC_BKP23R {
	return RTC_BKP23R(r.U32.LoadBits(uint32(mask)))
}
func (r *RRTC_BKP23R) StoreBits(mask, b RTC_BKP23R) { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *RRTC_BKP23R) SetBits(mask RTC_BKP23R)      { r.U32.SetBits(uint32(mask)) }
func (r *RRTC_BKP23R) ClearBits(mask RTC_BKP23R)    { r.U32.ClearBits(uint32(mask)) }
func (r *RRTC_BKP23R) Load() RTC_BKP23R             { return RTC_BKP23R(r.U32.Load()) }
func (r *RRTC_BKP23R) Store(b RTC_BKP23R)           { r.U32.Store(uint32(b)) }

type RMRTC_BKP23R struct{ mmio.UM32 }

func (rm RMRTC_BKP23R) Load() RTC_BKP23R   { return RTC_BKP23R(rm.UM32.Load()) }
func (rm RMRTC_BKP23R) Store(b RTC_BKP23R) { rm.UM32.Store(uint32(b)) }

func (p *Periph) BKP() RMRTC_BKP23R {
	return RMRTC_BKP23R{mmio.UM32{&p.RTC_BKP23R.U32, uint32(BKP)}}
}

type RTC_BKP24R uint32

type RRTC_BKP24R struct{ mmio.U32 }

func (r *RRTC_BKP24R) LoadBits(mask RTC_BKP24R) RTC_BKP24R {
	return RTC_BKP24R(r.U32.LoadBits(uint32(mask)))
}
func (r *RRTC_BKP24R) StoreBits(mask, b RTC_BKP24R) { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *RRTC_BKP24R) SetBits(mask RTC_BKP24R)      { r.U32.SetBits(uint32(mask)) }
func (r *RRTC_BKP24R) ClearBits(mask RTC_BKP24R)    { r.U32.ClearBits(uint32(mask)) }
func (r *RRTC_BKP24R) Load() RTC_BKP24R             { return RTC_BKP24R(r.U32.Load()) }
func (r *RRTC_BKP24R) Store(b RTC_BKP24R)           { r.U32.Store(uint32(b)) }

type RMRTC_BKP24R struct{ mmio.UM32 }

func (rm RMRTC_BKP24R) Load() RTC_BKP24R   { return RTC_BKP24R(rm.UM32.Load()) }
func (rm RMRTC_BKP24R) Store(b RTC_BKP24R) { rm.UM32.Store(uint32(b)) }

func (p *Periph) BKP() RMRTC_BKP24R {
	return RMRTC_BKP24R{mmio.UM32{&p.RTC_BKP24R.U32, uint32(BKP)}}
}

type RTC_BKP25R uint32

type RRTC_BKP25R struct{ mmio.U32 }

func (r *RRTC_BKP25R) LoadBits(mask RTC_BKP25R) RTC_BKP25R {
	return RTC_BKP25R(r.U32.LoadBits(uint32(mask)))
}
func (r *RRTC_BKP25R) StoreBits(mask, b RTC_BKP25R) { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *RRTC_BKP25R) SetBits(mask RTC_BKP25R)      { r.U32.SetBits(uint32(mask)) }
func (r *RRTC_BKP25R) ClearBits(mask RTC_BKP25R)    { r.U32.ClearBits(uint32(mask)) }
func (r *RRTC_BKP25R) Load() RTC_BKP25R             { return RTC_BKP25R(r.U32.Load()) }
func (r *RRTC_BKP25R) Store(b RTC_BKP25R)           { r.U32.Store(uint32(b)) }

type RMRTC_BKP25R struct{ mmio.UM32 }

func (rm RMRTC_BKP25R) Load() RTC_BKP25R   { return RTC_BKP25R(rm.UM32.Load()) }
func (rm RMRTC_BKP25R) Store(b RTC_BKP25R) { rm.UM32.Store(uint32(b)) }

func (p *Periph) BKP() RMRTC_BKP25R {
	return RMRTC_BKP25R{mmio.UM32{&p.RTC_BKP25R.U32, uint32(BKP)}}
}

type RTC_BKP26R uint32

type RRTC_BKP26R struct{ mmio.U32 }

func (r *RRTC_BKP26R) LoadBits(mask RTC_BKP26R) RTC_BKP26R {
	return RTC_BKP26R(r.U32.LoadBits(uint32(mask)))
}
func (r *RRTC_BKP26R) StoreBits(mask, b RTC_BKP26R) { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *RRTC_BKP26R) SetBits(mask RTC_BKP26R)      { r.U32.SetBits(uint32(mask)) }
func (r *RRTC_BKP26R) ClearBits(mask RTC_BKP26R)    { r.U32.ClearBits(uint32(mask)) }
func (r *RRTC_BKP26R) Load() RTC_BKP26R             { return RTC_BKP26R(r.U32.Load()) }
func (r *RRTC_BKP26R) Store(b RTC_BKP26R)           { r.U32.Store(uint32(b)) }

type RMRTC_BKP26R struct{ mmio.UM32 }

func (rm RMRTC_BKP26R) Load() RTC_BKP26R   { return RTC_BKP26R(rm.UM32.Load()) }
func (rm RMRTC_BKP26R) Store(b RTC_BKP26R) { rm.UM32.Store(uint32(b)) }

func (p *Periph) BKP() RMRTC_BKP26R {
	return RMRTC_BKP26R{mmio.UM32{&p.RTC_BKP26R.U32, uint32(BKP)}}
}

type RTC_BKP27R uint32

type RRTC_BKP27R struct{ mmio.U32 }

func (r *RRTC_BKP27R) LoadBits(mask RTC_BKP27R) RTC_BKP27R {
	return RTC_BKP27R(r.U32.LoadBits(uint32(mask)))
}
func (r *RRTC_BKP27R) StoreBits(mask, b RTC_BKP27R) { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *RRTC_BKP27R) SetBits(mask RTC_BKP27R)      { r.U32.SetBits(uint32(mask)) }
func (r *RRTC_BKP27R) ClearBits(mask RTC_BKP27R)    { r.U32.ClearBits(uint32(mask)) }
func (r *RRTC_BKP27R) Load() RTC_BKP27R             { return RTC_BKP27R(r.U32.Load()) }
func (r *RRTC_BKP27R) Store(b RTC_BKP27R)           { r.U32.Store(uint32(b)) }

type RMRTC_BKP27R struct{ mmio.UM32 }

func (rm RMRTC_BKP27R) Load() RTC_BKP27R   { return RTC_BKP27R(rm.UM32.Load()) }
func (rm RMRTC_BKP27R) Store(b RTC_BKP27R) { rm.UM32.Store(uint32(b)) }

func (p *Periph) BKP() RMRTC_BKP27R {
	return RMRTC_BKP27R{mmio.UM32{&p.RTC_BKP27R.U32, uint32(BKP)}}
}

type RTC_BKP28R uint32

type RRTC_BKP28R struct{ mmio.U32 }

func (r *RRTC_BKP28R) LoadBits(mask RTC_BKP28R) RTC_BKP28R {
	return RTC_BKP28R(r.U32.LoadBits(uint32(mask)))
}
func (r *RRTC_BKP28R) StoreBits(mask, b RTC_BKP28R) { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *RRTC_BKP28R) SetBits(mask RTC_BKP28R)      { r.U32.SetBits(uint32(mask)) }
func (r *RRTC_BKP28R) ClearBits(mask RTC_BKP28R)    { r.U32.ClearBits(uint32(mask)) }
func (r *RRTC_BKP28R) Load() RTC_BKP28R             { return RTC_BKP28R(r.U32.Load()) }
func (r *RRTC_BKP28R) Store(b RTC_BKP28R)           { r.U32.Store(uint32(b)) }

type RMRTC_BKP28R struct{ mmio.UM32 }

func (rm RMRTC_BKP28R) Load() RTC_BKP28R   { return RTC_BKP28R(rm.UM32.Load()) }
func (rm RMRTC_BKP28R) Store(b RTC_BKP28R) { rm.UM32.Store(uint32(b)) }

func (p *Periph) BKP() RMRTC_BKP28R {
	return RMRTC_BKP28R{mmio.UM32{&p.RTC_BKP28R.U32, uint32(BKP)}}
}

type RTC_BKP29R uint32

type RRTC_BKP29R struct{ mmio.U32 }

func (r *RRTC_BKP29R) LoadBits(mask RTC_BKP29R) RTC_BKP29R {
	return RTC_BKP29R(r.U32.LoadBits(uint32(mask)))
}
func (r *RRTC_BKP29R) StoreBits(mask, b RTC_BKP29R) { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *RRTC_BKP29R) SetBits(mask RTC_BKP29R)      { r.U32.SetBits(uint32(mask)) }
func (r *RRTC_BKP29R) ClearBits(mask RTC_BKP29R)    { r.U32.ClearBits(uint32(mask)) }
func (r *RRTC_BKP29R) Load() RTC_BKP29R             { return RTC_BKP29R(r.U32.Load()) }
func (r *RRTC_BKP29R) Store(b RTC_BKP29R)           { r.U32.Store(uint32(b)) }

type RMRTC_BKP29R struct{ mmio.UM32 }

func (rm RMRTC_BKP29R) Load() RTC_BKP29R   { return RTC_BKP29R(rm.UM32.Load()) }
func (rm RMRTC_BKP29R) Store(b RTC_BKP29R) { rm.UM32.Store(uint32(b)) }

func (p *Periph) BKP() RMRTC_BKP29R {
	return RMRTC_BKP29R{mmio.UM32{&p.RTC_BKP29R.U32, uint32(BKP)}}
}

type RTC_BKP30R uint32

type RRTC_BKP30R struct{ mmio.U32 }

func (r *RRTC_BKP30R) LoadBits(mask RTC_BKP30R) RTC_BKP30R {
	return RTC_BKP30R(r.U32.LoadBits(uint32(mask)))
}
func (r *RRTC_BKP30R) StoreBits(mask, b RTC_BKP30R) { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *RRTC_BKP30R) SetBits(mask RTC_BKP30R)      { r.U32.SetBits(uint32(mask)) }
func (r *RRTC_BKP30R) ClearBits(mask RTC_BKP30R)    { r.U32.ClearBits(uint32(mask)) }
func (r *RRTC_BKP30R) Load() RTC_BKP30R             { return RTC_BKP30R(r.U32.Load()) }
func (r *RRTC_BKP30R) Store(b RTC_BKP30R)           { r.U32.Store(uint32(b)) }

type RMRTC_BKP30R struct{ mmio.UM32 }

func (rm RMRTC_BKP30R) Load() RTC_BKP30R   { return RTC_BKP30R(rm.UM32.Load()) }
func (rm RMRTC_BKP30R) Store(b RTC_BKP30R) { rm.UM32.Store(uint32(b)) }

func (p *Periph) BKP() RMRTC_BKP30R {
	return RMRTC_BKP30R{mmio.UM32{&p.RTC_BKP30R.U32, uint32(BKP)}}
}

type RTC_BKP31R uint32

type RRTC_BKP31R struct{ mmio.U32 }

func (r *RRTC_BKP31R) LoadBits(mask RTC_BKP31R) RTC_BKP31R {
	return RTC_BKP31R(r.U32.LoadBits(uint32(mask)))
}
func (r *RRTC_BKP31R) StoreBits(mask, b RTC_BKP31R) { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *RRTC_BKP31R) SetBits(mask RTC_BKP31R)      { r.U32.SetBits(uint32(mask)) }
func (r *RRTC_BKP31R) ClearBits(mask RTC_BKP31R)    { r.U32.ClearBits(uint32(mask)) }
func (r *RRTC_BKP31R) Load() RTC_BKP31R             { return RTC_BKP31R(r.U32.Load()) }
func (r *RRTC_BKP31R) Store(b RTC_BKP31R)           { r.U32.Store(uint32(b)) }

type RMRTC_BKP31R struct{ mmio.UM32 }

func (rm RMRTC_BKP31R) Load() RTC_BKP31R   { return RTC_BKP31R(rm.UM32.Load()) }
func (rm RMRTC_BKP31R) Store(b RTC_BKP31R) { rm.UM32.Store(uint32(b)) }

func (p *Periph) BKP() RMRTC_BKP31R {
	return RMRTC_BKP31R{mmio.UM32{&p.RTC_BKP31R.U32, uint32(BKP)}}
}
